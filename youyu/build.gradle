plugins {
    id 'com.android.library'
    id 'com.google.protobuf'
}

apply plugin: 'com.github.dcendents.android-maven'
group='com.github.akapwsd'

android {
    compileSdkVersion 30

    sourceSets {
        main {
            proto {
                //main目录新建proto目录
                srcDir 'src/main/proto'
                include '**/*.proto'
            }
            java {
                srcDir 'src/main/java'
            }
        }
    }

    //构建task
    protobuf {
        protoc {
            artifact = 'com.google.protobuf:protoc:3.1.0'
        }

        generateProtoTasks {
            all().each { task ->
                task.builtins {
                    remove java
                }
                task.builtins {
                    java {}
                    // Add cpp output without any option.
                    // DO NOT omit the braces if you want this builtin to be added.
                    cpp {}
                }
            }
        }
        //生成目录
        generatedFilesBaseDir = "$projectDir/src/generated"
    }

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.0.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'io.reactivex.rxjava3:rxjava:3.1.6'
    api 'io.reactivex.rxjava3:rxandroid:3.0.2'
    api 'io.agora.rtc:full-sdk:3.6.0.1'

    api 'com.google.protobuf:protobuf-java:3.11.1'
    api 'com.google.protobuf:protoc:3.1.0'
    api 'com.googlecode.protobuf-java-format:protobuf-java-format:1.4'

    api 'com.squareup.okhttp3:okhttp:4.10.0'
    api 'com.squareup.okhttp3:logging-interceptor:3.8.1'
    api 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    api 'com.squareup.retrofit2:converter-gson:2.3.0'
    api 'com.squareup.retrofit2:converter-protobuf:2.3.0'
    api 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
}

task makeJar(type: Jar, dependsOn: ['build']) {
    //删除存在的
    delete 'build/libs/youyu.jar'
    archiveName 'youyu.jar'//目标jar包名称
    //设置拷贝的文件
    from(project.zipTree('build/intermediates/aar_main_jar/release/classes.jar'))
    //此行很重要，否则该项目编写的代码无法打进jar包，具体路径与gradle版本有关，//之前网上说的都是老版本的路径，害我浪费半天时间
    from(project.zipTree("libs/retrofit-2.9.0.jar"))
    from(project.zipTree("libs/rxjava-3.1.6.jar"))
    include('com/**')
    include('**/')
    exclude('com.example/BuildConfig.class')//需排除一些无用文件
    exclude('com.example/BuildConfig\$*.class')
    exclude('**/R.class')
    exclude('**/R\$*.class')
    //打进jar包后的文件目录
    destinationDir = file('build/libs')
}

def androidSDKDir = project.android.sdkDirectory.absolutePath
def androidJarDir = androidSDKDir.toString() + '/platforms/' + "${android.compileSdkVersion}" + '/android.jar'

task proguardMyLib(type: proguard.gradle.ProGuardTask, dependsOn: ['makeJar']) {
    injars('build/libs/youyu.jar')
    outjars('build/libs/pro-youyu.jar')
    libraryjars(androidJarDir)
    configuration 'proguard-rules.pro'
}