// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: channelImform.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "channelImform.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace uyujoy {
namespace com {
namespace api {
namespace channel {
namespace frontend {

namespace {

const ::google::protobuf::Descriptor* channelStateChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  channelStateChange_reflection_ = NULL;
const ::google::protobuf::Descriptor* channelUserStateChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  channelUserStateChange_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_channelImform_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_channelImform_2eproto() {
  protobuf_AddDesc_channelImform_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "channelImform.proto");
  GOOGLE_CHECK(file != NULL);
  channelStateChange_descriptor_ = file->message_type(0);
  static const int channelStateChange_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(channelStateChange, ch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(channelStateChange, reason_),
  };
  channelStateChange_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      channelStateChange_descriptor_,
      channelStateChange::internal_default_instance(),
      channelStateChange_offsets_,
      -1,
      -1,
      -1,
      sizeof(channelStateChange),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(channelStateChange, _internal_metadata_));
  channelUserStateChange_descriptor_ = file->message_type(1);
  static const int channelUserStateChange_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(channelUserStateChange, chu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(channelUserStateChange, reason_),
  };
  channelUserStateChange_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      channelUserStateChange_descriptor_,
      channelUserStateChange::internal_default_instance(),
      channelUserStateChange_offsets_,
      -1,
      -1,
      -1,
      sizeof(channelUserStateChange),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(channelUserStateChange, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_channelImform_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      channelStateChange_descriptor_, channelStateChange::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      channelUserStateChange_descriptor_, channelUserStateChange::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_channelImform_2eproto() {
  channelStateChange_default_instance_.Shutdown();
  delete channelStateChange_reflection_;
  channelUserStateChange_default_instance_.Shutdown();
  delete channelUserStateChange_reflection_;
}

void protobuf_InitDefaults_channelImform_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::uyujoy::com::api::channel::frontend::protobuf_InitDefaults_channelBase_2eproto();
  channelStateChange_default_instance_.DefaultConstruct();
  channelUserStateChange_default_instance_.DefaultConstruct();
  channelStateChange_default_instance_.get_mutable()->InitAsDefaultInstance();
  channelUserStateChange_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_channelImform_2eproto_once_);
void protobuf_InitDefaults_channelImform_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_channelImform_2eproto_once_,
                 &protobuf_InitDefaults_channelImform_2eproto_impl);
}
void protobuf_AddDesc_channelImform_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_channelImform_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023channelImform.proto\022\037uyujoy.com.api.ch"
    "annel.frontend\032\021channelBase.proto\"Z\n\022cha"
    "nnelStateChange\0224\n\002ch\030\001 \001(\0132(.uyujoy.com"
    ".api.channel.frontend.channel\022\016\n\006reason\030"
    "\002 \001(\r\"c\n\026channelUserStateChange\0229\n\003chu\030\001"
    " \001(\0132,.uyujoy.com.api.channel.frontend.c"
    "hannelUser\022\016\n\006reason\030\002 \001(\rB*Z(uyujoy.com"
    "/pass/protogen/channel;channelb\006proto3", 318);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "channelImform.proto", &protobuf_RegisterTypes);
  ::uyujoy::com::api::channel::frontend::protobuf_AddDesc_channelBase_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_channelImform_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_channelImform_2eproto_once_);
void protobuf_AddDesc_channelImform_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_channelImform_2eproto_once_,
                 &protobuf_AddDesc_channelImform_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_channelImform_2eproto {
  StaticDescriptorInitializer_channelImform_2eproto() {
    protobuf_AddDesc_channelImform_2eproto();
  }
} static_descriptor_initializer_channelImform_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int channelStateChange::kChFieldNumber;
const int channelStateChange::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

channelStateChange::channelStateChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_channelImform_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:uyujoy.com.api.channel.frontend.channelStateChange)
}

void channelStateChange::InitAsDefaultInstance() {
  ch_ = const_cast< ::uyujoy::com::api::channel::frontend::channel*>(
      ::uyujoy::com::api::channel::frontend::channel::internal_default_instance());
}

channelStateChange::channelStateChange(const channelStateChange& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:uyujoy.com.api.channel.frontend.channelStateChange)
}

void channelStateChange::SharedCtor() {
  ch_ = NULL;
  reason_ = 0u;
  _cached_size_ = 0;
}

channelStateChange::~channelStateChange() {
  // @@protoc_insertion_point(destructor:uyujoy.com.api.channel.frontend.channelStateChange)
  SharedDtor();
}

void channelStateChange::SharedDtor() {
  if (this != &channelStateChange_default_instance_.get()) {
    delete ch_;
  }
}

void channelStateChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* channelStateChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return channelStateChange_descriptor_;
}

const channelStateChange& channelStateChange::default_instance() {
  protobuf_InitDefaults_channelImform_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<channelStateChange> channelStateChange_default_instance_;

channelStateChange* channelStateChange::New(::google::protobuf::Arena* arena) const {
  channelStateChange* n = new channelStateChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void channelStateChange::Clear() {
// @@protoc_insertion_point(message_clear_start:uyujoy.com.api.channel.frontend.channelStateChange)
  if (GetArenaNoVirtual() == NULL && ch_ != NULL) delete ch_;
  ch_ = NULL;
  reason_ = 0u;
}

bool channelStateChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:uyujoy.com.api.channel.frontend.channelStateChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .uyujoy.com.api.channel.frontend.channel ch = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ch()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_reason;
        break;
      }

      // optional uint32 reason = 2;
      case 2: {
        if (tag == 16) {
         parse_reason:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:uyujoy.com.api.channel.frontend.channelStateChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:uyujoy.com.api.channel.frontend.channelStateChange)
  return false;
#undef DO_
}

void channelStateChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:uyujoy.com.api.channel.frontend.channelStateChange)
  // optional .uyujoy.com.api.channel.frontend.channel ch = 1;
  if (this->has_ch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->ch_, output);
  }

  // optional uint32 reason = 2;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->reason(), output);
  }

  // @@protoc_insertion_point(serialize_end:uyujoy.com.api.channel.frontend.channelStateChange)
}

::google::protobuf::uint8* channelStateChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:uyujoy.com.api.channel.frontend.channelStateChange)
  // optional .uyujoy.com.api.channel.frontend.channel ch = 1;
  if (this->has_ch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->ch_, false, target);
  }

  // optional uint32 reason = 2;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->reason(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:uyujoy.com.api.channel.frontend.channelStateChange)
  return target;
}

size_t channelStateChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uyujoy.com.api.channel.frontend.channelStateChange)
  size_t total_size = 0;

  // optional .uyujoy.com.api.channel.frontend.channel ch = 1;
  if (this->has_ch()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ch_);
  }

  // optional uint32 reason = 2;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void channelStateChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:uyujoy.com.api.channel.frontend.channelStateChange)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const channelStateChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const channelStateChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:uyujoy.com.api.channel.frontend.channelStateChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:uyujoy.com.api.channel.frontend.channelStateChange)
    UnsafeMergeFrom(*source);
  }
}

void channelStateChange::MergeFrom(const channelStateChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:uyujoy.com.api.channel.frontend.channelStateChange)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void channelStateChange::UnsafeMergeFrom(const channelStateChange& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_ch()) {
    mutable_ch()->::uyujoy::com::api::channel::frontend::channel::MergeFrom(from.ch());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void channelStateChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:uyujoy.com.api.channel.frontend.channelStateChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void channelStateChange::CopyFrom(const channelStateChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uyujoy.com.api.channel.frontend.channelStateChange)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool channelStateChange::IsInitialized() const {

  return true;
}

void channelStateChange::Swap(channelStateChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void channelStateChange::InternalSwap(channelStateChange* other) {
  std::swap(ch_, other->ch_);
  std::swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata channelStateChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = channelStateChange_descriptor_;
  metadata.reflection = channelStateChange_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// channelStateChange

// optional .uyujoy.com.api.channel.frontend.channel ch = 1;
bool channelStateChange::has_ch() const {
  return this != internal_default_instance() && ch_ != NULL;
}
void channelStateChange::clear_ch() {
  if (GetArenaNoVirtual() == NULL && ch_ != NULL) delete ch_;
  ch_ = NULL;
}
const ::uyujoy::com::api::channel::frontend::channel& channelStateChange::ch() const {
  // @@protoc_insertion_point(field_get:uyujoy.com.api.channel.frontend.channelStateChange.ch)
  return ch_ != NULL ? *ch_
                         : *::uyujoy::com::api::channel::frontend::channel::internal_default_instance();
}
::uyujoy::com::api::channel::frontend::channel* channelStateChange::mutable_ch() {
  
  if (ch_ == NULL) {
    ch_ = new ::uyujoy::com::api::channel::frontend::channel;
  }
  // @@protoc_insertion_point(field_mutable:uyujoy.com.api.channel.frontend.channelStateChange.ch)
  return ch_;
}
::uyujoy::com::api::channel::frontend::channel* channelStateChange::release_ch() {
  // @@protoc_insertion_point(field_release:uyujoy.com.api.channel.frontend.channelStateChange.ch)
  
  ::uyujoy::com::api::channel::frontend::channel* temp = ch_;
  ch_ = NULL;
  return temp;
}
void channelStateChange::set_allocated_ch(::uyujoy::com::api::channel::frontend::channel* ch) {
  delete ch_;
  ch_ = ch;
  if (ch) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:uyujoy.com.api.channel.frontend.channelStateChange.ch)
}

// optional uint32 reason = 2;
void channelStateChange::clear_reason() {
  reason_ = 0u;
}
::google::protobuf::uint32 channelStateChange::reason() const {
  // @@protoc_insertion_point(field_get:uyujoy.com.api.channel.frontend.channelStateChange.reason)
  return reason_;
}
void channelStateChange::set_reason(::google::protobuf::uint32 value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.com.api.channel.frontend.channelStateChange.reason)
}

inline const channelStateChange* channelStateChange::internal_default_instance() {
  return &channelStateChange_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int channelUserStateChange::kChuFieldNumber;
const int channelUserStateChange::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

channelUserStateChange::channelUserStateChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_channelImform_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:uyujoy.com.api.channel.frontend.channelUserStateChange)
}

void channelUserStateChange::InitAsDefaultInstance() {
  chu_ = const_cast< ::uyujoy::com::api::channel::frontend::channelUser*>(
      ::uyujoy::com::api::channel::frontend::channelUser::internal_default_instance());
}

channelUserStateChange::channelUserStateChange(const channelUserStateChange& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:uyujoy.com.api.channel.frontend.channelUserStateChange)
}

void channelUserStateChange::SharedCtor() {
  chu_ = NULL;
  reason_ = 0u;
  _cached_size_ = 0;
}

channelUserStateChange::~channelUserStateChange() {
  // @@protoc_insertion_point(destructor:uyujoy.com.api.channel.frontend.channelUserStateChange)
  SharedDtor();
}

void channelUserStateChange::SharedDtor() {
  if (this != &channelUserStateChange_default_instance_.get()) {
    delete chu_;
  }
}

void channelUserStateChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* channelUserStateChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return channelUserStateChange_descriptor_;
}

const channelUserStateChange& channelUserStateChange::default_instance() {
  protobuf_InitDefaults_channelImform_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<channelUserStateChange> channelUserStateChange_default_instance_;

channelUserStateChange* channelUserStateChange::New(::google::protobuf::Arena* arena) const {
  channelUserStateChange* n = new channelUserStateChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void channelUserStateChange::Clear() {
// @@protoc_insertion_point(message_clear_start:uyujoy.com.api.channel.frontend.channelUserStateChange)
  if (GetArenaNoVirtual() == NULL && chu_ != NULL) delete chu_;
  chu_ = NULL;
  reason_ = 0u;
}

bool channelUserStateChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:uyujoy.com.api.channel.frontend.channelUserStateChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .uyujoy.com.api.channel.frontend.channelUser chu = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_chu()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_reason;
        break;
      }

      // optional uint32 reason = 2;
      case 2: {
        if (tag == 16) {
         parse_reason:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:uyujoy.com.api.channel.frontend.channelUserStateChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:uyujoy.com.api.channel.frontend.channelUserStateChange)
  return false;
#undef DO_
}

void channelUserStateChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:uyujoy.com.api.channel.frontend.channelUserStateChange)
  // optional .uyujoy.com.api.channel.frontend.channelUser chu = 1;
  if (this->has_chu()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->chu_, output);
  }

  // optional uint32 reason = 2;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->reason(), output);
  }

  // @@protoc_insertion_point(serialize_end:uyujoy.com.api.channel.frontend.channelUserStateChange)
}

::google::protobuf::uint8* channelUserStateChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:uyujoy.com.api.channel.frontend.channelUserStateChange)
  // optional .uyujoy.com.api.channel.frontend.channelUser chu = 1;
  if (this->has_chu()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->chu_, false, target);
  }

  // optional uint32 reason = 2;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->reason(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:uyujoy.com.api.channel.frontend.channelUserStateChange)
  return target;
}

size_t channelUserStateChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uyujoy.com.api.channel.frontend.channelUserStateChange)
  size_t total_size = 0;

  // optional .uyujoy.com.api.channel.frontend.channelUser chu = 1;
  if (this->has_chu()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->chu_);
  }

  // optional uint32 reason = 2;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void channelUserStateChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:uyujoy.com.api.channel.frontend.channelUserStateChange)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const channelUserStateChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const channelUserStateChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:uyujoy.com.api.channel.frontend.channelUserStateChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:uyujoy.com.api.channel.frontend.channelUserStateChange)
    UnsafeMergeFrom(*source);
  }
}

void channelUserStateChange::MergeFrom(const channelUserStateChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:uyujoy.com.api.channel.frontend.channelUserStateChange)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void channelUserStateChange::UnsafeMergeFrom(const channelUserStateChange& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_chu()) {
    mutable_chu()->::uyujoy::com::api::channel::frontend::channelUser::MergeFrom(from.chu());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void channelUserStateChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:uyujoy.com.api.channel.frontend.channelUserStateChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void channelUserStateChange::CopyFrom(const channelUserStateChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uyujoy.com.api.channel.frontend.channelUserStateChange)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool channelUserStateChange::IsInitialized() const {

  return true;
}

void channelUserStateChange::Swap(channelUserStateChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void channelUserStateChange::InternalSwap(channelUserStateChange* other) {
  std::swap(chu_, other->chu_);
  std::swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata channelUserStateChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = channelUserStateChange_descriptor_;
  metadata.reflection = channelUserStateChange_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// channelUserStateChange

// optional .uyujoy.com.api.channel.frontend.channelUser chu = 1;
bool channelUserStateChange::has_chu() const {
  return this != internal_default_instance() && chu_ != NULL;
}
void channelUserStateChange::clear_chu() {
  if (GetArenaNoVirtual() == NULL && chu_ != NULL) delete chu_;
  chu_ = NULL;
}
const ::uyujoy::com::api::channel::frontend::channelUser& channelUserStateChange::chu() const {
  // @@protoc_insertion_point(field_get:uyujoy.com.api.channel.frontend.channelUserStateChange.chu)
  return chu_ != NULL ? *chu_
                         : *::uyujoy::com::api::channel::frontend::channelUser::internal_default_instance();
}
::uyujoy::com::api::channel::frontend::channelUser* channelUserStateChange::mutable_chu() {
  
  if (chu_ == NULL) {
    chu_ = new ::uyujoy::com::api::channel::frontend::channelUser;
  }
  // @@protoc_insertion_point(field_mutable:uyujoy.com.api.channel.frontend.channelUserStateChange.chu)
  return chu_;
}
::uyujoy::com::api::channel::frontend::channelUser* channelUserStateChange::release_chu() {
  // @@protoc_insertion_point(field_release:uyujoy.com.api.channel.frontend.channelUserStateChange.chu)
  
  ::uyujoy::com::api::channel::frontend::channelUser* temp = chu_;
  chu_ = NULL;
  return temp;
}
void channelUserStateChange::set_allocated_chu(::uyujoy::com::api::channel::frontend::channelUser* chu) {
  delete chu_;
  chu_ = chu;
  if (chu) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:uyujoy.com.api.channel.frontend.channelUserStateChange.chu)
}

// optional uint32 reason = 2;
void channelUserStateChange::clear_reason() {
  reason_ = 0u;
}
::google::protobuf::uint32 channelUserStateChange::reason() const {
  // @@protoc_insertion_point(field_get:uyujoy.com.api.channel.frontend.channelUserStateChange.reason)
  return reason_;
}
void channelUserStateChange::set_reason(::google::protobuf::uint32 value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.com.api.channel.frontend.channelUserStateChange.reason)
}

inline const channelUserStateChange* channelUserStateChange::internal_default_instance() {
  return &channelUserStateChange_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace frontend
}  // namespace channel
}  // namespace api
}  // namespace com
}  // namespace uyujoy

// @@protoc_insertion_point(global_scope)
