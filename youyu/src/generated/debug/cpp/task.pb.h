// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: task.proto

#ifndef PROTOBUF_task_2eproto__INCLUDED
#define PROTOBUF_task_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace batprotobuf {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_task_2eproto();
void protobuf_InitDefaults_task_2eproto();
void protobuf_AssignDesc_task_2eproto();
void protobuf_ShutdownFile_task_2eproto();

class get_remaining_task_num_req;
class get_remaining_task_num_res;
class get_task_list_req;
class get_task_list_res;
class task;

// ===================================================================

class task : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:batprotobuf.task) */ {
 public:
  task();
  virtual ~task();

  task(const task& from);

  inline task& operator=(const task& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const task& default_instance();

  static const task* internal_default_instance();

  void Swap(task* other);

  // implements Message ----------------------------------------------

  inline task* New() const { return New(NULL); }

  task* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const task& from);
  void MergeFrom(const task& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(task* other);
  void UnsafeMergeFrom(const task& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cate = 1;
  void clear_cate();
  static const int kCateFieldNumber = 1;
  ::google::protobuf::uint32 cate() const;
  void set_cate(::google::protobuf::uint32 value);

  // optional uint32 diamonds = 2;
  void clear_diamonds();
  static const int kDiamondsFieldNumber = 2;
  ::google::protobuf::uint32 diamonds() const;
  void set_diamonds(::google::protobuf::uint32 value);

  // optional uint32 finished = 3;
  void clear_finished();
  static const int kFinishedFieldNumber = 3;
  ::google::protobuf::uint32 finished() const;
  void set_finished(::google::protobuf::uint32 value);

  // optional uint32 total = 4;
  void clear_total();
  static const int kTotalFieldNumber = 4;
  ::google::protobuf::uint32 total() const;
  void set_total(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:batprotobuf.task)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 cate_;
  ::google::protobuf::uint32 diamonds_;
  ::google::protobuf::uint32 finished_;
  ::google::protobuf::uint32 total_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_task_2eproto_impl();
  friend void  protobuf_AddDesc_task_2eproto_impl();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<task> task_default_instance_;

// -------------------------------------------------------------------

class get_task_list_req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:batprotobuf.get_task_list_req) */ {
 public:
  get_task_list_req();
  virtual ~get_task_list_req();

  get_task_list_req(const get_task_list_req& from);

  inline get_task_list_req& operator=(const get_task_list_req& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const get_task_list_req& default_instance();

  static const get_task_list_req* internal_default_instance();

  void Swap(get_task_list_req* other);

  // implements Message ----------------------------------------------

  inline get_task_list_req* New() const { return New(NULL); }

  get_task_list_req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_task_list_req& from);
  void MergeFrom(const get_task_list_req& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(get_task_list_req* other);
  void UnsafeMergeFrom(const get_task_list_req& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:batprotobuf.get_task_list_req)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_task_2eproto_impl();
  friend void  protobuf_AddDesc_task_2eproto_impl();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<get_task_list_req> get_task_list_req_default_instance_;

// -------------------------------------------------------------------

class get_task_list_res : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:batprotobuf.get_task_list_res) */ {
 public:
  get_task_list_res();
  virtual ~get_task_list_res();

  get_task_list_res(const get_task_list_res& from);

  inline get_task_list_res& operator=(const get_task_list_res& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const get_task_list_res& default_instance();

  static const get_task_list_res* internal_default_instance();

  void Swap(get_task_list_res* other);

  // implements Message ----------------------------------------------

  inline get_task_list_res* New() const { return New(NULL); }

  get_task_list_res* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_task_list_res& from);
  void MergeFrom(const get_task_list_res& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(get_task_list_res* other);
  void UnsafeMergeFrom(const get_task_list_res& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .batprotobuf.task list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  const ::batprotobuf::task& list(int index) const;
  ::batprotobuf::task* mutable_list(int index);
  ::batprotobuf::task* add_list();
  ::google::protobuf::RepeatedPtrField< ::batprotobuf::task >*
      mutable_list();
  const ::google::protobuf::RepeatedPtrField< ::batprotobuf::task >&
      list() const;

  // @@protoc_insertion_point(class_scope:batprotobuf.get_task_list_res)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::batprotobuf::task > list_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_task_2eproto_impl();
  friend void  protobuf_AddDesc_task_2eproto_impl();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<get_task_list_res> get_task_list_res_default_instance_;

// -------------------------------------------------------------------

class get_remaining_task_num_req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:batprotobuf.get_remaining_task_num_req) */ {
 public:
  get_remaining_task_num_req();
  virtual ~get_remaining_task_num_req();

  get_remaining_task_num_req(const get_remaining_task_num_req& from);

  inline get_remaining_task_num_req& operator=(const get_remaining_task_num_req& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const get_remaining_task_num_req& default_instance();

  static const get_remaining_task_num_req* internal_default_instance();

  void Swap(get_remaining_task_num_req* other);

  // implements Message ----------------------------------------------

  inline get_remaining_task_num_req* New() const { return New(NULL); }

  get_remaining_task_num_req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_remaining_task_num_req& from);
  void MergeFrom(const get_remaining_task_num_req& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(get_remaining_task_num_req* other);
  void UnsafeMergeFrom(const get_remaining_task_num_req& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cate = 1;
  void clear_cate();
  static const int kCateFieldNumber = 1;
  ::google::protobuf::uint32 cate() const;
  void set_cate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:batprotobuf.get_remaining_task_num_req)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 cate_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_task_2eproto_impl();
  friend void  protobuf_AddDesc_task_2eproto_impl();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<get_remaining_task_num_req> get_remaining_task_num_req_default_instance_;

// -------------------------------------------------------------------

class get_remaining_task_num_res : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:batprotobuf.get_remaining_task_num_res) */ {
 public:
  get_remaining_task_num_res();
  virtual ~get_remaining_task_num_res();

  get_remaining_task_num_res(const get_remaining_task_num_res& from);

  inline get_remaining_task_num_res& operator=(const get_remaining_task_num_res& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const get_remaining_task_num_res& default_instance();

  static const get_remaining_task_num_res* internal_default_instance();

  void Swap(get_remaining_task_num_res* other);

  // implements Message ----------------------------------------------

  inline get_remaining_task_num_res* New() const { return New(NULL); }

  get_remaining_task_num_res* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_remaining_task_num_res& from);
  void MergeFrom(const get_remaining_task_num_res& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(get_remaining_task_num_res* other);
  void UnsafeMergeFrom(const get_remaining_task_num_res& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 num = 1;
  void clear_num();
  static const int kNumFieldNumber = 1;
  ::google::protobuf::uint32 num() const;
  void set_num(::google::protobuf::uint32 value);

  // optional uint32 diamonds = 2;
  void clear_diamonds();
  static const int kDiamondsFieldNumber = 2;
  ::google::protobuf::uint32 diamonds() const;
  void set_diamonds(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:batprotobuf.get_remaining_task_num_res)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 diamonds_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_task_2eproto_impl();
  friend void  protobuf_AddDesc_task_2eproto_impl();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<get_remaining_task_num_res> get_remaining_task_num_res_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// task

// optional uint32 cate = 1;
inline void task::clear_cate() {
  cate_ = 0u;
}
inline ::google::protobuf::uint32 task::cate() const {
  // @@protoc_insertion_point(field_get:batprotobuf.task.cate)
  return cate_;
}
inline void task::set_cate(::google::protobuf::uint32 value) {
  
  cate_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.task.cate)
}

// optional uint32 diamonds = 2;
inline void task::clear_diamonds() {
  diamonds_ = 0u;
}
inline ::google::protobuf::uint32 task::diamonds() const {
  // @@protoc_insertion_point(field_get:batprotobuf.task.diamonds)
  return diamonds_;
}
inline void task::set_diamonds(::google::protobuf::uint32 value) {
  
  diamonds_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.task.diamonds)
}

// optional uint32 finished = 3;
inline void task::clear_finished() {
  finished_ = 0u;
}
inline ::google::protobuf::uint32 task::finished() const {
  // @@protoc_insertion_point(field_get:batprotobuf.task.finished)
  return finished_;
}
inline void task::set_finished(::google::protobuf::uint32 value) {
  
  finished_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.task.finished)
}

// optional uint32 total = 4;
inline void task::clear_total() {
  total_ = 0u;
}
inline ::google::protobuf::uint32 task::total() const {
  // @@protoc_insertion_point(field_get:batprotobuf.task.total)
  return total_;
}
inline void task::set_total(::google::protobuf::uint32 value) {
  
  total_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.task.total)
}

inline const task* task::internal_default_instance() {
  return &task_default_instance_.get();
}
// -------------------------------------------------------------------

// get_task_list_req

inline const get_task_list_req* get_task_list_req::internal_default_instance() {
  return &get_task_list_req_default_instance_.get();
}
// -------------------------------------------------------------------

// get_task_list_res

// repeated .batprotobuf.task list = 1;
inline int get_task_list_res::list_size() const {
  return list_.size();
}
inline void get_task_list_res::clear_list() {
  list_.Clear();
}
inline const ::batprotobuf::task& get_task_list_res::list(int index) const {
  // @@protoc_insertion_point(field_get:batprotobuf.get_task_list_res.list)
  return list_.Get(index);
}
inline ::batprotobuf::task* get_task_list_res::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:batprotobuf.get_task_list_res.list)
  return list_.Mutable(index);
}
inline ::batprotobuf::task* get_task_list_res::add_list() {
  // @@protoc_insertion_point(field_add:batprotobuf.get_task_list_res.list)
  return list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::batprotobuf::task >*
get_task_list_res::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:batprotobuf.get_task_list_res.list)
  return &list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::batprotobuf::task >&
get_task_list_res::list() const {
  // @@protoc_insertion_point(field_list:batprotobuf.get_task_list_res.list)
  return list_;
}

inline const get_task_list_res* get_task_list_res::internal_default_instance() {
  return &get_task_list_res_default_instance_.get();
}
// -------------------------------------------------------------------

// get_remaining_task_num_req

// optional uint32 cate = 1;
inline void get_remaining_task_num_req::clear_cate() {
  cate_ = 0u;
}
inline ::google::protobuf::uint32 get_remaining_task_num_req::cate() const {
  // @@protoc_insertion_point(field_get:batprotobuf.get_remaining_task_num_req.cate)
  return cate_;
}
inline void get_remaining_task_num_req::set_cate(::google::protobuf::uint32 value) {
  
  cate_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.get_remaining_task_num_req.cate)
}

inline const get_remaining_task_num_req* get_remaining_task_num_req::internal_default_instance() {
  return &get_remaining_task_num_req_default_instance_.get();
}
// -------------------------------------------------------------------

// get_remaining_task_num_res

// optional uint32 num = 1;
inline void get_remaining_task_num_res::clear_num() {
  num_ = 0u;
}
inline ::google::protobuf::uint32 get_remaining_task_num_res::num() const {
  // @@protoc_insertion_point(field_get:batprotobuf.get_remaining_task_num_res.num)
  return num_;
}
inline void get_remaining_task_num_res::set_num(::google::protobuf::uint32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.get_remaining_task_num_res.num)
}

// optional uint32 diamonds = 2;
inline void get_remaining_task_num_res::clear_diamonds() {
  diamonds_ = 0u;
}
inline ::google::protobuf::uint32 get_remaining_task_num_res::diamonds() const {
  // @@protoc_insertion_point(field_get:batprotobuf.get_remaining_task_num_res.diamonds)
  return diamonds_;
}
inline void get_remaining_task_num_res::set_diamonds(::google::protobuf::uint32 value) {
  
  diamonds_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.get_remaining_task_num_res.diamonds)
}

inline const get_remaining_task_num_res* get_remaining_task_num_res::internal_default_instance() {
  return &get_remaining_task_num_res_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace batprotobuf

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_task_2eproto__INCLUDED
