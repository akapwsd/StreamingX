// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/client.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/api/client.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace api {

namespace {

const ::google::protobuf::Descriptor* CommonLanguageSettings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CommonLanguageSettings_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientLibrarySettings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientLibrarySettings_reflection_ = NULL;
const ::google::protobuf::Descriptor* Publishing_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Publishing_reflection_ = NULL;
const ::google::protobuf::Descriptor* JavaSettings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JavaSettings_reflection_ = NULL;
const ::google::protobuf::Descriptor* JavaSettings_ServiceClassNamesEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CppSettings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CppSettings_reflection_ = NULL;
const ::google::protobuf::Descriptor* PhpSettings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PhpSettings_reflection_ = NULL;
const ::google::protobuf::Descriptor* PythonSettings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PythonSettings_reflection_ = NULL;
const ::google::protobuf::Descriptor* NodeSettings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NodeSettings_reflection_ = NULL;
const ::google::protobuf::Descriptor* DotnetSettings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DotnetSettings_reflection_ = NULL;
const ::google::protobuf::Descriptor* DotnetSettings_RenamedServicesEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* DotnetSettings_RenamedResourcesEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* RubySettings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RubySettings_reflection_ = NULL;
const ::google::protobuf::Descriptor* GoSettings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GoSettings_reflection_ = NULL;
const ::google::protobuf::Descriptor* MethodSettings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MethodSettings_reflection_ = NULL;
const ::google::protobuf::Descriptor* MethodSettings_LongRunning_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MethodSettings_LongRunning_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ClientLibraryOrganization_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ClientLibraryDestination_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fapi_2fclient_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fapi_2fclient_2eproto() {
  protobuf_AddDesc_google_2fapi_2fclient_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/api/client.proto");
  GOOGLE_CHECK(file != NULL);
  CommonLanguageSettings_descriptor_ = file->message_type(0);
  static const int CommonLanguageSettings_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonLanguageSettings, reference_docs_uri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonLanguageSettings, destinations_),
  };
  CommonLanguageSettings_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CommonLanguageSettings_descriptor_,
      CommonLanguageSettings::internal_default_instance(),
      CommonLanguageSettings_offsets_,
      -1,
      -1,
      -1,
      sizeof(CommonLanguageSettings),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonLanguageSettings, _internal_metadata_));
  ClientLibrarySettings_descriptor_ = file->message_type(1);
  static const int ClientLibrarySettings_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLibrarySettings, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLibrarySettings, launch_stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLibrarySettings, rest_numeric_enums_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLibrarySettings, java_settings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLibrarySettings, cpp_settings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLibrarySettings, php_settings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLibrarySettings, python_settings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLibrarySettings, node_settings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLibrarySettings, dotnet_settings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLibrarySettings, ruby_settings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLibrarySettings, go_settings_),
  };
  ClientLibrarySettings_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientLibrarySettings_descriptor_,
      ClientLibrarySettings::internal_default_instance(),
      ClientLibrarySettings_offsets_,
      -1,
      -1,
      -1,
      sizeof(ClientLibrarySettings),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLibrarySettings, _internal_metadata_));
  Publishing_descriptor_ = file->message_type(2);
  static const int Publishing_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Publishing, method_settings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Publishing, new_issue_uri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Publishing, documentation_uri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Publishing, api_short_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Publishing, github_label_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Publishing, codeowner_github_teams_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Publishing, doc_tag_prefix_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Publishing, organization_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Publishing, library_settings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Publishing, proto_reference_documentation_uri_),
  };
  Publishing_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Publishing_descriptor_,
      Publishing::internal_default_instance(),
      Publishing_offsets_,
      -1,
      -1,
      -1,
      sizeof(Publishing),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Publishing, _internal_metadata_));
  JavaSettings_descriptor_ = file->message_type(3);
  static const int JavaSettings_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JavaSettings, library_package_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JavaSettings, service_class_names_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JavaSettings, common_),
  };
  JavaSettings_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      JavaSettings_descriptor_,
      JavaSettings::internal_default_instance(),
      JavaSettings_offsets_,
      -1,
      -1,
      -1,
      sizeof(JavaSettings),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JavaSettings, _internal_metadata_));
  JavaSettings_ServiceClassNamesEntry_descriptor_ = JavaSettings_descriptor_->nested_type(0);
  CppSettings_descriptor_ = file->message_type(4);
  static const int CppSettings_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CppSettings, common_),
  };
  CppSettings_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CppSettings_descriptor_,
      CppSettings::internal_default_instance(),
      CppSettings_offsets_,
      -1,
      -1,
      -1,
      sizeof(CppSettings),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CppSettings, _internal_metadata_));
  PhpSettings_descriptor_ = file->message_type(5);
  static const int PhpSettings_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhpSettings, common_),
  };
  PhpSettings_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PhpSettings_descriptor_,
      PhpSettings::internal_default_instance(),
      PhpSettings_offsets_,
      -1,
      -1,
      -1,
      sizeof(PhpSettings),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhpSettings, _internal_metadata_));
  PythonSettings_descriptor_ = file->message_type(6);
  static const int PythonSettings_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PythonSettings, common_),
  };
  PythonSettings_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PythonSettings_descriptor_,
      PythonSettings::internal_default_instance(),
      PythonSettings_offsets_,
      -1,
      -1,
      -1,
      sizeof(PythonSettings),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PythonSettings, _internal_metadata_));
  NodeSettings_descriptor_ = file->message_type(7);
  static const int NodeSettings_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeSettings, common_),
  };
  NodeSettings_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NodeSettings_descriptor_,
      NodeSettings::internal_default_instance(),
      NodeSettings_offsets_,
      -1,
      -1,
      -1,
      sizeof(NodeSettings),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeSettings, _internal_metadata_));
  DotnetSettings_descriptor_ = file->message_type(8);
  static const int DotnetSettings_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotnetSettings, common_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotnetSettings, renamed_services_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotnetSettings, renamed_resources_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotnetSettings, ignored_resources_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotnetSettings, forced_namespace_aliases_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotnetSettings, handwritten_signatures_),
  };
  DotnetSettings_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DotnetSettings_descriptor_,
      DotnetSettings::internal_default_instance(),
      DotnetSettings_offsets_,
      -1,
      -1,
      -1,
      sizeof(DotnetSettings),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotnetSettings, _internal_metadata_));
  DotnetSettings_RenamedServicesEntry_descriptor_ = DotnetSettings_descriptor_->nested_type(0);
  DotnetSettings_RenamedResourcesEntry_descriptor_ = DotnetSettings_descriptor_->nested_type(1);
  RubySettings_descriptor_ = file->message_type(9);
  static const int RubySettings_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RubySettings, common_),
  };
  RubySettings_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RubySettings_descriptor_,
      RubySettings::internal_default_instance(),
      RubySettings_offsets_,
      -1,
      -1,
      -1,
      sizeof(RubySettings),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RubySettings, _internal_metadata_));
  GoSettings_descriptor_ = file->message_type(10);
  static const int GoSettings_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoSettings, common_),
  };
  GoSettings_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GoSettings_descriptor_,
      GoSettings::internal_default_instance(),
      GoSettings_offsets_,
      -1,
      -1,
      -1,
      sizeof(GoSettings),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoSettings, _internal_metadata_));
  MethodSettings_descriptor_ = file->message_type(11);
  static const int MethodSettings_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MethodSettings, selector_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MethodSettings, long_running_),
  };
  MethodSettings_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MethodSettings_descriptor_,
      MethodSettings::internal_default_instance(),
      MethodSettings_offsets_,
      -1,
      -1,
      -1,
      sizeof(MethodSettings),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MethodSettings, _internal_metadata_));
  MethodSettings_LongRunning_descriptor_ = MethodSettings_descriptor_->nested_type(0);
  static const int MethodSettings_LongRunning_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MethodSettings_LongRunning, initial_poll_delay_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MethodSettings_LongRunning, poll_delay_multiplier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MethodSettings_LongRunning, max_poll_delay_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MethodSettings_LongRunning, total_poll_timeout_),
  };
  MethodSettings_LongRunning_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MethodSettings_LongRunning_descriptor_,
      MethodSettings_LongRunning::internal_default_instance(),
      MethodSettings_LongRunning_offsets_,
      -1,
      -1,
      -1,
      sizeof(MethodSettings_LongRunning),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MethodSettings_LongRunning, _internal_metadata_));
  ClientLibraryOrganization_descriptor_ = file->enum_type(0);
  ClientLibraryDestination_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fapi_2fclient_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CommonLanguageSettings_descriptor_, CommonLanguageSettings::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientLibrarySettings_descriptor_, ClientLibrarySettings::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Publishing_descriptor_, Publishing::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      JavaSettings_descriptor_, JavaSettings::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        JavaSettings_ServiceClassNamesEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                JavaSettings_ServiceClassNamesEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CppSettings_descriptor_, CppSettings::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PhpSettings_descriptor_, PhpSettings::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PythonSettings_descriptor_, PythonSettings::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NodeSettings_descriptor_, NodeSettings::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DotnetSettings_descriptor_, DotnetSettings::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        DotnetSettings_RenamedServicesEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                DotnetSettings_RenamedServicesEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        DotnetSettings_RenamedResourcesEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                DotnetSettings_RenamedResourcesEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RubySettings_descriptor_, RubySettings::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GoSettings_descriptor_, GoSettings::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MethodSettings_descriptor_, MethodSettings::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MethodSettings_LongRunning_descriptor_, MethodSettings_LongRunning::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fapi_2fclient_2eproto() {
  CommonLanguageSettings_default_instance_.Shutdown();
  delete CommonLanguageSettings_reflection_;
  ClientLibrarySettings_default_instance_.Shutdown();
  delete ClientLibrarySettings_reflection_;
  Publishing_default_instance_.Shutdown();
  delete Publishing_reflection_;
  JavaSettings_default_instance_.Shutdown();
  delete JavaSettings_reflection_;
  CppSettings_default_instance_.Shutdown();
  delete CppSettings_reflection_;
  PhpSettings_default_instance_.Shutdown();
  delete PhpSettings_reflection_;
  PythonSettings_default_instance_.Shutdown();
  delete PythonSettings_reflection_;
  NodeSettings_default_instance_.Shutdown();
  delete NodeSettings_reflection_;
  DotnetSettings_default_instance_.Shutdown();
  delete DotnetSettings_reflection_;
  RubySettings_default_instance_.Shutdown();
  delete RubySettings_reflection_;
  GoSettings_default_instance_.Shutdown();
  delete GoSettings_reflection_;
  MethodSettings_default_instance_.Shutdown();
  delete MethodSettings_reflection_;
  MethodSettings_LongRunning_default_instance_.Shutdown();
  delete MethodSettings_LongRunning_reflection_;
}

void protobuf_InitDefaults_google_2fapi_2fclient_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2flaunch_5fstage_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fdescriptor_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fduration_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  CommonLanguageSettings_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ClientLibrarySettings_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Publishing_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  JavaSettings_default_instance_.DefaultConstruct();
  CppSettings_default_instance_.DefaultConstruct();
  PhpSettings_default_instance_.DefaultConstruct();
  PythonSettings_default_instance_.DefaultConstruct();
  NodeSettings_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  DotnetSettings_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  RubySettings_default_instance_.DefaultConstruct();
  GoSettings_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  MethodSettings_default_instance_.DefaultConstruct();
  MethodSettings_LongRunning_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::google::protobuf::MethodOptions::internal_default_instance(),
    1051, 9, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::google::protobuf::ServiceOptions::internal_default_instance(),
    1049, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::google::protobuf::ServiceOptions::internal_default_instance(),
    1050, 9, false, false);
  CommonLanguageSettings_default_instance_.get_mutable()->InitAsDefaultInstance();
  ClientLibrarySettings_default_instance_.get_mutable()->InitAsDefaultInstance();
  Publishing_default_instance_.get_mutable()->InitAsDefaultInstance();
  JavaSettings_default_instance_.get_mutable()->InitAsDefaultInstance();
  CppSettings_default_instance_.get_mutable()->InitAsDefaultInstance();
  PhpSettings_default_instance_.get_mutable()->InitAsDefaultInstance();
  PythonSettings_default_instance_.get_mutable()->InitAsDefaultInstance();
  NodeSettings_default_instance_.get_mutable()->InitAsDefaultInstance();
  DotnetSettings_default_instance_.get_mutable()->InitAsDefaultInstance();
  RubySettings_default_instance_.get_mutable()->InitAsDefaultInstance();
  GoSettings_default_instance_.get_mutable()->InitAsDefaultInstance();
  MethodSettings_default_instance_.get_mutable()->InitAsDefaultInstance();
  MethodSettings_LongRunning_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fapi_2fclient_2eproto_once_);
void protobuf_InitDefaults_google_2fapi_2fclient_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fapi_2fclient_2eproto_once_,
                 &protobuf_InitDefaults_google_2fapi_2fclient_2eproto_impl);
}
void protobuf_AddDesc_google_2fapi_2fclient_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027google/api/client.proto\022\ngoogle.api\032\035g"
    "oogle/api/launch_stage.proto\032 google/pro"
    "tobuf/descriptor.proto\032\036google/protobuf/"
    "duration.proto\"t\n\026CommonLanguageSettings"
    "\022\036\n\022reference_docs_uri\030\001 \001(\tB\002\030\001\022:\n\014dest"
    "inations\030\002 \003(\0162$.google.api.ClientLibrar"
    "yDestination\"\373\003\n\025ClientLibrarySettings\022\017"
    "\n\007version\030\001 \001(\t\022-\n\014launch_stage\030\002 \001(\0162\027."
    "google.api.LaunchStage\022\032\n\022rest_numeric_e"
    "nums\030\003 \001(\010\022/\n\rjava_settings\030\025 \001(\0132\030.goog"
    "le.api.JavaSettings\022-\n\014cpp_settings\030\026 \001("
    "\0132\027.google.api.CppSettings\022-\n\014php_settin"
    "gs\030\027 \001(\0132\027.google.api.PhpSettings\0223\n\017pyt"
    "hon_settings\030\030 \001(\0132\032.google.api.PythonSe"
    "ttings\022/\n\rnode_settings\030\031 \001(\0132\030.google.a"
    "pi.NodeSettings\0223\n\017dotnet_settings\030\032 \001(\013"
    "2\032.google.api.DotnetSettings\022/\n\rruby_set"
    "tings\030\033 \001(\0132\030.google.api.RubySettings\022+\n"
    "\013go_settings\030\034 \001(\0132\026.google.api.GoSettin"
    "gs\"\376\002\n\nPublishing\0223\n\017method_settings\030\002 \003"
    "(\0132\032.google.api.MethodSettings\022\025\n\rnew_is"
    "sue_uri\030e \001(\t\022\031\n\021documentation_uri\030f \001(\t"
    "\022\026\n\016api_short_name\030g \001(\t\022\024\n\014github_label"
    "\030h \001(\t\022\036\n\026codeowner_github_teams\030i \003(\t\022\026"
    "\n\016doc_tag_prefix\030j \001(\t\022;\n\014organization\030k"
    " \001(\0162%.google.api.ClientLibraryOrganizat"
    "ion\022;\n\020library_settings\030m \003(\0132!.google.a"
    "pi.ClientLibrarySettings\022)\n!proto_refere"
    "nce_documentation_uri\030n \001(\t\"\343\001\n\014JavaSett"
    "ings\022\027\n\017library_package\030\001 \001(\t\022L\n\023service"
    "_class_names\030\002 \003(\0132/.google.api.JavaSett"
    "ings.ServiceClassNamesEntry\0222\n\006common\030\003 "
    "\001(\0132\".google.api.CommonLanguageSettings\032"
    "8\n\026ServiceClassNamesEntry\022\013\n\003key\030\001 \001(\t\022\r"
    "\n\005value\030\002 \001(\t:\0028\001\"A\n\013CppSettings\0222\n\006comm"
    "on\030\001 \001(\0132\".google.api.CommonLanguageSett"
    "ings\"A\n\013PhpSettings\0222\n\006common\030\001 \001(\0132\".go"
    "ogle.api.CommonLanguageSettings\"D\n\016Pytho"
    "nSettings\0222\n\006common\030\001 \001(\0132\".google.api.C"
    "ommonLanguageSettings\"B\n\014NodeSettings\0222\n"
    "\006common\030\001 \001(\0132\".google.api.CommonLanguag"
    "eSettings\"\252\003\n\016DotnetSettings\0222\n\006common\030\001"
    " \001(\0132\".google.api.CommonLanguageSettings"
    "\022I\n\020renamed_services\030\002 \003(\0132/.google.api."
    "DotnetSettings.RenamedServicesEntry\022K\n\021r"
    "enamed_resources\030\003 \003(\01320.google.api.Dotn"
    "etSettings.RenamedResourcesEntry\022\031\n\021igno"
    "red_resources\030\004 \003(\t\022 \n\030forced_namespace_"
    "aliases\030\005 \003(\t\022\036\n\026handwritten_signatures\030"
    "\006 \003(\t\0326\n\024RenamedServicesEntry\022\013\n\003key\030\001 \001"
    "(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0327\n\025RenamedResource"
    "sEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"B"
    "\n\014RubySettings\0222\n\006common\030\001 \001(\0132\".google."
    "api.CommonLanguageSettings\"@\n\nGoSettings"
    "\0222\n\006common\030\001 \001(\0132\".google.api.CommonLang"
    "uageSettings\"\260\002\n\016MethodSettings\022\020\n\010selec"
    "tor\030\001 \001(\t\022<\n\014long_running\030\002 \001(\0132&.google"
    ".api.MethodSettings.LongRunning\032\315\001\n\013Long"
    "Running\0225\n\022initial_poll_delay\030\001 \001(\0132\031.go"
    "ogle.protobuf.Duration\022\035\n\025poll_delay_mul"
    "tiplier\030\002 \001(\002\0221\n\016max_poll_delay\030\003 \001(\0132\031."
    "google.protobuf.Duration\0225\n\022total_poll_t"
    "imeout\030\004 \001(\0132\031.google.protobuf.Duration*"
    "y\n\031ClientLibraryOrganization\022+\n\'CLIENT_L"
    "IBRARY_ORGANIZATION_UNSPECIFIED\020\000\022\t\n\005CLO"
    "UD\020\001\022\007\n\003ADS\020\002\022\n\n\006PHOTOS\020\003\022\017\n\013STREET_VIEW"
    "\020\004*g\n\030ClientLibraryDestination\022*\n&CLIENT"
    "_LIBRARY_DESTINATION_UNSPECIFIED\020\000\022\n\n\006GI"
    "THUB\020\n\022\023\n\017PACKAGE_MANAGER\020\024:9\n\020method_si"
    "gnature\022\036.google.protobuf.MethodOptions\030"
    "\233\010 \003(\t:6\n\014default_host\022\037.google.protobuf"
    ".ServiceOptions\030\231\010 \001(\t:6\n\014oauth_scopes\022\037"
    ".google.protobuf.ServiceOptions\030\232\010 \001(\tBi"
    "\n\016com.google.apiB\013ClientProtoP\001ZAgoogle."
    "golang.org/genproto/googleapis/api/annot"
    "ations;annotations\242\002\004GAPIb\006proto3", 3033);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/client.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2flaunch_5fstage_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fduration_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fapi_2fclient_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fapi_2fclient_2eproto_once_);
void protobuf_AddDesc_google_2fapi_2fclient_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fapi_2fclient_2eproto_once_,
                 &protobuf_AddDesc_google_2fapi_2fclient_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fapi_2fclient_2eproto {
  StaticDescriptorInitializer_google_2fapi_2fclient_2eproto() {
    protobuf_AddDesc_google_2fapi_2fclient_2eproto();
  }
} static_descriptor_initializer_google_2fapi_2fclient_2eproto_;
const ::google::protobuf::EnumDescriptor* ClientLibraryOrganization_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientLibraryOrganization_descriptor_;
}
bool ClientLibraryOrganization_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ClientLibraryDestination_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientLibraryDestination_descriptor_;
}
bool ClientLibraryDestination_IsValid(int value) {
  switch (value) {
    case 0:
    case 10:
    case 20:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommonLanguageSettings::kReferenceDocsUriFieldNumber;
const int CommonLanguageSettings::kDestinationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommonLanguageSettings::CommonLanguageSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.CommonLanguageSettings)
}

void CommonLanguageSettings::InitAsDefaultInstance() {
}

CommonLanguageSettings::CommonLanguageSettings(const CommonLanguageSettings& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.CommonLanguageSettings)
}

void CommonLanguageSettings::SharedCtor() {
  reference_docs_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CommonLanguageSettings::~CommonLanguageSettings() {
  // @@protoc_insertion_point(destructor:google.api.CommonLanguageSettings)
  SharedDtor();
}

void CommonLanguageSettings::SharedDtor() {
  reference_docs_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CommonLanguageSettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommonLanguageSettings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CommonLanguageSettings_descriptor_;
}

const CommonLanguageSettings& CommonLanguageSettings::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CommonLanguageSettings> CommonLanguageSettings_default_instance_;

CommonLanguageSettings* CommonLanguageSettings::New(::google::protobuf::Arena* arena) const {
  CommonLanguageSettings* n = new CommonLanguageSettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommonLanguageSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.CommonLanguageSettings)
  reference_docs_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destinations_.Clear();
}

bool CommonLanguageSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.CommonLanguageSettings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string reference_docs_uri = 1 [deprecated = true];
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reference_docs_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reference_docs_uri().data(), this->reference_docs_uri().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.CommonLanguageSettings.reference_docs_uri"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_destinations;
        break;
      }

      // repeated .google.api.ClientLibraryDestination destinations = 2;
      case 2: {
        if (tag == 18) {
         parse_destinations:
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(length);
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_destinations(static_cast< ::google::api::ClientLibraryDestination >(value));
          }
          input->PopLimit(limit);
        } else if (tag == 16) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_destinations(static_cast< ::google::api::ClientLibraryDestination >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.CommonLanguageSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.CommonLanguageSettings)
  return false;
#undef DO_
}

void CommonLanguageSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.CommonLanguageSettings)
  // optional string reference_docs_uri = 1 [deprecated = true];
  if (this->reference_docs_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reference_docs_uri().data(), this->reference_docs_uri().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.CommonLanguageSettings.reference_docs_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->reference_docs_uri(), output);
  }

  // repeated .google.api.ClientLibraryDestination destinations = 2;
  if (this->destinations_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(_destinations_cached_byte_size_);
  }
  for (int i = 0; i < this->destinations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->destinations(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.CommonLanguageSettings)
}

::google::protobuf::uint8* CommonLanguageSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.CommonLanguageSettings)
  // optional string reference_docs_uri = 1 [deprecated = true];
  if (this->reference_docs_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reference_docs_uri().data(), this->reference_docs_uri().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.CommonLanguageSettings.reference_docs_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->reference_docs_uri(), target);
  }

  // repeated .google.api.ClientLibraryDestination destinations = 2;
  if (this->destinations_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(    _destinations_cached_byte_size_, target);
  }
  for (int i = 0; i < this->destinations_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->destinations(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.CommonLanguageSettings)
  return target;
}

size_t CommonLanguageSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.CommonLanguageSettings)
  size_t total_size = 0;

  // optional string reference_docs_uri = 1 [deprecated = true];
  if (this->reference_docs_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reference_docs_uri());
  }

  // repeated .google.api.ClientLibraryDestination destinations = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->destinations_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->destinations(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _destinations_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommonLanguageSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.CommonLanguageSettings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CommonLanguageSettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommonLanguageSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.CommonLanguageSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.CommonLanguageSettings)
    UnsafeMergeFrom(*source);
  }
}

void CommonLanguageSettings::MergeFrom(const CommonLanguageSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.CommonLanguageSettings)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CommonLanguageSettings::UnsafeMergeFrom(const CommonLanguageSettings& from) {
  GOOGLE_DCHECK(&from != this);
  destinations_.UnsafeMergeFrom(from.destinations_);
  if (from.reference_docs_uri().size() > 0) {

    reference_docs_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reference_docs_uri_);
  }
}

void CommonLanguageSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.CommonLanguageSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonLanguageSettings::CopyFrom(const CommonLanguageSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.CommonLanguageSettings)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CommonLanguageSettings::IsInitialized() const {

  return true;
}

void CommonLanguageSettings::Swap(CommonLanguageSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommonLanguageSettings::InternalSwap(CommonLanguageSettings* other) {
  reference_docs_uri_.Swap(&other->reference_docs_uri_);
  destinations_.UnsafeArenaSwap(&other->destinations_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommonLanguageSettings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CommonLanguageSettings_descriptor_;
  metadata.reflection = CommonLanguageSettings_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CommonLanguageSettings

// optional string reference_docs_uri = 1 [deprecated = true];
void CommonLanguageSettings::clear_reference_docs_uri() {
  reference_docs_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CommonLanguageSettings::reference_docs_uri() const {
  // @@protoc_insertion_point(field_get:google.api.CommonLanguageSettings.reference_docs_uri)
  return reference_docs_uri_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CommonLanguageSettings::set_reference_docs_uri(const ::std::string& value) {
  
  reference_docs_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.CommonLanguageSettings.reference_docs_uri)
}
void CommonLanguageSettings::set_reference_docs_uri(const char* value) {
  
  reference_docs_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.CommonLanguageSettings.reference_docs_uri)
}
void CommonLanguageSettings::set_reference_docs_uri(const char* value, size_t size) {
  
  reference_docs_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.CommonLanguageSettings.reference_docs_uri)
}
::std::string* CommonLanguageSettings::mutable_reference_docs_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.api.CommonLanguageSettings.reference_docs_uri)
  return reference_docs_uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CommonLanguageSettings::release_reference_docs_uri() {
  // @@protoc_insertion_point(field_release:google.api.CommonLanguageSettings.reference_docs_uri)
  
  return reference_docs_uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CommonLanguageSettings::set_allocated_reference_docs_uri(::std::string* reference_docs_uri) {
  if (reference_docs_uri != NULL) {
    
  } else {
    
  }
  reference_docs_uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference_docs_uri);
  // @@protoc_insertion_point(field_set_allocated:google.api.CommonLanguageSettings.reference_docs_uri)
}

// repeated .google.api.ClientLibraryDestination destinations = 2;
int CommonLanguageSettings::destinations_size() const {
  return destinations_.size();
}
void CommonLanguageSettings::clear_destinations() {
  destinations_.Clear();
}
::google::api::ClientLibraryDestination CommonLanguageSettings::destinations(int index) const {
  // @@protoc_insertion_point(field_get:google.api.CommonLanguageSettings.destinations)
  return static_cast< ::google::api::ClientLibraryDestination >(destinations_.Get(index));
}
void CommonLanguageSettings::set_destinations(int index, ::google::api::ClientLibraryDestination value) {
  destinations_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.api.CommonLanguageSettings.destinations)
}
void CommonLanguageSettings::add_destinations(::google::api::ClientLibraryDestination value) {
  destinations_.Add(value);
  // @@protoc_insertion_point(field_add:google.api.CommonLanguageSettings.destinations)
}
const ::google::protobuf::RepeatedField<int>&
CommonLanguageSettings::destinations() const {
  // @@protoc_insertion_point(field_list:google.api.CommonLanguageSettings.destinations)
  return destinations_;
}
::google::protobuf::RepeatedField<int>*
CommonLanguageSettings::mutable_destinations() {
  // @@protoc_insertion_point(field_mutable_list:google.api.CommonLanguageSettings.destinations)
  return &destinations_;
}

inline const CommonLanguageSettings* CommonLanguageSettings::internal_default_instance() {
  return &CommonLanguageSettings_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientLibrarySettings::kVersionFieldNumber;
const int ClientLibrarySettings::kLaunchStageFieldNumber;
const int ClientLibrarySettings::kRestNumericEnumsFieldNumber;
const int ClientLibrarySettings::kJavaSettingsFieldNumber;
const int ClientLibrarySettings::kCppSettingsFieldNumber;
const int ClientLibrarySettings::kPhpSettingsFieldNumber;
const int ClientLibrarySettings::kPythonSettingsFieldNumber;
const int ClientLibrarySettings::kNodeSettingsFieldNumber;
const int ClientLibrarySettings::kDotnetSettingsFieldNumber;
const int ClientLibrarySettings::kRubySettingsFieldNumber;
const int ClientLibrarySettings::kGoSettingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientLibrarySettings::ClientLibrarySettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.ClientLibrarySettings)
}

void ClientLibrarySettings::InitAsDefaultInstance() {
  java_settings_ = const_cast< ::google::api::JavaSettings*>(
      ::google::api::JavaSettings::internal_default_instance());
  cpp_settings_ = const_cast< ::google::api::CppSettings*>(
      ::google::api::CppSettings::internal_default_instance());
  php_settings_ = const_cast< ::google::api::PhpSettings*>(
      ::google::api::PhpSettings::internal_default_instance());
  python_settings_ = const_cast< ::google::api::PythonSettings*>(
      ::google::api::PythonSettings::internal_default_instance());
  node_settings_ = const_cast< ::google::api::NodeSettings*>(
      ::google::api::NodeSettings::internal_default_instance());
  dotnet_settings_ = const_cast< ::google::api::DotnetSettings*>(
      ::google::api::DotnetSettings::internal_default_instance());
  ruby_settings_ = const_cast< ::google::api::RubySettings*>(
      ::google::api::RubySettings::internal_default_instance());
  go_settings_ = const_cast< ::google::api::GoSettings*>(
      ::google::api::GoSettings::internal_default_instance());
}

ClientLibrarySettings::ClientLibrarySettings(const ClientLibrarySettings& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.ClientLibrarySettings)
}

void ClientLibrarySettings::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  java_settings_ = NULL;
  cpp_settings_ = NULL;
  php_settings_ = NULL;
  python_settings_ = NULL;
  node_settings_ = NULL;
  dotnet_settings_ = NULL;
  ruby_settings_ = NULL;
  go_settings_ = NULL;
  ::memset(&launch_stage_, 0, reinterpret_cast<char*>(&rest_numeric_enums_) -
    reinterpret_cast<char*>(&launch_stage_) + sizeof(rest_numeric_enums_));
  _cached_size_ = 0;
}

ClientLibrarySettings::~ClientLibrarySettings() {
  // @@protoc_insertion_point(destructor:google.api.ClientLibrarySettings)
  SharedDtor();
}

void ClientLibrarySettings::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ClientLibrarySettings_default_instance_.get()) {
    delete java_settings_;
    delete cpp_settings_;
    delete php_settings_;
    delete python_settings_;
    delete node_settings_;
    delete dotnet_settings_;
    delete ruby_settings_;
    delete go_settings_;
  }
}

void ClientLibrarySettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientLibrarySettings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientLibrarySettings_descriptor_;
}

const ClientLibrarySettings& ClientLibrarySettings::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClientLibrarySettings> ClientLibrarySettings_default_instance_;

ClientLibrarySettings* ClientLibrarySettings::New(::google::protobuf::Arena* arena) const {
  ClientLibrarySettings* n = new ClientLibrarySettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientLibrarySettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.ClientLibrarySettings)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ClientLibrarySettings, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ClientLibrarySettings*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(launch_stage_, rest_numeric_enums_);
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && java_settings_ != NULL) delete java_settings_;
  java_settings_ = NULL;
  if (GetArenaNoVirtual() == NULL && cpp_settings_ != NULL) delete cpp_settings_;
  cpp_settings_ = NULL;
  if (GetArenaNoVirtual() == NULL && php_settings_ != NULL) delete php_settings_;
  php_settings_ = NULL;
  if (GetArenaNoVirtual() == NULL && python_settings_ != NULL) delete python_settings_;
  python_settings_ = NULL;
  if (GetArenaNoVirtual() == NULL && node_settings_ != NULL) delete node_settings_;
  node_settings_ = NULL;
  if (GetArenaNoVirtual() == NULL && dotnet_settings_ != NULL) delete dotnet_settings_;
  dotnet_settings_ = NULL;
  if (GetArenaNoVirtual() == NULL && ruby_settings_ != NULL) delete ruby_settings_;
  ruby_settings_ = NULL;
  if (GetArenaNoVirtual() == NULL && go_settings_ != NULL) delete go_settings_;
  go_settings_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool ClientLibrarySettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.ClientLibrarySettings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string version = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.ClientLibrarySettings.version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_launch_stage;
        break;
      }

      // optional .google.api.LaunchStage launch_stage = 2;
      case 2: {
        if (tag == 16) {
         parse_launch_stage:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_launch_stage(static_cast< ::google::api::LaunchStage >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_rest_numeric_enums;
        break;
      }

      // optional bool rest_numeric_enums = 3;
      case 3: {
        if (tag == 24) {
         parse_rest_numeric_enums:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rest_numeric_enums_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_java_settings;
        break;
      }

      // optional .google.api.JavaSettings java_settings = 21;
      case 21: {
        if (tag == 170) {
         parse_java_settings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_java_settings()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_cpp_settings;
        break;
      }

      // optional .google.api.CppSettings cpp_settings = 22;
      case 22: {
        if (tag == 178) {
         parse_cpp_settings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cpp_settings()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_php_settings;
        break;
      }

      // optional .google.api.PhpSettings php_settings = 23;
      case 23: {
        if (tag == 186) {
         parse_php_settings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_php_settings()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(194)) goto parse_python_settings;
        break;
      }

      // optional .google.api.PythonSettings python_settings = 24;
      case 24: {
        if (tag == 194) {
         parse_python_settings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_python_settings()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_node_settings;
        break;
      }

      // optional .google.api.NodeSettings node_settings = 25;
      case 25: {
        if (tag == 202) {
         parse_node_settings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node_settings()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(210)) goto parse_dotnet_settings;
        break;
      }

      // optional .google.api.DotnetSettings dotnet_settings = 26;
      case 26: {
        if (tag == 210) {
         parse_dotnet_settings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dotnet_settings()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(218)) goto parse_ruby_settings;
        break;
      }

      // optional .google.api.RubySettings ruby_settings = 27;
      case 27: {
        if (tag == 218) {
         parse_ruby_settings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ruby_settings()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(226)) goto parse_go_settings;
        break;
      }

      // optional .google.api.GoSettings go_settings = 28;
      case 28: {
        if (tag == 226) {
         parse_go_settings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_go_settings()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.ClientLibrarySettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.ClientLibrarySettings)
  return false;
#undef DO_
}

void ClientLibrarySettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.ClientLibrarySettings)
  // optional string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ClientLibrarySettings.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version(), output);
  }

  // optional .google.api.LaunchStage launch_stage = 2;
  if (this->launch_stage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->launch_stage(), output);
  }

  // optional bool rest_numeric_enums = 3;
  if (this->rest_numeric_enums() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->rest_numeric_enums(), output);
  }

  // optional .google.api.JavaSettings java_settings = 21;
  if (this->has_java_settings()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, *this->java_settings_, output);
  }

  // optional .google.api.CppSettings cpp_settings = 22;
  if (this->has_cpp_settings()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, *this->cpp_settings_, output);
  }

  // optional .google.api.PhpSettings php_settings = 23;
  if (this->has_php_settings()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, *this->php_settings_, output);
  }

  // optional .google.api.PythonSettings python_settings = 24;
  if (this->has_python_settings()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, *this->python_settings_, output);
  }

  // optional .google.api.NodeSettings node_settings = 25;
  if (this->has_node_settings()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, *this->node_settings_, output);
  }

  // optional .google.api.DotnetSettings dotnet_settings = 26;
  if (this->has_dotnet_settings()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, *this->dotnet_settings_, output);
  }

  // optional .google.api.RubySettings ruby_settings = 27;
  if (this->has_ruby_settings()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, *this->ruby_settings_, output);
  }

  // optional .google.api.GoSettings go_settings = 28;
  if (this->has_go_settings()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, *this->go_settings_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.ClientLibrarySettings)
}

::google::protobuf::uint8* ClientLibrarySettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.ClientLibrarySettings)
  // optional string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ClientLibrarySettings.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version(), target);
  }

  // optional .google.api.LaunchStage launch_stage = 2;
  if (this->launch_stage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->launch_stage(), target);
  }

  // optional bool rest_numeric_enums = 3;
  if (this->rest_numeric_enums() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->rest_numeric_enums(), target);
  }

  // optional .google.api.JavaSettings java_settings = 21;
  if (this->has_java_settings()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        21, *this->java_settings_, false, target);
  }

  // optional .google.api.CppSettings cpp_settings = 22;
  if (this->has_cpp_settings()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        22, *this->cpp_settings_, false, target);
  }

  // optional .google.api.PhpSettings php_settings = 23;
  if (this->has_php_settings()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        23, *this->php_settings_, false, target);
  }

  // optional .google.api.PythonSettings python_settings = 24;
  if (this->has_python_settings()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        24, *this->python_settings_, false, target);
  }

  // optional .google.api.NodeSettings node_settings = 25;
  if (this->has_node_settings()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        25, *this->node_settings_, false, target);
  }

  // optional .google.api.DotnetSettings dotnet_settings = 26;
  if (this->has_dotnet_settings()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        26, *this->dotnet_settings_, false, target);
  }

  // optional .google.api.RubySettings ruby_settings = 27;
  if (this->has_ruby_settings()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        27, *this->ruby_settings_, false, target);
  }

  // optional .google.api.GoSettings go_settings = 28;
  if (this->has_go_settings()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        28, *this->go_settings_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.ClientLibrarySettings)
  return target;
}

size_t ClientLibrarySettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.ClientLibrarySettings)
  size_t total_size = 0;

  // optional string version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // optional .google.api.LaunchStage launch_stage = 2;
  if (this->launch_stage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->launch_stage());
  }

  // optional bool rest_numeric_enums = 3;
  if (this->rest_numeric_enums() != 0) {
    total_size += 1 + 1;
  }

  // optional .google.api.JavaSettings java_settings = 21;
  if (this->has_java_settings()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->java_settings_);
  }

  // optional .google.api.CppSettings cpp_settings = 22;
  if (this->has_cpp_settings()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cpp_settings_);
  }

  // optional .google.api.PhpSettings php_settings = 23;
  if (this->has_php_settings()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->php_settings_);
  }

  // optional .google.api.PythonSettings python_settings = 24;
  if (this->has_python_settings()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->python_settings_);
  }

  // optional .google.api.NodeSettings node_settings = 25;
  if (this->has_node_settings()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->node_settings_);
  }

  // optional .google.api.DotnetSettings dotnet_settings = 26;
  if (this->has_dotnet_settings()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dotnet_settings_);
  }

  // optional .google.api.RubySettings ruby_settings = 27;
  if (this->has_ruby_settings()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ruby_settings_);
  }

  // optional .google.api.GoSettings go_settings = 28;
  if (this->has_go_settings()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->go_settings_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientLibrarySettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.ClientLibrarySettings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ClientLibrarySettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientLibrarySettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.ClientLibrarySettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.ClientLibrarySettings)
    UnsafeMergeFrom(*source);
  }
}

void ClientLibrarySettings::MergeFrom(const ClientLibrarySettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.ClientLibrarySettings)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ClientLibrarySettings::UnsafeMergeFrom(const ClientLibrarySettings& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.launch_stage() != 0) {
    set_launch_stage(from.launch_stage());
  }
  if (from.rest_numeric_enums() != 0) {
    set_rest_numeric_enums(from.rest_numeric_enums());
  }
  if (from.has_java_settings()) {
    mutable_java_settings()->::google::api::JavaSettings::MergeFrom(from.java_settings());
  }
  if (from.has_cpp_settings()) {
    mutable_cpp_settings()->::google::api::CppSettings::MergeFrom(from.cpp_settings());
  }
  if (from.has_php_settings()) {
    mutable_php_settings()->::google::api::PhpSettings::MergeFrom(from.php_settings());
  }
  if (from.has_python_settings()) {
    mutable_python_settings()->::google::api::PythonSettings::MergeFrom(from.python_settings());
  }
  if (from.has_node_settings()) {
    mutable_node_settings()->::google::api::NodeSettings::MergeFrom(from.node_settings());
  }
  if (from.has_dotnet_settings()) {
    mutable_dotnet_settings()->::google::api::DotnetSettings::MergeFrom(from.dotnet_settings());
  }
  if (from.has_ruby_settings()) {
    mutable_ruby_settings()->::google::api::RubySettings::MergeFrom(from.ruby_settings());
  }
  if (from.has_go_settings()) {
    mutable_go_settings()->::google::api::GoSettings::MergeFrom(from.go_settings());
  }
}

void ClientLibrarySettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.ClientLibrarySettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientLibrarySettings::CopyFrom(const ClientLibrarySettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.ClientLibrarySettings)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ClientLibrarySettings::IsInitialized() const {

  return true;
}

void ClientLibrarySettings::Swap(ClientLibrarySettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientLibrarySettings::InternalSwap(ClientLibrarySettings* other) {
  version_.Swap(&other->version_);
  std::swap(launch_stage_, other->launch_stage_);
  std::swap(rest_numeric_enums_, other->rest_numeric_enums_);
  std::swap(java_settings_, other->java_settings_);
  std::swap(cpp_settings_, other->cpp_settings_);
  std::swap(php_settings_, other->php_settings_);
  std::swap(python_settings_, other->python_settings_);
  std::swap(node_settings_, other->node_settings_);
  std::swap(dotnet_settings_, other->dotnet_settings_);
  std::swap(ruby_settings_, other->ruby_settings_);
  std::swap(go_settings_, other->go_settings_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientLibrarySettings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientLibrarySettings_descriptor_;
  metadata.reflection = ClientLibrarySettings_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientLibrarySettings

// optional string version = 1;
void ClientLibrarySettings::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientLibrarySettings::version() const {
  // @@protoc_insertion_point(field_get:google.api.ClientLibrarySettings.version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientLibrarySettings::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.ClientLibrarySettings.version)
}
void ClientLibrarySettings::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.ClientLibrarySettings.version)
}
void ClientLibrarySettings::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.ClientLibrarySettings.version)
}
::std::string* ClientLibrarySettings::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:google.api.ClientLibrarySettings.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientLibrarySettings::release_version() {
  // @@protoc_insertion_point(field_release:google.api.ClientLibrarySettings.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientLibrarySettings::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:google.api.ClientLibrarySettings.version)
}

// optional .google.api.LaunchStage launch_stage = 2;
void ClientLibrarySettings::clear_launch_stage() {
  launch_stage_ = 0;
}
::google::api::LaunchStage ClientLibrarySettings::launch_stage() const {
  // @@protoc_insertion_point(field_get:google.api.ClientLibrarySettings.launch_stage)
  return static_cast< ::google::api::LaunchStage >(launch_stage_);
}
void ClientLibrarySettings::set_launch_stage(::google::api::LaunchStage value) {
  
  launch_stage_ = value;
  // @@protoc_insertion_point(field_set:google.api.ClientLibrarySettings.launch_stage)
}

// optional bool rest_numeric_enums = 3;
void ClientLibrarySettings::clear_rest_numeric_enums() {
  rest_numeric_enums_ = false;
}
bool ClientLibrarySettings::rest_numeric_enums() const {
  // @@protoc_insertion_point(field_get:google.api.ClientLibrarySettings.rest_numeric_enums)
  return rest_numeric_enums_;
}
void ClientLibrarySettings::set_rest_numeric_enums(bool value) {
  
  rest_numeric_enums_ = value;
  // @@protoc_insertion_point(field_set:google.api.ClientLibrarySettings.rest_numeric_enums)
}

// optional .google.api.JavaSettings java_settings = 21;
bool ClientLibrarySettings::has_java_settings() const {
  return this != internal_default_instance() && java_settings_ != NULL;
}
void ClientLibrarySettings::clear_java_settings() {
  if (GetArenaNoVirtual() == NULL && java_settings_ != NULL) delete java_settings_;
  java_settings_ = NULL;
}
const ::google::api::JavaSettings& ClientLibrarySettings::java_settings() const {
  // @@protoc_insertion_point(field_get:google.api.ClientLibrarySettings.java_settings)
  return java_settings_ != NULL ? *java_settings_
                         : *::google::api::JavaSettings::internal_default_instance();
}
::google::api::JavaSettings* ClientLibrarySettings::mutable_java_settings() {
  
  if (java_settings_ == NULL) {
    java_settings_ = new ::google::api::JavaSettings;
  }
  // @@protoc_insertion_point(field_mutable:google.api.ClientLibrarySettings.java_settings)
  return java_settings_;
}
::google::api::JavaSettings* ClientLibrarySettings::release_java_settings() {
  // @@protoc_insertion_point(field_release:google.api.ClientLibrarySettings.java_settings)
  
  ::google::api::JavaSettings* temp = java_settings_;
  java_settings_ = NULL;
  return temp;
}
void ClientLibrarySettings::set_allocated_java_settings(::google::api::JavaSettings* java_settings) {
  delete java_settings_;
  java_settings_ = java_settings;
  if (java_settings) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.ClientLibrarySettings.java_settings)
}

// optional .google.api.CppSettings cpp_settings = 22;
bool ClientLibrarySettings::has_cpp_settings() const {
  return this != internal_default_instance() && cpp_settings_ != NULL;
}
void ClientLibrarySettings::clear_cpp_settings() {
  if (GetArenaNoVirtual() == NULL && cpp_settings_ != NULL) delete cpp_settings_;
  cpp_settings_ = NULL;
}
const ::google::api::CppSettings& ClientLibrarySettings::cpp_settings() const {
  // @@protoc_insertion_point(field_get:google.api.ClientLibrarySettings.cpp_settings)
  return cpp_settings_ != NULL ? *cpp_settings_
                         : *::google::api::CppSettings::internal_default_instance();
}
::google::api::CppSettings* ClientLibrarySettings::mutable_cpp_settings() {
  
  if (cpp_settings_ == NULL) {
    cpp_settings_ = new ::google::api::CppSettings;
  }
  // @@protoc_insertion_point(field_mutable:google.api.ClientLibrarySettings.cpp_settings)
  return cpp_settings_;
}
::google::api::CppSettings* ClientLibrarySettings::release_cpp_settings() {
  // @@protoc_insertion_point(field_release:google.api.ClientLibrarySettings.cpp_settings)
  
  ::google::api::CppSettings* temp = cpp_settings_;
  cpp_settings_ = NULL;
  return temp;
}
void ClientLibrarySettings::set_allocated_cpp_settings(::google::api::CppSettings* cpp_settings) {
  delete cpp_settings_;
  cpp_settings_ = cpp_settings;
  if (cpp_settings) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.ClientLibrarySettings.cpp_settings)
}

// optional .google.api.PhpSettings php_settings = 23;
bool ClientLibrarySettings::has_php_settings() const {
  return this != internal_default_instance() && php_settings_ != NULL;
}
void ClientLibrarySettings::clear_php_settings() {
  if (GetArenaNoVirtual() == NULL && php_settings_ != NULL) delete php_settings_;
  php_settings_ = NULL;
}
const ::google::api::PhpSettings& ClientLibrarySettings::php_settings() const {
  // @@protoc_insertion_point(field_get:google.api.ClientLibrarySettings.php_settings)
  return php_settings_ != NULL ? *php_settings_
                         : *::google::api::PhpSettings::internal_default_instance();
}
::google::api::PhpSettings* ClientLibrarySettings::mutable_php_settings() {
  
  if (php_settings_ == NULL) {
    php_settings_ = new ::google::api::PhpSettings;
  }
  // @@protoc_insertion_point(field_mutable:google.api.ClientLibrarySettings.php_settings)
  return php_settings_;
}
::google::api::PhpSettings* ClientLibrarySettings::release_php_settings() {
  // @@protoc_insertion_point(field_release:google.api.ClientLibrarySettings.php_settings)
  
  ::google::api::PhpSettings* temp = php_settings_;
  php_settings_ = NULL;
  return temp;
}
void ClientLibrarySettings::set_allocated_php_settings(::google::api::PhpSettings* php_settings) {
  delete php_settings_;
  php_settings_ = php_settings;
  if (php_settings) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.ClientLibrarySettings.php_settings)
}

// optional .google.api.PythonSettings python_settings = 24;
bool ClientLibrarySettings::has_python_settings() const {
  return this != internal_default_instance() && python_settings_ != NULL;
}
void ClientLibrarySettings::clear_python_settings() {
  if (GetArenaNoVirtual() == NULL && python_settings_ != NULL) delete python_settings_;
  python_settings_ = NULL;
}
const ::google::api::PythonSettings& ClientLibrarySettings::python_settings() const {
  // @@protoc_insertion_point(field_get:google.api.ClientLibrarySettings.python_settings)
  return python_settings_ != NULL ? *python_settings_
                         : *::google::api::PythonSettings::internal_default_instance();
}
::google::api::PythonSettings* ClientLibrarySettings::mutable_python_settings() {
  
  if (python_settings_ == NULL) {
    python_settings_ = new ::google::api::PythonSettings;
  }
  // @@protoc_insertion_point(field_mutable:google.api.ClientLibrarySettings.python_settings)
  return python_settings_;
}
::google::api::PythonSettings* ClientLibrarySettings::release_python_settings() {
  // @@protoc_insertion_point(field_release:google.api.ClientLibrarySettings.python_settings)
  
  ::google::api::PythonSettings* temp = python_settings_;
  python_settings_ = NULL;
  return temp;
}
void ClientLibrarySettings::set_allocated_python_settings(::google::api::PythonSettings* python_settings) {
  delete python_settings_;
  python_settings_ = python_settings;
  if (python_settings) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.ClientLibrarySettings.python_settings)
}

// optional .google.api.NodeSettings node_settings = 25;
bool ClientLibrarySettings::has_node_settings() const {
  return this != internal_default_instance() && node_settings_ != NULL;
}
void ClientLibrarySettings::clear_node_settings() {
  if (GetArenaNoVirtual() == NULL && node_settings_ != NULL) delete node_settings_;
  node_settings_ = NULL;
}
const ::google::api::NodeSettings& ClientLibrarySettings::node_settings() const {
  // @@protoc_insertion_point(field_get:google.api.ClientLibrarySettings.node_settings)
  return node_settings_ != NULL ? *node_settings_
                         : *::google::api::NodeSettings::internal_default_instance();
}
::google::api::NodeSettings* ClientLibrarySettings::mutable_node_settings() {
  
  if (node_settings_ == NULL) {
    node_settings_ = new ::google::api::NodeSettings;
  }
  // @@protoc_insertion_point(field_mutable:google.api.ClientLibrarySettings.node_settings)
  return node_settings_;
}
::google::api::NodeSettings* ClientLibrarySettings::release_node_settings() {
  // @@protoc_insertion_point(field_release:google.api.ClientLibrarySettings.node_settings)
  
  ::google::api::NodeSettings* temp = node_settings_;
  node_settings_ = NULL;
  return temp;
}
void ClientLibrarySettings::set_allocated_node_settings(::google::api::NodeSettings* node_settings) {
  delete node_settings_;
  node_settings_ = node_settings;
  if (node_settings) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.ClientLibrarySettings.node_settings)
}

// optional .google.api.DotnetSettings dotnet_settings = 26;
bool ClientLibrarySettings::has_dotnet_settings() const {
  return this != internal_default_instance() && dotnet_settings_ != NULL;
}
void ClientLibrarySettings::clear_dotnet_settings() {
  if (GetArenaNoVirtual() == NULL && dotnet_settings_ != NULL) delete dotnet_settings_;
  dotnet_settings_ = NULL;
}
const ::google::api::DotnetSettings& ClientLibrarySettings::dotnet_settings() const {
  // @@protoc_insertion_point(field_get:google.api.ClientLibrarySettings.dotnet_settings)
  return dotnet_settings_ != NULL ? *dotnet_settings_
                         : *::google::api::DotnetSettings::internal_default_instance();
}
::google::api::DotnetSettings* ClientLibrarySettings::mutable_dotnet_settings() {
  
  if (dotnet_settings_ == NULL) {
    dotnet_settings_ = new ::google::api::DotnetSettings;
  }
  // @@protoc_insertion_point(field_mutable:google.api.ClientLibrarySettings.dotnet_settings)
  return dotnet_settings_;
}
::google::api::DotnetSettings* ClientLibrarySettings::release_dotnet_settings() {
  // @@protoc_insertion_point(field_release:google.api.ClientLibrarySettings.dotnet_settings)
  
  ::google::api::DotnetSettings* temp = dotnet_settings_;
  dotnet_settings_ = NULL;
  return temp;
}
void ClientLibrarySettings::set_allocated_dotnet_settings(::google::api::DotnetSettings* dotnet_settings) {
  delete dotnet_settings_;
  dotnet_settings_ = dotnet_settings;
  if (dotnet_settings) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.ClientLibrarySettings.dotnet_settings)
}

// optional .google.api.RubySettings ruby_settings = 27;
bool ClientLibrarySettings::has_ruby_settings() const {
  return this != internal_default_instance() && ruby_settings_ != NULL;
}
void ClientLibrarySettings::clear_ruby_settings() {
  if (GetArenaNoVirtual() == NULL && ruby_settings_ != NULL) delete ruby_settings_;
  ruby_settings_ = NULL;
}
const ::google::api::RubySettings& ClientLibrarySettings::ruby_settings() const {
  // @@protoc_insertion_point(field_get:google.api.ClientLibrarySettings.ruby_settings)
  return ruby_settings_ != NULL ? *ruby_settings_
                         : *::google::api::RubySettings::internal_default_instance();
}
::google::api::RubySettings* ClientLibrarySettings::mutable_ruby_settings() {
  
  if (ruby_settings_ == NULL) {
    ruby_settings_ = new ::google::api::RubySettings;
  }
  // @@protoc_insertion_point(field_mutable:google.api.ClientLibrarySettings.ruby_settings)
  return ruby_settings_;
}
::google::api::RubySettings* ClientLibrarySettings::release_ruby_settings() {
  // @@protoc_insertion_point(field_release:google.api.ClientLibrarySettings.ruby_settings)
  
  ::google::api::RubySettings* temp = ruby_settings_;
  ruby_settings_ = NULL;
  return temp;
}
void ClientLibrarySettings::set_allocated_ruby_settings(::google::api::RubySettings* ruby_settings) {
  delete ruby_settings_;
  ruby_settings_ = ruby_settings;
  if (ruby_settings) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.ClientLibrarySettings.ruby_settings)
}

// optional .google.api.GoSettings go_settings = 28;
bool ClientLibrarySettings::has_go_settings() const {
  return this != internal_default_instance() && go_settings_ != NULL;
}
void ClientLibrarySettings::clear_go_settings() {
  if (GetArenaNoVirtual() == NULL && go_settings_ != NULL) delete go_settings_;
  go_settings_ = NULL;
}
const ::google::api::GoSettings& ClientLibrarySettings::go_settings() const {
  // @@protoc_insertion_point(field_get:google.api.ClientLibrarySettings.go_settings)
  return go_settings_ != NULL ? *go_settings_
                         : *::google::api::GoSettings::internal_default_instance();
}
::google::api::GoSettings* ClientLibrarySettings::mutable_go_settings() {
  
  if (go_settings_ == NULL) {
    go_settings_ = new ::google::api::GoSettings;
  }
  // @@protoc_insertion_point(field_mutable:google.api.ClientLibrarySettings.go_settings)
  return go_settings_;
}
::google::api::GoSettings* ClientLibrarySettings::release_go_settings() {
  // @@protoc_insertion_point(field_release:google.api.ClientLibrarySettings.go_settings)
  
  ::google::api::GoSettings* temp = go_settings_;
  go_settings_ = NULL;
  return temp;
}
void ClientLibrarySettings::set_allocated_go_settings(::google::api::GoSettings* go_settings) {
  delete go_settings_;
  go_settings_ = go_settings;
  if (go_settings) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.ClientLibrarySettings.go_settings)
}

inline const ClientLibrarySettings* ClientLibrarySettings::internal_default_instance() {
  return &ClientLibrarySettings_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Publishing::kMethodSettingsFieldNumber;
const int Publishing::kNewIssueUriFieldNumber;
const int Publishing::kDocumentationUriFieldNumber;
const int Publishing::kApiShortNameFieldNumber;
const int Publishing::kGithubLabelFieldNumber;
const int Publishing::kCodeownerGithubTeamsFieldNumber;
const int Publishing::kDocTagPrefixFieldNumber;
const int Publishing::kOrganizationFieldNumber;
const int Publishing::kLibrarySettingsFieldNumber;
const int Publishing::kProtoReferenceDocumentationUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Publishing::Publishing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.Publishing)
}

void Publishing::InitAsDefaultInstance() {
}

Publishing::Publishing(const Publishing& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.Publishing)
}

void Publishing::SharedCtor() {
  new_issue_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentation_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  api_short_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  github_label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_tag_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proto_reference_documentation_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  organization_ = 0;
  _cached_size_ = 0;
}

Publishing::~Publishing() {
  // @@protoc_insertion_point(destructor:google.api.Publishing)
  SharedDtor();
}

void Publishing::SharedDtor() {
  new_issue_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentation_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  api_short_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  github_label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_tag_prefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proto_reference_documentation_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Publishing::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Publishing::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Publishing_descriptor_;
}

const Publishing& Publishing::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Publishing> Publishing_default_instance_;

Publishing* Publishing::New(::google::protobuf::Arena* arena) const {
  Publishing* n = new Publishing;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Publishing::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.Publishing)
  new_issue_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentation_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  api_short_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  github_label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_tag_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  organization_ = 0;
  proto_reference_documentation_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_settings_.Clear();
  codeowner_github_teams_.Clear();
  library_settings_.Clear();
}

bool Publishing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.Publishing)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.api.MethodSettings method_settings = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_method_settings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_method_settings()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_method_settings;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(810)) goto parse_new_issue_uri;
        break;
      }

      // optional string new_issue_uri = 101;
      case 101: {
        if (tag == 810) {
         parse_new_issue_uri:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_issue_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->new_issue_uri().data(), this->new_issue_uri().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Publishing.new_issue_uri"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(818)) goto parse_documentation_uri;
        break;
      }

      // optional string documentation_uri = 102;
      case 102: {
        if (tag == 818) {
         parse_documentation_uri:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentation_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->documentation_uri().data(), this->documentation_uri().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Publishing.documentation_uri"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(826)) goto parse_api_short_name;
        break;
      }

      // optional string api_short_name = 103;
      case 103: {
        if (tag == 826) {
         parse_api_short_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_api_short_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->api_short_name().data(), this->api_short_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Publishing.api_short_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(834)) goto parse_github_label;
        break;
      }

      // optional string github_label = 104;
      case 104: {
        if (tag == 834) {
         parse_github_label:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_github_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->github_label().data(), this->github_label().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Publishing.github_label"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(842)) goto parse_codeowner_github_teams;
        break;
      }

      // repeated string codeowner_github_teams = 105;
      case 105: {
        if (tag == 842) {
         parse_codeowner_github_teams:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_codeowner_github_teams()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->codeowner_github_teams(this->codeowner_github_teams_size() - 1).data(),
            this->codeowner_github_teams(this->codeowner_github_teams_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Publishing.codeowner_github_teams"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(842)) goto parse_codeowner_github_teams;
        if (input->ExpectTag(850)) goto parse_doc_tag_prefix;
        break;
      }

      // optional string doc_tag_prefix = 106;
      case 106: {
        if (tag == 850) {
         parse_doc_tag_prefix:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_tag_prefix()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->doc_tag_prefix().data(), this->doc_tag_prefix().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Publishing.doc_tag_prefix"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(856)) goto parse_organization;
        break;
      }

      // optional .google.api.ClientLibraryOrganization organization = 107;
      case 107: {
        if (tag == 856) {
         parse_organization:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_organization(static_cast< ::google::api::ClientLibraryOrganization >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(874)) goto parse_library_settings;
        break;
      }

      // repeated .google.api.ClientLibrarySettings library_settings = 109;
      case 109: {
        if (tag == 874) {
         parse_library_settings:
          DO_(input->IncrementRecursionDepth());
         parse_loop_library_settings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_library_settings()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(874)) goto parse_loop_library_settings;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(882)) goto parse_proto_reference_documentation_uri;
        break;
      }

      // optional string proto_reference_documentation_uri = 110;
      case 110: {
        if (tag == 882) {
         parse_proto_reference_documentation_uri:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_proto_reference_documentation_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->proto_reference_documentation_uri().data(), this->proto_reference_documentation_uri().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Publishing.proto_reference_documentation_uri"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.Publishing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.Publishing)
  return false;
#undef DO_
}

void Publishing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.Publishing)
  // repeated .google.api.MethodSettings method_settings = 2;
  for (unsigned int i = 0, n = this->method_settings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->method_settings(i), output);
  }

  // optional string new_issue_uri = 101;
  if (this->new_issue_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_issue_uri().data(), this->new_issue_uri().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Publishing.new_issue_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      101, this->new_issue_uri(), output);
  }

  // optional string documentation_uri = 102;
  if (this->documentation_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->documentation_uri().data(), this->documentation_uri().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Publishing.documentation_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      102, this->documentation_uri(), output);
  }

  // optional string api_short_name = 103;
  if (this->api_short_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->api_short_name().data(), this->api_short_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Publishing.api_short_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      103, this->api_short_name(), output);
  }

  // optional string github_label = 104;
  if (this->github_label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->github_label().data(), this->github_label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Publishing.github_label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      104, this->github_label(), output);
  }

  // repeated string codeowner_github_teams = 105;
  for (int i = 0; i < this->codeowner_github_teams_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->codeowner_github_teams(i).data(), this->codeowner_github_teams(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Publishing.codeowner_github_teams");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      105, this->codeowner_github_teams(i), output);
  }

  // optional string doc_tag_prefix = 106;
  if (this->doc_tag_prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->doc_tag_prefix().data(), this->doc_tag_prefix().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Publishing.doc_tag_prefix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      106, this->doc_tag_prefix(), output);
  }

  // optional .google.api.ClientLibraryOrganization organization = 107;
  if (this->organization() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      107, this->organization(), output);
  }

  // repeated .google.api.ClientLibrarySettings library_settings = 109;
  for (unsigned int i = 0, n = this->library_settings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      109, this->library_settings(i), output);
  }

  // optional string proto_reference_documentation_uri = 110;
  if (this->proto_reference_documentation_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->proto_reference_documentation_uri().data(), this->proto_reference_documentation_uri().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Publishing.proto_reference_documentation_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      110, this->proto_reference_documentation_uri(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.Publishing)
}

::google::protobuf::uint8* Publishing::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.Publishing)
  // repeated .google.api.MethodSettings method_settings = 2;
  for (unsigned int i = 0, n = this->method_settings_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->method_settings(i), false, target);
  }

  // optional string new_issue_uri = 101;
  if (this->new_issue_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_issue_uri().data(), this->new_issue_uri().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Publishing.new_issue_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        101, this->new_issue_uri(), target);
  }

  // optional string documentation_uri = 102;
  if (this->documentation_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->documentation_uri().data(), this->documentation_uri().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Publishing.documentation_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        102, this->documentation_uri(), target);
  }

  // optional string api_short_name = 103;
  if (this->api_short_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->api_short_name().data(), this->api_short_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Publishing.api_short_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        103, this->api_short_name(), target);
  }

  // optional string github_label = 104;
  if (this->github_label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->github_label().data(), this->github_label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Publishing.github_label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        104, this->github_label(), target);
  }

  // repeated string codeowner_github_teams = 105;
  for (int i = 0; i < this->codeowner_github_teams_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->codeowner_github_teams(i).data(), this->codeowner_github_teams(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Publishing.codeowner_github_teams");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(105, this->codeowner_github_teams(i), target);
  }

  // optional string doc_tag_prefix = 106;
  if (this->doc_tag_prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->doc_tag_prefix().data(), this->doc_tag_prefix().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Publishing.doc_tag_prefix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        106, this->doc_tag_prefix(), target);
  }

  // optional .google.api.ClientLibraryOrganization organization = 107;
  if (this->organization() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      107, this->organization(), target);
  }

  // repeated .google.api.ClientLibrarySettings library_settings = 109;
  for (unsigned int i = 0, n = this->library_settings_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        109, this->library_settings(i), false, target);
  }

  // optional string proto_reference_documentation_uri = 110;
  if (this->proto_reference_documentation_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->proto_reference_documentation_uri().data(), this->proto_reference_documentation_uri().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Publishing.proto_reference_documentation_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        110, this->proto_reference_documentation_uri(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.Publishing)
  return target;
}

size_t Publishing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.Publishing)
  size_t total_size = 0;

  // optional string new_issue_uri = 101;
  if (this->new_issue_uri().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->new_issue_uri());
  }

  // optional string documentation_uri = 102;
  if (this->documentation_uri().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->documentation_uri());
  }

  // optional string api_short_name = 103;
  if (this->api_short_name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->api_short_name());
  }

  // optional string github_label = 104;
  if (this->github_label().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->github_label());
  }

  // optional string doc_tag_prefix = 106;
  if (this->doc_tag_prefix().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->doc_tag_prefix());
  }

  // optional .google.api.ClientLibraryOrganization organization = 107;
  if (this->organization() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->organization());
  }

  // optional string proto_reference_documentation_uri = 110;
  if (this->proto_reference_documentation_uri().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->proto_reference_documentation_uri());
  }

  // repeated .google.api.MethodSettings method_settings = 2;
  {
    unsigned int count = this->method_settings_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->method_settings(i));
    }
  }

  // repeated string codeowner_github_teams = 105;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->codeowner_github_teams_size());
  for (int i = 0; i < this->codeowner_github_teams_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->codeowner_github_teams(i));
  }

  // repeated .google.api.ClientLibrarySettings library_settings = 109;
  {
    unsigned int count = this->library_settings_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->library_settings(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Publishing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.Publishing)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Publishing* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Publishing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.Publishing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.Publishing)
    UnsafeMergeFrom(*source);
  }
}

void Publishing::MergeFrom(const Publishing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.Publishing)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Publishing::UnsafeMergeFrom(const Publishing& from) {
  GOOGLE_DCHECK(&from != this);
  method_settings_.MergeFrom(from.method_settings_);
  codeowner_github_teams_.UnsafeMergeFrom(from.codeowner_github_teams_);
  library_settings_.MergeFrom(from.library_settings_);
  if (from.new_issue_uri().size() > 0) {

    new_issue_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_issue_uri_);
  }
  if (from.documentation_uri().size() > 0) {

    documentation_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.documentation_uri_);
  }
  if (from.api_short_name().size() > 0) {

    api_short_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.api_short_name_);
  }
  if (from.github_label().size() > 0) {

    github_label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.github_label_);
  }
  if (from.doc_tag_prefix().size() > 0) {

    doc_tag_prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_tag_prefix_);
  }
  if (from.organization() != 0) {
    set_organization(from.organization());
  }
  if (from.proto_reference_documentation_uri().size() > 0) {

    proto_reference_documentation_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proto_reference_documentation_uri_);
  }
}

void Publishing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.Publishing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Publishing::CopyFrom(const Publishing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.Publishing)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Publishing::IsInitialized() const {

  return true;
}

void Publishing::Swap(Publishing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Publishing::InternalSwap(Publishing* other) {
  method_settings_.UnsafeArenaSwap(&other->method_settings_);
  new_issue_uri_.Swap(&other->new_issue_uri_);
  documentation_uri_.Swap(&other->documentation_uri_);
  api_short_name_.Swap(&other->api_short_name_);
  github_label_.Swap(&other->github_label_);
  codeowner_github_teams_.UnsafeArenaSwap(&other->codeowner_github_teams_);
  doc_tag_prefix_.Swap(&other->doc_tag_prefix_);
  std::swap(organization_, other->organization_);
  library_settings_.UnsafeArenaSwap(&other->library_settings_);
  proto_reference_documentation_uri_.Swap(&other->proto_reference_documentation_uri_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Publishing::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Publishing_descriptor_;
  metadata.reflection = Publishing_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Publishing

// repeated .google.api.MethodSettings method_settings = 2;
int Publishing::method_settings_size() const {
  return method_settings_.size();
}
void Publishing::clear_method_settings() {
  method_settings_.Clear();
}
const ::google::api::MethodSettings& Publishing::method_settings(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Publishing.method_settings)
  return method_settings_.Get(index);
}
::google::api::MethodSettings* Publishing::mutable_method_settings(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Publishing.method_settings)
  return method_settings_.Mutable(index);
}
::google::api::MethodSettings* Publishing::add_method_settings() {
  // @@protoc_insertion_point(field_add:google.api.Publishing.method_settings)
  return method_settings_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::api::MethodSettings >*
Publishing::mutable_method_settings() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Publishing.method_settings)
  return &method_settings_;
}
const ::google::protobuf::RepeatedPtrField< ::google::api::MethodSettings >&
Publishing::method_settings() const {
  // @@protoc_insertion_point(field_list:google.api.Publishing.method_settings)
  return method_settings_;
}

// optional string new_issue_uri = 101;
void Publishing::clear_new_issue_uri() {
  new_issue_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Publishing::new_issue_uri() const {
  // @@protoc_insertion_point(field_get:google.api.Publishing.new_issue_uri)
  return new_issue_uri_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Publishing::set_new_issue_uri(const ::std::string& value) {
  
  new_issue_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.Publishing.new_issue_uri)
}
void Publishing::set_new_issue_uri(const char* value) {
  
  new_issue_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.Publishing.new_issue_uri)
}
void Publishing::set_new_issue_uri(const char* value, size_t size) {
  
  new_issue_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.Publishing.new_issue_uri)
}
::std::string* Publishing::mutable_new_issue_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.api.Publishing.new_issue_uri)
  return new_issue_uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Publishing::release_new_issue_uri() {
  // @@protoc_insertion_point(field_release:google.api.Publishing.new_issue_uri)
  
  return new_issue_uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Publishing::set_allocated_new_issue_uri(::std::string* new_issue_uri) {
  if (new_issue_uri != NULL) {
    
  } else {
    
  }
  new_issue_uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_issue_uri);
  // @@protoc_insertion_point(field_set_allocated:google.api.Publishing.new_issue_uri)
}

// optional string documentation_uri = 102;
void Publishing::clear_documentation_uri() {
  documentation_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Publishing::documentation_uri() const {
  // @@protoc_insertion_point(field_get:google.api.Publishing.documentation_uri)
  return documentation_uri_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Publishing::set_documentation_uri(const ::std::string& value) {
  
  documentation_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.Publishing.documentation_uri)
}
void Publishing::set_documentation_uri(const char* value) {
  
  documentation_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.Publishing.documentation_uri)
}
void Publishing::set_documentation_uri(const char* value, size_t size) {
  
  documentation_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.Publishing.documentation_uri)
}
::std::string* Publishing::mutable_documentation_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.api.Publishing.documentation_uri)
  return documentation_uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Publishing::release_documentation_uri() {
  // @@protoc_insertion_point(field_release:google.api.Publishing.documentation_uri)
  
  return documentation_uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Publishing::set_allocated_documentation_uri(::std::string* documentation_uri) {
  if (documentation_uri != NULL) {
    
  } else {
    
  }
  documentation_uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), documentation_uri);
  // @@protoc_insertion_point(field_set_allocated:google.api.Publishing.documentation_uri)
}

// optional string api_short_name = 103;
void Publishing::clear_api_short_name() {
  api_short_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Publishing::api_short_name() const {
  // @@protoc_insertion_point(field_get:google.api.Publishing.api_short_name)
  return api_short_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Publishing::set_api_short_name(const ::std::string& value) {
  
  api_short_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.Publishing.api_short_name)
}
void Publishing::set_api_short_name(const char* value) {
  
  api_short_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.Publishing.api_short_name)
}
void Publishing::set_api_short_name(const char* value, size_t size) {
  
  api_short_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.Publishing.api_short_name)
}
::std::string* Publishing::mutable_api_short_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.Publishing.api_short_name)
  return api_short_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Publishing::release_api_short_name() {
  // @@protoc_insertion_point(field_release:google.api.Publishing.api_short_name)
  
  return api_short_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Publishing::set_allocated_api_short_name(::std::string* api_short_name) {
  if (api_short_name != NULL) {
    
  } else {
    
  }
  api_short_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), api_short_name);
  // @@protoc_insertion_point(field_set_allocated:google.api.Publishing.api_short_name)
}

// optional string github_label = 104;
void Publishing::clear_github_label() {
  github_label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Publishing::github_label() const {
  // @@protoc_insertion_point(field_get:google.api.Publishing.github_label)
  return github_label_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Publishing::set_github_label(const ::std::string& value) {
  
  github_label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.Publishing.github_label)
}
void Publishing::set_github_label(const char* value) {
  
  github_label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.Publishing.github_label)
}
void Publishing::set_github_label(const char* value, size_t size) {
  
  github_label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.Publishing.github_label)
}
::std::string* Publishing::mutable_github_label() {
  
  // @@protoc_insertion_point(field_mutable:google.api.Publishing.github_label)
  return github_label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Publishing::release_github_label() {
  // @@protoc_insertion_point(field_release:google.api.Publishing.github_label)
  
  return github_label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Publishing::set_allocated_github_label(::std::string* github_label) {
  if (github_label != NULL) {
    
  } else {
    
  }
  github_label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), github_label);
  // @@protoc_insertion_point(field_set_allocated:google.api.Publishing.github_label)
}

// repeated string codeowner_github_teams = 105;
int Publishing::codeowner_github_teams_size() const {
  return codeowner_github_teams_.size();
}
void Publishing::clear_codeowner_github_teams() {
  codeowner_github_teams_.Clear();
}
const ::std::string& Publishing::codeowner_github_teams(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Publishing.codeowner_github_teams)
  return codeowner_github_teams_.Get(index);
}
::std::string* Publishing::mutable_codeowner_github_teams(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Publishing.codeowner_github_teams)
  return codeowner_github_teams_.Mutable(index);
}
void Publishing::set_codeowner_github_teams(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.api.Publishing.codeowner_github_teams)
  codeowner_github_teams_.Mutable(index)->assign(value);
}
void Publishing::set_codeowner_github_teams(int index, const char* value) {
  codeowner_github_teams_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.api.Publishing.codeowner_github_teams)
}
void Publishing::set_codeowner_github_teams(int index, const char* value, size_t size) {
  codeowner_github_teams_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.api.Publishing.codeowner_github_teams)
}
::std::string* Publishing::add_codeowner_github_teams() {
  // @@protoc_insertion_point(field_add_mutable:google.api.Publishing.codeowner_github_teams)
  return codeowner_github_teams_.Add();
}
void Publishing::add_codeowner_github_teams(const ::std::string& value) {
  codeowner_github_teams_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.api.Publishing.codeowner_github_teams)
}
void Publishing::add_codeowner_github_teams(const char* value) {
  codeowner_github_teams_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.api.Publishing.codeowner_github_teams)
}
void Publishing::add_codeowner_github_teams(const char* value, size_t size) {
  codeowner_github_teams_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.api.Publishing.codeowner_github_teams)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Publishing::codeowner_github_teams() const {
  // @@protoc_insertion_point(field_list:google.api.Publishing.codeowner_github_teams)
  return codeowner_github_teams_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Publishing::mutable_codeowner_github_teams() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Publishing.codeowner_github_teams)
  return &codeowner_github_teams_;
}

// optional string doc_tag_prefix = 106;
void Publishing::clear_doc_tag_prefix() {
  doc_tag_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Publishing::doc_tag_prefix() const {
  // @@protoc_insertion_point(field_get:google.api.Publishing.doc_tag_prefix)
  return doc_tag_prefix_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Publishing::set_doc_tag_prefix(const ::std::string& value) {
  
  doc_tag_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.Publishing.doc_tag_prefix)
}
void Publishing::set_doc_tag_prefix(const char* value) {
  
  doc_tag_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.Publishing.doc_tag_prefix)
}
void Publishing::set_doc_tag_prefix(const char* value, size_t size) {
  
  doc_tag_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.Publishing.doc_tag_prefix)
}
::std::string* Publishing::mutable_doc_tag_prefix() {
  
  // @@protoc_insertion_point(field_mutable:google.api.Publishing.doc_tag_prefix)
  return doc_tag_prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Publishing::release_doc_tag_prefix() {
  // @@protoc_insertion_point(field_release:google.api.Publishing.doc_tag_prefix)
  
  return doc_tag_prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Publishing::set_allocated_doc_tag_prefix(::std::string* doc_tag_prefix) {
  if (doc_tag_prefix != NULL) {
    
  } else {
    
  }
  doc_tag_prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_tag_prefix);
  // @@protoc_insertion_point(field_set_allocated:google.api.Publishing.doc_tag_prefix)
}

// optional .google.api.ClientLibraryOrganization organization = 107;
void Publishing::clear_organization() {
  organization_ = 0;
}
::google::api::ClientLibraryOrganization Publishing::organization() const {
  // @@protoc_insertion_point(field_get:google.api.Publishing.organization)
  return static_cast< ::google::api::ClientLibraryOrganization >(organization_);
}
void Publishing::set_organization(::google::api::ClientLibraryOrganization value) {
  
  organization_ = value;
  // @@protoc_insertion_point(field_set:google.api.Publishing.organization)
}

// repeated .google.api.ClientLibrarySettings library_settings = 109;
int Publishing::library_settings_size() const {
  return library_settings_.size();
}
void Publishing::clear_library_settings() {
  library_settings_.Clear();
}
const ::google::api::ClientLibrarySettings& Publishing::library_settings(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Publishing.library_settings)
  return library_settings_.Get(index);
}
::google::api::ClientLibrarySettings* Publishing::mutable_library_settings(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Publishing.library_settings)
  return library_settings_.Mutable(index);
}
::google::api::ClientLibrarySettings* Publishing::add_library_settings() {
  // @@protoc_insertion_point(field_add:google.api.Publishing.library_settings)
  return library_settings_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::api::ClientLibrarySettings >*
Publishing::mutable_library_settings() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Publishing.library_settings)
  return &library_settings_;
}
const ::google::protobuf::RepeatedPtrField< ::google::api::ClientLibrarySettings >&
Publishing::library_settings() const {
  // @@protoc_insertion_point(field_list:google.api.Publishing.library_settings)
  return library_settings_;
}

// optional string proto_reference_documentation_uri = 110;
void Publishing::clear_proto_reference_documentation_uri() {
  proto_reference_documentation_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Publishing::proto_reference_documentation_uri() const {
  // @@protoc_insertion_point(field_get:google.api.Publishing.proto_reference_documentation_uri)
  return proto_reference_documentation_uri_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Publishing::set_proto_reference_documentation_uri(const ::std::string& value) {
  
  proto_reference_documentation_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.Publishing.proto_reference_documentation_uri)
}
void Publishing::set_proto_reference_documentation_uri(const char* value) {
  
  proto_reference_documentation_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.Publishing.proto_reference_documentation_uri)
}
void Publishing::set_proto_reference_documentation_uri(const char* value, size_t size) {
  
  proto_reference_documentation_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.Publishing.proto_reference_documentation_uri)
}
::std::string* Publishing::mutable_proto_reference_documentation_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.api.Publishing.proto_reference_documentation_uri)
  return proto_reference_documentation_uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Publishing::release_proto_reference_documentation_uri() {
  // @@protoc_insertion_point(field_release:google.api.Publishing.proto_reference_documentation_uri)
  
  return proto_reference_documentation_uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Publishing::set_allocated_proto_reference_documentation_uri(::std::string* proto_reference_documentation_uri) {
  if (proto_reference_documentation_uri != NULL) {
    
  } else {
    
  }
  proto_reference_documentation_uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proto_reference_documentation_uri);
  // @@protoc_insertion_point(field_set_allocated:google.api.Publishing.proto_reference_documentation_uri)
}

inline const Publishing* Publishing::internal_default_instance() {
  return &Publishing_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JavaSettings::kLibraryPackageFieldNumber;
const int JavaSettings::kServiceClassNamesFieldNumber;
const int JavaSettings::kCommonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JavaSettings::JavaSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.JavaSettings)
}

void JavaSettings::InitAsDefaultInstance() {
  common_ = const_cast< ::google::api::CommonLanguageSettings*>(
      ::google::api::CommonLanguageSettings::internal_default_instance());
}

JavaSettings::JavaSettings(const JavaSettings& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.JavaSettings)
}

void JavaSettings::SharedCtor() {
  service_class_names_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  service_class_names_.SetEntryDescriptor(
      &::google::api::JavaSettings_ServiceClassNamesEntry_descriptor_);
  library_package_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  common_ = NULL;
  _cached_size_ = 0;
}

JavaSettings::~JavaSettings() {
  // @@protoc_insertion_point(destructor:google.api.JavaSettings)
  SharedDtor();
}

void JavaSettings::SharedDtor() {
  library_package_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &JavaSettings_default_instance_.get()) {
    delete common_;
  }
}

void JavaSettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JavaSettings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JavaSettings_descriptor_;
}

const JavaSettings& JavaSettings::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<JavaSettings> JavaSettings_default_instance_;

JavaSettings* JavaSettings::New(::google::protobuf::Arena* arena) const {
  JavaSettings* n = new JavaSettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JavaSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.JavaSettings)
  library_package_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && common_ != NULL) delete common_;
  common_ = NULL;
  service_class_names_.Clear();
}

bool JavaSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.JavaSettings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string library_package = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_library_package()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->library_package().data(), this->library_package().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.JavaSettings.library_package"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_service_class_names;
        break;
      }

      // map<string, string> service_class_names = 2;
      case 2: {
        if (tag == 18) {
         parse_service_class_names:
          DO_(input->IncrementRecursionDepth());
         parse_loop_service_class_names:
          JavaSettings_ServiceClassNamesEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&service_class_names_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.JavaSettings.ServiceClassNamesEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.JavaSettings.ServiceClassNamesEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_service_class_names;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(26)) goto parse_common;
        break;
      }

      // optional .google.api.CommonLanguageSettings common = 3;
      case 3: {
        if (tag == 26) {
         parse_common:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.JavaSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.JavaSettings)
  return false;
#undef DO_
}

void JavaSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.JavaSettings)
  // optional string library_package = 1;
  if (this->library_package().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->library_package().data(), this->library_package().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.JavaSettings.library_package");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->library_package(), output);
  }

  // map<string, string> service_class_names = 2;
  if (!this->service_class_names().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.JavaSettings.ServiceClassNamesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.JavaSettings.ServiceClassNamesEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->service_class_names().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->service_class_names().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->service_class_names().begin();
          it != this->service_class_names().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<JavaSettings_ServiceClassNamesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(service_class_names_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<JavaSettings_ServiceClassNamesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->service_class_names().begin();
          it != this->service_class_names().end(); ++it) {
        entry.reset(service_class_names_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional .google.api.CommonLanguageSettings common = 3;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->common_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.JavaSettings)
}

::google::protobuf::uint8* JavaSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.JavaSettings)
  // optional string library_package = 1;
  if (this->library_package().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->library_package().data(), this->library_package().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.JavaSettings.library_package");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->library_package(), target);
  }

  // map<string, string> service_class_names = 2;
  if (!this->service_class_names().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.JavaSettings.ServiceClassNamesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.JavaSettings.ServiceClassNamesEntry.value");
      }
    };

    if (deterministic &&
        this->service_class_names().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->service_class_names().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->service_class_names().begin();
          it != this->service_class_names().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<JavaSettings_ServiceClassNamesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(service_class_names_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<JavaSettings_ServiceClassNamesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->service_class_names().begin();
          it != this->service_class_names().end(); ++it) {
        entry.reset(service_class_names_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional .google.api.CommonLanguageSettings common = 3;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->common_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.JavaSettings)
  return target;
}

size_t JavaSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.JavaSettings)
  size_t total_size = 0;

  // optional string library_package = 1;
  if (this->library_package().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->library_package());
  }

  // optional .google.api.CommonLanguageSettings common = 3;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->common_);
  }

  // map<string, string> service_class_names = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->service_class_names_size());
  {
    ::google::protobuf::scoped_ptr<JavaSettings_ServiceClassNamesEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->service_class_names().begin();
        it != this->service_class_names().end(); ++it) {
      entry.reset(service_class_names_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JavaSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.JavaSettings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const JavaSettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JavaSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.JavaSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.JavaSettings)
    UnsafeMergeFrom(*source);
  }
}

void JavaSettings::MergeFrom(const JavaSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.JavaSettings)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void JavaSettings::UnsafeMergeFrom(const JavaSettings& from) {
  GOOGLE_DCHECK(&from != this);
  service_class_names_.MergeFrom(from.service_class_names_);
  if (from.library_package().size() > 0) {

    library_package_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.library_package_);
  }
  if (from.has_common()) {
    mutable_common()->::google::api::CommonLanguageSettings::MergeFrom(from.common());
  }
}

void JavaSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.JavaSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JavaSettings::CopyFrom(const JavaSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.JavaSettings)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool JavaSettings::IsInitialized() const {

  return true;
}

void JavaSettings::Swap(JavaSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JavaSettings::InternalSwap(JavaSettings* other) {
  library_package_.Swap(&other->library_package_);
  service_class_names_.Swap(&other->service_class_names_);
  std::swap(common_, other->common_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JavaSettings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JavaSettings_descriptor_;
  metadata.reflection = JavaSettings_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JavaSettings

// optional string library_package = 1;
void JavaSettings::clear_library_package() {
  library_package_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& JavaSettings::library_package() const {
  // @@protoc_insertion_point(field_get:google.api.JavaSettings.library_package)
  return library_package_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JavaSettings::set_library_package(const ::std::string& value) {
  
  library_package_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.JavaSettings.library_package)
}
void JavaSettings::set_library_package(const char* value) {
  
  library_package_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.JavaSettings.library_package)
}
void JavaSettings::set_library_package(const char* value, size_t size) {
  
  library_package_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.JavaSettings.library_package)
}
::std::string* JavaSettings::mutable_library_package() {
  
  // @@protoc_insertion_point(field_mutable:google.api.JavaSettings.library_package)
  return library_package_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JavaSettings::release_library_package() {
  // @@protoc_insertion_point(field_release:google.api.JavaSettings.library_package)
  
  return library_package_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JavaSettings::set_allocated_library_package(::std::string* library_package) {
  if (library_package != NULL) {
    
  } else {
    
  }
  library_package_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), library_package);
  // @@protoc_insertion_point(field_set_allocated:google.api.JavaSettings.library_package)
}

// map<string, string> service_class_names = 2;
int JavaSettings::service_class_names_size() const {
  return service_class_names_.size();
}
void JavaSettings::clear_service_class_names() {
  service_class_names_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
JavaSettings::service_class_names() const {
  // @@protoc_insertion_point(field_map:google.api.JavaSettings.service_class_names)
  return service_class_names_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
JavaSettings::mutable_service_class_names() {
  // @@protoc_insertion_point(field_mutable_map:google.api.JavaSettings.service_class_names)
  return service_class_names_.MutableMap();
}

// optional .google.api.CommonLanguageSettings common = 3;
bool JavaSettings::has_common() const {
  return this != internal_default_instance() && common_ != NULL;
}
void JavaSettings::clear_common() {
  if (GetArenaNoVirtual() == NULL && common_ != NULL) delete common_;
  common_ = NULL;
}
const ::google::api::CommonLanguageSettings& JavaSettings::common() const {
  // @@protoc_insertion_point(field_get:google.api.JavaSettings.common)
  return common_ != NULL ? *common_
                         : *::google::api::CommonLanguageSettings::internal_default_instance();
}
::google::api::CommonLanguageSettings* JavaSettings::mutable_common() {
  
  if (common_ == NULL) {
    common_ = new ::google::api::CommonLanguageSettings;
  }
  // @@protoc_insertion_point(field_mutable:google.api.JavaSettings.common)
  return common_;
}
::google::api::CommonLanguageSettings* JavaSettings::release_common() {
  // @@protoc_insertion_point(field_release:google.api.JavaSettings.common)
  
  ::google::api::CommonLanguageSettings* temp = common_;
  common_ = NULL;
  return temp;
}
void JavaSettings::set_allocated_common(::google::api::CommonLanguageSettings* common) {
  delete common_;
  common_ = common;
  if (common) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.JavaSettings.common)
}

inline const JavaSettings* JavaSettings::internal_default_instance() {
  return &JavaSettings_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CppSettings::kCommonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CppSettings::CppSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.CppSettings)
}

void CppSettings::InitAsDefaultInstance() {
  common_ = const_cast< ::google::api::CommonLanguageSettings*>(
      ::google::api::CommonLanguageSettings::internal_default_instance());
}

CppSettings::CppSettings(const CppSettings& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.CppSettings)
}

void CppSettings::SharedCtor() {
  common_ = NULL;
  _cached_size_ = 0;
}

CppSettings::~CppSettings() {
  // @@protoc_insertion_point(destructor:google.api.CppSettings)
  SharedDtor();
}

void CppSettings::SharedDtor() {
  if (this != &CppSettings_default_instance_.get()) {
    delete common_;
  }
}

void CppSettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CppSettings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CppSettings_descriptor_;
}

const CppSettings& CppSettings::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CppSettings> CppSettings_default_instance_;

CppSettings* CppSettings::New(::google::protobuf::Arena* arena) const {
  CppSettings* n = new CppSettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CppSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.CppSettings)
  if (GetArenaNoVirtual() == NULL && common_ != NULL) delete common_;
  common_ = NULL;
}

bool CppSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.CppSettings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.api.CommonLanguageSettings common = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.CppSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.CppSettings)
  return false;
#undef DO_
}

void CppSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.CppSettings)
  // optional .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->common_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.CppSettings)
}

::google::protobuf::uint8* CppSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.CppSettings)
  // optional .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->common_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.CppSettings)
  return target;
}

size_t CppSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.CppSettings)
  size_t total_size = 0;

  // optional .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->common_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CppSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.CppSettings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CppSettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CppSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.CppSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.CppSettings)
    UnsafeMergeFrom(*source);
  }
}

void CppSettings::MergeFrom(const CppSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.CppSettings)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CppSettings::UnsafeMergeFrom(const CppSettings& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_common()) {
    mutable_common()->::google::api::CommonLanguageSettings::MergeFrom(from.common());
  }
}

void CppSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.CppSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CppSettings::CopyFrom(const CppSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.CppSettings)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CppSettings::IsInitialized() const {

  return true;
}

void CppSettings::Swap(CppSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CppSettings::InternalSwap(CppSettings* other) {
  std::swap(common_, other->common_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CppSettings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CppSettings_descriptor_;
  metadata.reflection = CppSettings_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CppSettings

// optional .google.api.CommonLanguageSettings common = 1;
bool CppSettings::has_common() const {
  return this != internal_default_instance() && common_ != NULL;
}
void CppSettings::clear_common() {
  if (GetArenaNoVirtual() == NULL && common_ != NULL) delete common_;
  common_ = NULL;
}
const ::google::api::CommonLanguageSettings& CppSettings::common() const {
  // @@protoc_insertion_point(field_get:google.api.CppSettings.common)
  return common_ != NULL ? *common_
                         : *::google::api::CommonLanguageSettings::internal_default_instance();
}
::google::api::CommonLanguageSettings* CppSettings::mutable_common() {
  
  if (common_ == NULL) {
    common_ = new ::google::api::CommonLanguageSettings;
  }
  // @@protoc_insertion_point(field_mutable:google.api.CppSettings.common)
  return common_;
}
::google::api::CommonLanguageSettings* CppSettings::release_common() {
  // @@protoc_insertion_point(field_release:google.api.CppSettings.common)
  
  ::google::api::CommonLanguageSettings* temp = common_;
  common_ = NULL;
  return temp;
}
void CppSettings::set_allocated_common(::google::api::CommonLanguageSettings* common) {
  delete common_;
  common_ = common;
  if (common) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.CppSettings.common)
}

inline const CppSettings* CppSettings::internal_default_instance() {
  return &CppSettings_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhpSettings::kCommonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhpSettings::PhpSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.PhpSettings)
}

void PhpSettings::InitAsDefaultInstance() {
  common_ = const_cast< ::google::api::CommonLanguageSettings*>(
      ::google::api::CommonLanguageSettings::internal_default_instance());
}

PhpSettings::PhpSettings(const PhpSettings& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.PhpSettings)
}

void PhpSettings::SharedCtor() {
  common_ = NULL;
  _cached_size_ = 0;
}

PhpSettings::~PhpSettings() {
  // @@protoc_insertion_point(destructor:google.api.PhpSettings)
  SharedDtor();
}

void PhpSettings::SharedDtor() {
  if (this != &PhpSettings_default_instance_.get()) {
    delete common_;
  }
}

void PhpSettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PhpSettings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PhpSettings_descriptor_;
}

const PhpSettings& PhpSettings::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PhpSettings> PhpSettings_default_instance_;

PhpSettings* PhpSettings::New(::google::protobuf::Arena* arena) const {
  PhpSettings* n = new PhpSettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PhpSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.PhpSettings)
  if (GetArenaNoVirtual() == NULL && common_ != NULL) delete common_;
  common_ = NULL;
}

bool PhpSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.PhpSettings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.api.CommonLanguageSettings common = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.PhpSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.PhpSettings)
  return false;
#undef DO_
}

void PhpSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.PhpSettings)
  // optional .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->common_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.PhpSettings)
}

::google::protobuf::uint8* PhpSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.PhpSettings)
  // optional .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->common_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.PhpSettings)
  return target;
}

size_t PhpSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.PhpSettings)
  size_t total_size = 0;

  // optional .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->common_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PhpSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.PhpSettings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PhpSettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhpSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.PhpSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.PhpSettings)
    UnsafeMergeFrom(*source);
  }
}

void PhpSettings::MergeFrom(const PhpSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.PhpSettings)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PhpSettings::UnsafeMergeFrom(const PhpSettings& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_common()) {
    mutable_common()->::google::api::CommonLanguageSettings::MergeFrom(from.common());
  }
}

void PhpSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.PhpSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhpSettings::CopyFrom(const PhpSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.PhpSettings)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PhpSettings::IsInitialized() const {

  return true;
}

void PhpSettings::Swap(PhpSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhpSettings::InternalSwap(PhpSettings* other) {
  std::swap(common_, other->common_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PhpSettings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PhpSettings_descriptor_;
  metadata.reflection = PhpSettings_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PhpSettings

// optional .google.api.CommonLanguageSettings common = 1;
bool PhpSettings::has_common() const {
  return this != internal_default_instance() && common_ != NULL;
}
void PhpSettings::clear_common() {
  if (GetArenaNoVirtual() == NULL && common_ != NULL) delete common_;
  common_ = NULL;
}
const ::google::api::CommonLanguageSettings& PhpSettings::common() const {
  // @@protoc_insertion_point(field_get:google.api.PhpSettings.common)
  return common_ != NULL ? *common_
                         : *::google::api::CommonLanguageSettings::internal_default_instance();
}
::google::api::CommonLanguageSettings* PhpSettings::mutable_common() {
  
  if (common_ == NULL) {
    common_ = new ::google::api::CommonLanguageSettings;
  }
  // @@protoc_insertion_point(field_mutable:google.api.PhpSettings.common)
  return common_;
}
::google::api::CommonLanguageSettings* PhpSettings::release_common() {
  // @@protoc_insertion_point(field_release:google.api.PhpSettings.common)
  
  ::google::api::CommonLanguageSettings* temp = common_;
  common_ = NULL;
  return temp;
}
void PhpSettings::set_allocated_common(::google::api::CommonLanguageSettings* common) {
  delete common_;
  common_ = common;
  if (common) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.PhpSettings.common)
}

inline const PhpSettings* PhpSettings::internal_default_instance() {
  return &PhpSettings_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PythonSettings::kCommonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PythonSettings::PythonSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.PythonSettings)
}

void PythonSettings::InitAsDefaultInstance() {
  common_ = const_cast< ::google::api::CommonLanguageSettings*>(
      ::google::api::CommonLanguageSettings::internal_default_instance());
}

PythonSettings::PythonSettings(const PythonSettings& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.PythonSettings)
}

void PythonSettings::SharedCtor() {
  common_ = NULL;
  _cached_size_ = 0;
}

PythonSettings::~PythonSettings() {
  // @@protoc_insertion_point(destructor:google.api.PythonSettings)
  SharedDtor();
}

void PythonSettings::SharedDtor() {
  if (this != &PythonSettings_default_instance_.get()) {
    delete common_;
  }
}

void PythonSettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PythonSettings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PythonSettings_descriptor_;
}

const PythonSettings& PythonSettings::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PythonSettings> PythonSettings_default_instance_;

PythonSettings* PythonSettings::New(::google::protobuf::Arena* arena) const {
  PythonSettings* n = new PythonSettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PythonSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.PythonSettings)
  if (GetArenaNoVirtual() == NULL && common_ != NULL) delete common_;
  common_ = NULL;
}

bool PythonSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.PythonSettings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.api.CommonLanguageSettings common = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.PythonSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.PythonSettings)
  return false;
#undef DO_
}

void PythonSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.PythonSettings)
  // optional .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->common_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.PythonSettings)
}

::google::protobuf::uint8* PythonSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.PythonSettings)
  // optional .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->common_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.PythonSettings)
  return target;
}

size_t PythonSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.PythonSettings)
  size_t total_size = 0;

  // optional .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->common_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PythonSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.PythonSettings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PythonSettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PythonSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.PythonSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.PythonSettings)
    UnsafeMergeFrom(*source);
  }
}

void PythonSettings::MergeFrom(const PythonSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.PythonSettings)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PythonSettings::UnsafeMergeFrom(const PythonSettings& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_common()) {
    mutable_common()->::google::api::CommonLanguageSettings::MergeFrom(from.common());
  }
}

void PythonSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.PythonSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PythonSettings::CopyFrom(const PythonSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.PythonSettings)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PythonSettings::IsInitialized() const {

  return true;
}

void PythonSettings::Swap(PythonSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PythonSettings::InternalSwap(PythonSettings* other) {
  std::swap(common_, other->common_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PythonSettings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PythonSettings_descriptor_;
  metadata.reflection = PythonSettings_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PythonSettings

// optional .google.api.CommonLanguageSettings common = 1;
bool PythonSettings::has_common() const {
  return this != internal_default_instance() && common_ != NULL;
}
void PythonSettings::clear_common() {
  if (GetArenaNoVirtual() == NULL && common_ != NULL) delete common_;
  common_ = NULL;
}
const ::google::api::CommonLanguageSettings& PythonSettings::common() const {
  // @@protoc_insertion_point(field_get:google.api.PythonSettings.common)
  return common_ != NULL ? *common_
                         : *::google::api::CommonLanguageSettings::internal_default_instance();
}
::google::api::CommonLanguageSettings* PythonSettings::mutable_common() {
  
  if (common_ == NULL) {
    common_ = new ::google::api::CommonLanguageSettings;
  }
  // @@protoc_insertion_point(field_mutable:google.api.PythonSettings.common)
  return common_;
}
::google::api::CommonLanguageSettings* PythonSettings::release_common() {
  // @@protoc_insertion_point(field_release:google.api.PythonSettings.common)
  
  ::google::api::CommonLanguageSettings* temp = common_;
  common_ = NULL;
  return temp;
}
void PythonSettings::set_allocated_common(::google::api::CommonLanguageSettings* common) {
  delete common_;
  common_ = common;
  if (common) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.PythonSettings.common)
}

inline const PythonSettings* PythonSettings::internal_default_instance() {
  return &PythonSettings_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeSettings::kCommonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeSettings::NodeSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.NodeSettings)
}

void NodeSettings::InitAsDefaultInstance() {
  common_ = const_cast< ::google::api::CommonLanguageSettings*>(
      ::google::api::CommonLanguageSettings::internal_default_instance());
}

NodeSettings::NodeSettings(const NodeSettings& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.NodeSettings)
}

void NodeSettings::SharedCtor() {
  common_ = NULL;
  _cached_size_ = 0;
}

NodeSettings::~NodeSettings() {
  // @@protoc_insertion_point(destructor:google.api.NodeSettings)
  SharedDtor();
}

void NodeSettings::SharedDtor() {
  if (this != &NodeSettings_default_instance_.get()) {
    delete common_;
  }
}

void NodeSettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeSettings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NodeSettings_descriptor_;
}

const NodeSettings& NodeSettings::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<NodeSettings> NodeSettings_default_instance_;

NodeSettings* NodeSettings::New(::google::protobuf::Arena* arena) const {
  NodeSettings* n = new NodeSettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NodeSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.NodeSettings)
  if (GetArenaNoVirtual() == NULL && common_ != NULL) delete common_;
  common_ = NULL;
}

bool NodeSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.NodeSettings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.api.CommonLanguageSettings common = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.NodeSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.NodeSettings)
  return false;
#undef DO_
}

void NodeSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.NodeSettings)
  // optional .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->common_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.NodeSettings)
}

::google::protobuf::uint8* NodeSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.NodeSettings)
  // optional .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->common_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.NodeSettings)
  return target;
}

size_t NodeSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.NodeSettings)
  size_t total_size = 0;

  // optional .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->common_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.NodeSettings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NodeSettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NodeSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.NodeSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.NodeSettings)
    UnsafeMergeFrom(*source);
  }
}

void NodeSettings::MergeFrom(const NodeSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.NodeSettings)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void NodeSettings::UnsafeMergeFrom(const NodeSettings& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_common()) {
    mutable_common()->::google::api::CommonLanguageSettings::MergeFrom(from.common());
  }
}

void NodeSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.NodeSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeSettings::CopyFrom(const NodeSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.NodeSettings)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool NodeSettings::IsInitialized() const {

  return true;
}

void NodeSettings::Swap(NodeSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeSettings::InternalSwap(NodeSettings* other) {
  std::swap(common_, other->common_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NodeSettings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NodeSettings_descriptor_;
  metadata.reflection = NodeSettings_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NodeSettings

// optional .google.api.CommonLanguageSettings common = 1;
bool NodeSettings::has_common() const {
  return this != internal_default_instance() && common_ != NULL;
}
void NodeSettings::clear_common() {
  if (GetArenaNoVirtual() == NULL && common_ != NULL) delete common_;
  common_ = NULL;
}
const ::google::api::CommonLanguageSettings& NodeSettings::common() const {
  // @@protoc_insertion_point(field_get:google.api.NodeSettings.common)
  return common_ != NULL ? *common_
                         : *::google::api::CommonLanguageSettings::internal_default_instance();
}
::google::api::CommonLanguageSettings* NodeSettings::mutable_common() {
  
  if (common_ == NULL) {
    common_ = new ::google::api::CommonLanguageSettings;
  }
  // @@protoc_insertion_point(field_mutable:google.api.NodeSettings.common)
  return common_;
}
::google::api::CommonLanguageSettings* NodeSettings::release_common() {
  // @@protoc_insertion_point(field_release:google.api.NodeSettings.common)
  
  ::google::api::CommonLanguageSettings* temp = common_;
  common_ = NULL;
  return temp;
}
void NodeSettings::set_allocated_common(::google::api::CommonLanguageSettings* common) {
  delete common_;
  common_ = common;
  if (common) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.NodeSettings.common)
}

inline const NodeSettings* NodeSettings::internal_default_instance() {
  return &NodeSettings_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DotnetSettings::kCommonFieldNumber;
const int DotnetSettings::kRenamedServicesFieldNumber;
const int DotnetSettings::kRenamedResourcesFieldNumber;
const int DotnetSettings::kIgnoredResourcesFieldNumber;
const int DotnetSettings::kForcedNamespaceAliasesFieldNumber;
const int DotnetSettings::kHandwrittenSignaturesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DotnetSettings::DotnetSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.DotnetSettings)
}

void DotnetSettings::InitAsDefaultInstance() {
  common_ = const_cast< ::google::api::CommonLanguageSettings*>(
      ::google::api::CommonLanguageSettings::internal_default_instance());
}

DotnetSettings::DotnetSettings(const DotnetSettings& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.DotnetSettings)
}

void DotnetSettings::SharedCtor() {
  renamed_services_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  renamed_services_.SetEntryDescriptor(
      &::google::api::DotnetSettings_RenamedServicesEntry_descriptor_);
  renamed_resources_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  renamed_resources_.SetEntryDescriptor(
      &::google::api::DotnetSettings_RenamedResourcesEntry_descriptor_);
  common_ = NULL;
  _cached_size_ = 0;
}

DotnetSettings::~DotnetSettings() {
  // @@protoc_insertion_point(destructor:google.api.DotnetSettings)
  SharedDtor();
}

void DotnetSettings::SharedDtor() {
  if (this != &DotnetSettings_default_instance_.get()) {
    delete common_;
  }
}

void DotnetSettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DotnetSettings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DotnetSettings_descriptor_;
}

const DotnetSettings& DotnetSettings::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DotnetSettings> DotnetSettings_default_instance_;

DotnetSettings* DotnetSettings::New(::google::protobuf::Arena* arena) const {
  DotnetSettings* n = new DotnetSettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DotnetSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.DotnetSettings)
  if (GetArenaNoVirtual() == NULL && common_ != NULL) delete common_;
  common_ = NULL;
  renamed_services_.Clear();
  renamed_resources_.Clear();
  ignored_resources_.Clear();
  forced_namespace_aliases_.Clear();
  handwritten_signatures_.Clear();
}

bool DotnetSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.DotnetSettings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.api.CommonLanguageSettings common = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_renamed_services;
        break;
      }

      // map<string, string> renamed_services = 2;
      case 2: {
        if (tag == 18) {
         parse_renamed_services:
          DO_(input->IncrementRecursionDepth());
         parse_loop_renamed_services:
          DotnetSettings_RenamedServicesEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&renamed_services_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.DotnetSettings.RenamedServicesEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.DotnetSettings.RenamedServicesEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_renamed_services;
        if (input->ExpectTag(26)) goto parse_loop_renamed_resources;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // map<string, string> renamed_resources = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_renamed_resources:
          DotnetSettings_RenamedResourcesEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&renamed_resources_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.DotnetSettings.RenamedResourcesEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.DotnetSettings.RenamedResourcesEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_renamed_resources;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(34)) goto parse_ignored_resources;
        break;
      }

      // repeated string ignored_resources = 4;
      case 4: {
        if (tag == 34) {
         parse_ignored_resources:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_ignored_resources()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ignored_resources(this->ignored_resources_size() - 1).data(),
            this->ignored_resources(this->ignored_resources_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.DotnetSettings.ignored_resources"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ignored_resources;
        if (input->ExpectTag(42)) goto parse_forced_namespace_aliases;
        break;
      }

      // repeated string forced_namespace_aliases = 5;
      case 5: {
        if (tag == 42) {
         parse_forced_namespace_aliases:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_forced_namespace_aliases()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->forced_namespace_aliases(this->forced_namespace_aliases_size() - 1).data(),
            this->forced_namespace_aliases(this->forced_namespace_aliases_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.DotnetSettings.forced_namespace_aliases"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_forced_namespace_aliases;
        if (input->ExpectTag(50)) goto parse_handwritten_signatures;
        break;
      }

      // repeated string handwritten_signatures = 6;
      case 6: {
        if (tag == 50) {
         parse_handwritten_signatures:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_handwritten_signatures()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->handwritten_signatures(this->handwritten_signatures_size() - 1).data(),
            this->handwritten_signatures(this->handwritten_signatures_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.DotnetSettings.handwritten_signatures"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_handwritten_signatures;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.DotnetSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.DotnetSettings)
  return false;
#undef DO_
}

void DotnetSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.DotnetSettings)
  // optional .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->common_, output);
  }

  // map<string, string> renamed_services = 2;
  if (!this->renamed_services().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.DotnetSettings.RenamedServicesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.DotnetSettings.RenamedServicesEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->renamed_services().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->renamed_services().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->renamed_services().begin();
          it != this->renamed_services().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<DotnetSettings_RenamedServicesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(renamed_services_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<DotnetSettings_RenamedServicesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->renamed_services().begin();
          it != this->renamed_services().end(); ++it) {
        entry.reset(renamed_services_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> renamed_resources = 3;
  if (!this->renamed_resources().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.DotnetSettings.RenamedResourcesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.DotnetSettings.RenamedResourcesEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->renamed_resources().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->renamed_resources().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->renamed_resources().begin();
          it != this->renamed_resources().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<DotnetSettings_RenamedResourcesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(renamed_resources_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<DotnetSettings_RenamedResourcesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->renamed_resources().begin();
          it != this->renamed_resources().end(); ++it) {
        entry.reset(renamed_resources_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated string ignored_resources = 4;
  for (int i = 0; i < this->ignored_resources_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ignored_resources(i).data(), this->ignored_resources(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.DotnetSettings.ignored_resources");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->ignored_resources(i), output);
  }

  // repeated string forced_namespace_aliases = 5;
  for (int i = 0; i < this->forced_namespace_aliases_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->forced_namespace_aliases(i).data(), this->forced_namespace_aliases(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.DotnetSettings.forced_namespace_aliases");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->forced_namespace_aliases(i), output);
  }

  // repeated string handwritten_signatures = 6;
  for (int i = 0; i < this->handwritten_signatures_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handwritten_signatures(i).data(), this->handwritten_signatures(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.DotnetSettings.handwritten_signatures");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->handwritten_signatures(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.DotnetSettings)
}

::google::protobuf::uint8* DotnetSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.DotnetSettings)
  // optional .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->common_, false, target);
  }

  // map<string, string> renamed_services = 2;
  if (!this->renamed_services().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.DotnetSettings.RenamedServicesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.DotnetSettings.RenamedServicesEntry.value");
      }
    };

    if (deterministic &&
        this->renamed_services().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->renamed_services().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->renamed_services().begin();
          it != this->renamed_services().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<DotnetSettings_RenamedServicesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(renamed_services_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<DotnetSettings_RenamedServicesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->renamed_services().begin();
          it != this->renamed_services().end(); ++it) {
        entry.reset(renamed_services_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> renamed_resources = 3;
  if (!this->renamed_resources().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.DotnetSettings.RenamedResourcesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.DotnetSettings.RenamedResourcesEntry.value");
      }
    };

    if (deterministic &&
        this->renamed_resources().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->renamed_resources().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->renamed_resources().begin();
          it != this->renamed_resources().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<DotnetSettings_RenamedResourcesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(renamed_resources_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<DotnetSettings_RenamedResourcesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->renamed_resources().begin();
          it != this->renamed_resources().end(); ++it) {
        entry.reset(renamed_resources_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated string ignored_resources = 4;
  for (int i = 0; i < this->ignored_resources_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ignored_resources(i).data(), this->ignored_resources(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.DotnetSettings.ignored_resources");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->ignored_resources(i), target);
  }

  // repeated string forced_namespace_aliases = 5;
  for (int i = 0; i < this->forced_namespace_aliases_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->forced_namespace_aliases(i).data(), this->forced_namespace_aliases(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.DotnetSettings.forced_namespace_aliases");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->forced_namespace_aliases(i), target);
  }

  // repeated string handwritten_signatures = 6;
  for (int i = 0; i < this->handwritten_signatures_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handwritten_signatures(i).data(), this->handwritten_signatures(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.DotnetSettings.handwritten_signatures");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->handwritten_signatures(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.DotnetSettings)
  return target;
}

size_t DotnetSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.DotnetSettings)
  size_t total_size = 0;

  // optional .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->common_);
  }

  // map<string, string> renamed_services = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->renamed_services_size());
  {
    ::google::protobuf::scoped_ptr<DotnetSettings_RenamedServicesEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->renamed_services().begin();
        it != this->renamed_services().end(); ++it) {
      entry.reset(renamed_services_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, string> renamed_resources = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->renamed_resources_size());
  {
    ::google::protobuf::scoped_ptr<DotnetSettings_RenamedResourcesEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->renamed_resources().begin();
        it != this->renamed_resources().end(); ++it) {
      entry.reset(renamed_resources_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated string ignored_resources = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ignored_resources_size());
  for (int i = 0; i < this->ignored_resources_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->ignored_resources(i));
  }

  // repeated string forced_namespace_aliases = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->forced_namespace_aliases_size());
  for (int i = 0; i < this->forced_namespace_aliases_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->forced_namespace_aliases(i));
  }

  // repeated string handwritten_signatures = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->handwritten_signatures_size());
  for (int i = 0; i < this->handwritten_signatures_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->handwritten_signatures(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DotnetSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.DotnetSettings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DotnetSettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DotnetSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.DotnetSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.DotnetSettings)
    UnsafeMergeFrom(*source);
  }
}

void DotnetSettings::MergeFrom(const DotnetSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.DotnetSettings)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DotnetSettings::UnsafeMergeFrom(const DotnetSettings& from) {
  GOOGLE_DCHECK(&from != this);
  renamed_services_.MergeFrom(from.renamed_services_);
  renamed_resources_.MergeFrom(from.renamed_resources_);
  ignored_resources_.UnsafeMergeFrom(from.ignored_resources_);
  forced_namespace_aliases_.UnsafeMergeFrom(from.forced_namespace_aliases_);
  handwritten_signatures_.UnsafeMergeFrom(from.handwritten_signatures_);
  if (from.has_common()) {
    mutable_common()->::google::api::CommonLanguageSettings::MergeFrom(from.common());
  }
}

void DotnetSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.DotnetSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DotnetSettings::CopyFrom(const DotnetSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.DotnetSettings)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DotnetSettings::IsInitialized() const {

  return true;
}

void DotnetSettings::Swap(DotnetSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DotnetSettings::InternalSwap(DotnetSettings* other) {
  std::swap(common_, other->common_);
  renamed_services_.Swap(&other->renamed_services_);
  renamed_resources_.Swap(&other->renamed_resources_);
  ignored_resources_.UnsafeArenaSwap(&other->ignored_resources_);
  forced_namespace_aliases_.UnsafeArenaSwap(&other->forced_namespace_aliases_);
  handwritten_signatures_.UnsafeArenaSwap(&other->handwritten_signatures_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DotnetSettings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DotnetSettings_descriptor_;
  metadata.reflection = DotnetSettings_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DotnetSettings

// optional .google.api.CommonLanguageSettings common = 1;
bool DotnetSettings::has_common() const {
  return this != internal_default_instance() && common_ != NULL;
}
void DotnetSettings::clear_common() {
  if (GetArenaNoVirtual() == NULL && common_ != NULL) delete common_;
  common_ = NULL;
}
const ::google::api::CommonLanguageSettings& DotnetSettings::common() const {
  // @@protoc_insertion_point(field_get:google.api.DotnetSettings.common)
  return common_ != NULL ? *common_
                         : *::google::api::CommonLanguageSettings::internal_default_instance();
}
::google::api::CommonLanguageSettings* DotnetSettings::mutable_common() {
  
  if (common_ == NULL) {
    common_ = new ::google::api::CommonLanguageSettings;
  }
  // @@protoc_insertion_point(field_mutable:google.api.DotnetSettings.common)
  return common_;
}
::google::api::CommonLanguageSettings* DotnetSettings::release_common() {
  // @@protoc_insertion_point(field_release:google.api.DotnetSettings.common)
  
  ::google::api::CommonLanguageSettings* temp = common_;
  common_ = NULL;
  return temp;
}
void DotnetSettings::set_allocated_common(::google::api::CommonLanguageSettings* common) {
  delete common_;
  common_ = common;
  if (common) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.DotnetSettings.common)
}

// map<string, string> renamed_services = 2;
int DotnetSettings::renamed_services_size() const {
  return renamed_services_.size();
}
void DotnetSettings::clear_renamed_services() {
  renamed_services_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
DotnetSettings::renamed_services() const {
  // @@protoc_insertion_point(field_map:google.api.DotnetSettings.renamed_services)
  return renamed_services_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
DotnetSettings::mutable_renamed_services() {
  // @@protoc_insertion_point(field_mutable_map:google.api.DotnetSettings.renamed_services)
  return renamed_services_.MutableMap();
}

// map<string, string> renamed_resources = 3;
int DotnetSettings::renamed_resources_size() const {
  return renamed_resources_.size();
}
void DotnetSettings::clear_renamed_resources() {
  renamed_resources_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
DotnetSettings::renamed_resources() const {
  // @@protoc_insertion_point(field_map:google.api.DotnetSettings.renamed_resources)
  return renamed_resources_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
DotnetSettings::mutable_renamed_resources() {
  // @@protoc_insertion_point(field_mutable_map:google.api.DotnetSettings.renamed_resources)
  return renamed_resources_.MutableMap();
}

// repeated string ignored_resources = 4;
int DotnetSettings::ignored_resources_size() const {
  return ignored_resources_.size();
}
void DotnetSettings::clear_ignored_resources() {
  ignored_resources_.Clear();
}
const ::std::string& DotnetSettings::ignored_resources(int index) const {
  // @@protoc_insertion_point(field_get:google.api.DotnetSettings.ignored_resources)
  return ignored_resources_.Get(index);
}
::std::string* DotnetSettings::mutable_ignored_resources(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.DotnetSettings.ignored_resources)
  return ignored_resources_.Mutable(index);
}
void DotnetSettings::set_ignored_resources(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.api.DotnetSettings.ignored_resources)
  ignored_resources_.Mutable(index)->assign(value);
}
void DotnetSettings::set_ignored_resources(int index, const char* value) {
  ignored_resources_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.api.DotnetSettings.ignored_resources)
}
void DotnetSettings::set_ignored_resources(int index, const char* value, size_t size) {
  ignored_resources_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.api.DotnetSettings.ignored_resources)
}
::std::string* DotnetSettings::add_ignored_resources() {
  // @@protoc_insertion_point(field_add_mutable:google.api.DotnetSettings.ignored_resources)
  return ignored_resources_.Add();
}
void DotnetSettings::add_ignored_resources(const ::std::string& value) {
  ignored_resources_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.api.DotnetSettings.ignored_resources)
}
void DotnetSettings::add_ignored_resources(const char* value) {
  ignored_resources_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.api.DotnetSettings.ignored_resources)
}
void DotnetSettings::add_ignored_resources(const char* value, size_t size) {
  ignored_resources_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.api.DotnetSettings.ignored_resources)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
DotnetSettings::ignored_resources() const {
  // @@protoc_insertion_point(field_list:google.api.DotnetSettings.ignored_resources)
  return ignored_resources_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
DotnetSettings::mutable_ignored_resources() {
  // @@protoc_insertion_point(field_mutable_list:google.api.DotnetSettings.ignored_resources)
  return &ignored_resources_;
}

// repeated string forced_namespace_aliases = 5;
int DotnetSettings::forced_namespace_aliases_size() const {
  return forced_namespace_aliases_.size();
}
void DotnetSettings::clear_forced_namespace_aliases() {
  forced_namespace_aliases_.Clear();
}
const ::std::string& DotnetSettings::forced_namespace_aliases(int index) const {
  // @@protoc_insertion_point(field_get:google.api.DotnetSettings.forced_namespace_aliases)
  return forced_namespace_aliases_.Get(index);
}
::std::string* DotnetSettings::mutable_forced_namespace_aliases(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.DotnetSettings.forced_namespace_aliases)
  return forced_namespace_aliases_.Mutable(index);
}
void DotnetSettings::set_forced_namespace_aliases(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.api.DotnetSettings.forced_namespace_aliases)
  forced_namespace_aliases_.Mutable(index)->assign(value);
}
void DotnetSettings::set_forced_namespace_aliases(int index, const char* value) {
  forced_namespace_aliases_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.api.DotnetSettings.forced_namespace_aliases)
}
void DotnetSettings::set_forced_namespace_aliases(int index, const char* value, size_t size) {
  forced_namespace_aliases_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.api.DotnetSettings.forced_namespace_aliases)
}
::std::string* DotnetSettings::add_forced_namespace_aliases() {
  // @@protoc_insertion_point(field_add_mutable:google.api.DotnetSettings.forced_namespace_aliases)
  return forced_namespace_aliases_.Add();
}
void DotnetSettings::add_forced_namespace_aliases(const ::std::string& value) {
  forced_namespace_aliases_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.api.DotnetSettings.forced_namespace_aliases)
}
void DotnetSettings::add_forced_namespace_aliases(const char* value) {
  forced_namespace_aliases_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.api.DotnetSettings.forced_namespace_aliases)
}
void DotnetSettings::add_forced_namespace_aliases(const char* value, size_t size) {
  forced_namespace_aliases_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.api.DotnetSettings.forced_namespace_aliases)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
DotnetSettings::forced_namespace_aliases() const {
  // @@protoc_insertion_point(field_list:google.api.DotnetSettings.forced_namespace_aliases)
  return forced_namespace_aliases_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
DotnetSettings::mutable_forced_namespace_aliases() {
  // @@protoc_insertion_point(field_mutable_list:google.api.DotnetSettings.forced_namespace_aliases)
  return &forced_namespace_aliases_;
}

// repeated string handwritten_signatures = 6;
int DotnetSettings::handwritten_signatures_size() const {
  return handwritten_signatures_.size();
}
void DotnetSettings::clear_handwritten_signatures() {
  handwritten_signatures_.Clear();
}
const ::std::string& DotnetSettings::handwritten_signatures(int index) const {
  // @@protoc_insertion_point(field_get:google.api.DotnetSettings.handwritten_signatures)
  return handwritten_signatures_.Get(index);
}
::std::string* DotnetSettings::mutable_handwritten_signatures(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.DotnetSettings.handwritten_signatures)
  return handwritten_signatures_.Mutable(index);
}
void DotnetSettings::set_handwritten_signatures(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.api.DotnetSettings.handwritten_signatures)
  handwritten_signatures_.Mutable(index)->assign(value);
}
void DotnetSettings::set_handwritten_signatures(int index, const char* value) {
  handwritten_signatures_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.api.DotnetSettings.handwritten_signatures)
}
void DotnetSettings::set_handwritten_signatures(int index, const char* value, size_t size) {
  handwritten_signatures_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.api.DotnetSettings.handwritten_signatures)
}
::std::string* DotnetSettings::add_handwritten_signatures() {
  // @@protoc_insertion_point(field_add_mutable:google.api.DotnetSettings.handwritten_signatures)
  return handwritten_signatures_.Add();
}
void DotnetSettings::add_handwritten_signatures(const ::std::string& value) {
  handwritten_signatures_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.api.DotnetSettings.handwritten_signatures)
}
void DotnetSettings::add_handwritten_signatures(const char* value) {
  handwritten_signatures_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.api.DotnetSettings.handwritten_signatures)
}
void DotnetSettings::add_handwritten_signatures(const char* value, size_t size) {
  handwritten_signatures_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.api.DotnetSettings.handwritten_signatures)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
DotnetSettings::handwritten_signatures() const {
  // @@protoc_insertion_point(field_list:google.api.DotnetSettings.handwritten_signatures)
  return handwritten_signatures_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
DotnetSettings::mutable_handwritten_signatures() {
  // @@protoc_insertion_point(field_mutable_list:google.api.DotnetSettings.handwritten_signatures)
  return &handwritten_signatures_;
}

inline const DotnetSettings* DotnetSettings::internal_default_instance() {
  return &DotnetSettings_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RubySettings::kCommonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RubySettings::RubySettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.RubySettings)
}

void RubySettings::InitAsDefaultInstance() {
  common_ = const_cast< ::google::api::CommonLanguageSettings*>(
      ::google::api::CommonLanguageSettings::internal_default_instance());
}

RubySettings::RubySettings(const RubySettings& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.RubySettings)
}

void RubySettings::SharedCtor() {
  common_ = NULL;
  _cached_size_ = 0;
}

RubySettings::~RubySettings() {
  // @@protoc_insertion_point(destructor:google.api.RubySettings)
  SharedDtor();
}

void RubySettings::SharedDtor() {
  if (this != &RubySettings_default_instance_.get()) {
    delete common_;
  }
}

void RubySettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RubySettings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RubySettings_descriptor_;
}

const RubySettings& RubySettings::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RubySettings> RubySettings_default_instance_;

RubySettings* RubySettings::New(::google::protobuf::Arena* arena) const {
  RubySettings* n = new RubySettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RubySettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.RubySettings)
  if (GetArenaNoVirtual() == NULL && common_ != NULL) delete common_;
  common_ = NULL;
}

bool RubySettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.RubySettings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.api.CommonLanguageSettings common = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.RubySettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.RubySettings)
  return false;
#undef DO_
}

void RubySettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.RubySettings)
  // optional .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->common_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.RubySettings)
}

::google::protobuf::uint8* RubySettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.RubySettings)
  // optional .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->common_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.RubySettings)
  return target;
}

size_t RubySettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.RubySettings)
  size_t total_size = 0;

  // optional .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->common_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RubySettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.RubySettings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RubySettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RubySettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.RubySettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.RubySettings)
    UnsafeMergeFrom(*source);
  }
}

void RubySettings::MergeFrom(const RubySettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.RubySettings)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RubySettings::UnsafeMergeFrom(const RubySettings& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_common()) {
    mutable_common()->::google::api::CommonLanguageSettings::MergeFrom(from.common());
  }
}

void RubySettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.RubySettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RubySettings::CopyFrom(const RubySettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.RubySettings)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RubySettings::IsInitialized() const {

  return true;
}

void RubySettings::Swap(RubySettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RubySettings::InternalSwap(RubySettings* other) {
  std::swap(common_, other->common_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RubySettings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RubySettings_descriptor_;
  metadata.reflection = RubySettings_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RubySettings

// optional .google.api.CommonLanguageSettings common = 1;
bool RubySettings::has_common() const {
  return this != internal_default_instance() && common_ != NULL;
}
void RubySettings::clear_common() {
  if (GetArenaNoVirtual() == NULL && common_ != NULL) delete common_;
  common_ = NULL;
}
const ::google::api::CommonLanguageSettings& RubySettings::common() const {
  // @@protoc_insertion_point(field_get:google.api.RubySettings.common)
  return common_ != NULL ? *common_
                         : *::google::api::CommonLanguageSettings::internal_default_instance();
}
::google::api::CommonLanguageSettings* RubySettings::mutable_common() {
  
  if (common_ == NULL) {
    common_ = new ::google::api::CommonLanguageSettings;
  }
  // @@protoc_insertion_point(field_mutable:google.api.RubySettings.common)
  return common_;
}
::google::api::CommonLanguageSettings* RubySettings::release_common() {
  // @@protoc_insertion_point(field_release:google.api.RubySettings.common)
  
  ::google::api::CommonLanguageSettings* temp = common_;
  common_ = NULL;
  return temp;
}
void RubySettings::set_allocated_common(::google::api::CommonLanguageSettings* common) {
  delete common_;
  common_ = common;
  if (common) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.RubySettings.common)
}

inline const RubySettings* RubySettings::internal_default_instance() {
  return &RubySettings_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GoSettings::kCommonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GoSettings::GoSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.GoSettings)
}

void GoSettings::InitAsDefaultInstance() {
  common_ = const_cast< ::google::api::CommonLanguageSettings*>(
      ::google::api::CommonLanguageSettings::internal_default_instance());
}

GoSettings::GoSettings(const GoSettings& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.GoSettings)
}

void GoSettings::SharedCtor() {
  common_ = NULL;
  _cached_size_ = 0;
}

GoSettings::~GoSettings() {
  // @@protoc_insertion_point(destructor:google.api.GoSettings)
  SharedDtor();
}

void GoSettings::SharedDtor() {
  if (this != &GoSettings_default_instance_.get()) {
    delete common_;
  }
}

void GoSettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GoSettings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GoSettings_descriptor_;
}

const GoSettings& GoSettings::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GoSettings> GoSettings_default_instance_;

GoSettings* GoSettings::New(::google::protobuf::Arena* arena) const {
  GoSettings* n = new GoSettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GoSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.GoSettings)
  if (GetArenaNoVirtual() == NULL && common_ != NULL) delete common_;
  common_ = NULL;
}

bool GoSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.GoSettings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.api.CommonLanguageSettings common = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.GoSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.GoSettings)
  return false;
#undef DO_
}

void GoSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.GoSettings)
  // optional .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->common_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.GoSettings)
}

::google::protobuf::uint8* GoSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.GoSettings)
  // optional .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->common_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.GoSettings)
  return target;
}

size_t GoSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.GoSettings)
  size_t total_size = 0;

  // optional .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->common_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GoSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.GoSettings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GoSettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GoSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.GoSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.GoSettings)
    UnsafeMergeFrom(*source);
  }
}

void GoSettings::MergeFrom(const GoSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.GoSettings)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GoSettings::UnsafeMergeFrom(const GoSettings& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_common()) {
    mutable_common()->::google::api::CommonLanguageSettings::MergeFrom(from.common());
  }
}

void GoSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.GoSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoSettings::CopyFrom(const GoSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.GoSettings)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GoSettings::IsInitialized() const {

  return true;
}

void GoSettings::Swap(GoSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GoSettings::InternalSwap(GoSettings* other) {
  std::swap(common_, other->common_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GoSettings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GoSettings_descriptor_;
  metadata.reflection = GoSettings_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GoSettings

// optional .google.api.CommonLanguageSettings common = 1;
bool GoSettings::has_common() const {
  return this != internal_default_instance() && common_ != NULL;
}
void GoSettings::clear_common() {
  if (GetArenaNoVirtual() == NULL && common_ != NULL) delete common_;
  common_ = NULL;
}
const ::google::api::CommonLanguageSettings& GoSettings::common() const {
  // @@protoc_insertion_point(field_get:google.api.GoSettings.common)
  return common_ != NULL ? *common_
                         : *::google::api::CommonLanguageSettings::internal_default_instance();
}
::google::api::CommonLanguageSettings* GoSettings::mutable_common() {
  
  if (common_ == NULL) {
    common_ = new ::google::api::CommonLanguageSettings;
  }
  // @@protoc_insertion_point(field_mutable:google.api.GoSettings.common)
  return common_;
}
::google::api::CommonLanguageSettings* GoSettings::release_common() {
  // @@protoc_insertion_point(field_release:google.api.GoSettings.common)
  
  ::google::api::CommonLanguageSettings* temp = common_;
  common_ = NULL;
  return temp;
}
void GoSettings::set_allocated_common(::google::api::CommonLanguageSettings* common) {
  delete common_;
  common_ = common;
  if (common) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.GoSettings.common)
}

inline const GoSettings* GoSettings::internal_default_instance() {
  return &GoSettings_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MethodSettings_LongRunning::kInitialPollDelayFieldNumber;
const int MethodSettings_LongRunning::kPollDelayMultiplierFieldNumber;
const int MethodSettings_LongRunning::kMaxPollDelayFieldNumber;
const int MethodSettings_LongRunning::kTotalPollTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MethodSettings_LongRunning::MethodSettings_LongRunning()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.MethodSettings.LongRunning)
}

void MethodSettings_LongRunning::InitAsDefaultInstance() {
  initial_poll_delay_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  max_poll_delay_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  total_poll_timeout_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}

MethodSettings_LongRunning::MethodSettings_LongRunning(const MethodSettings_LongRunning& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.MethodSettings.LongRunning)
}

void MethodSettings_LongRunning::SharedCtor() {
  initial_poll_delay_ = NULL;
  max_poll_delay_ = NULL;
  total_poll_timeout_ = NULL;
  poll_delay_multiplier_ = 0;
  _cached_size_ = 0;
}

MethodSettings_LongRunning::~MethodSettings_LongRunning() {
  // @@protoc_insertion_point(destructor:google.api.MethodSettings.LongRunning)
  SharedDtor();
}

void MethodSettings_LongRunning::SharedDtor() {
  if (this != &MethodSettings_LongRunning_default_instance_.get()) {
    delete initial_poll_delay_;
    delete max_poll_delay_;
    delete total_poll_timeout_;
  }
}

void MethodSettings_LongRunning::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MethodSettings_LongRunning::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MethodSettings_LongRunning_descriptor_;
}

const MethodSettings_LongRunning& MethodSettings_LongRunning::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MethodSettings_LongRunning> MethodSettings_LongRunning_default_instance_;

MethodSettings_LongRunning* MethodSettings_LongRunning::New(::google::protobuf::Arena* arena) const {
  MethodSettings_LongRunning* n = new MethodSettings_LongRunning;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MethodSettings_LongRunning::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.MethodSettings.LongRunning)
  if (GetArenaNoVirtual() == NULL && initial_poll_delay_ != NULL) delete initial_poll_delay_;
  initial_poll_delay_ = NULL;
  poll_delay_multiplier_ = 0;
  if (GetArenaNoVirtual() == NULL && max_poll_delay_ != NULL) delete max_poll_delay_;
  max_poll_delay_ = NULL;
  if (GetArenaNoVirtual() == NULL && total_poll_timeout_ != NULL) delete total_poll_timeout_;
  total_poll_timeout_ = NULL;
}

bool MethodSettings_LongRunning::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.MethodSettings.LongRunning)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.Duration initial_poll_delay = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_initial_poll_delay()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_poll_delay_multiplier;
        break;
      }

      // optional float poll_delay_multiplier = 2;
      case 2: {
        if (tag == 21) {
         parse_poll_delay_multiplier:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &poll_delay_multiplier_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_max_poll_delay;
        break;
      }

      // optional .google.protobuf.Duration max_poll_delay = 3;
      case 3: {
        if (tag == 26) {
         parse_max_poll_delay:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_max_poll_delay()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_total_poll_timeout;
        break;
      }

      // optional .google.protobuf.Duration total_poll_timeout = 4;
      case 4: {
        if (tag == 34) {
         parse_total_poll_timeout:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_total_poll_timeout()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.MethodSettings.LongRunning)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.MethodSettings.LongRunning)
  return false;
#undef DO_
}

void MethodSettings_LongRunning::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.MethodSettings.LongRunning)
  // optional .google.protobuf.Duration initial_poll_delay = 1;
  if (this->has_initial_poll_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->initial_poll_delay_, output);
  }

  // optional float poll_delay_multiplier = 2;
  if (this->poll_delay_multiplier() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->poll_delay_multiplier(), output);
  }

  // optional .google.protobuf.Duration max_poll_delay = 3;
  if (this->has_max_poll_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->max_poll_delay_, output);
  }

  // optional .google.protobuf.Duration total_poll_timeout = 4;
  if (this->has_total_poll_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->total_poll_timeout_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.MethodSettings.LongRunning)
}

::google::protobuf::uint8* MethodSettings_LongRunning::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.MethodSettings.LongRunning)
  // optional .google.protobuf.Duration initial_poll_delay = 1;
  if (this->has_initial_poll_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->initial_poll_delay_, false, target);
  }

  // optional float poll_delay_multiplier = 2;
  if (this->poll_delay_multiplier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->poll_delay_multiplier(), target);
  }

  // optional .google.protobuf.Duration max_poll_delay = 3;
  if (this->has_max_poll_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->max_poll_delay_, false, target);
  }

  // optional .google.protobuf.Duration total_poll_timeout = 4;
  if (this->has_total_poll_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->total_poll_timeout_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.MethodSettings.LongRunning)
  return target;
}

size_t MethodSettings_LongRunning::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.MethodSettings.LongRunning)
  size_t total_size = 0;

  // optional .google.protobuf.Duration initial_poll_delay = 1;
  if (this->has_initial_poll_delay()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->initial_poll_delay_);
  }

  // optional float poll_delay_multiplier = 2;
  if (this->poll_delay_multiplier() != 0) {
    total_size += 1 + 4;
  }

  // optional .google.protobuf.Duration max_poll_delay = 3;
  if (this->has_max_poll_delay()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->max_poll_delay_);
  }

  // optional .google.protobuf.Duration total_poll_timeout = 4;
  if (this->has_total_poll_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->total_poll_timeout_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MethodSettings_LongRunning::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.MethodSettings.LongRunning)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MethodSettings_LongRunning* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MethodSettings_LongRunning>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.MethodSettings.LongRunning)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.MethodSettings.LongRunning)
    UnsafeMergeFrom(*source);
  }
}

void MethodSettings_LongRunning::MergeFrom(const MethodSettings_LongRunning& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.MethodSettings.LongRunning)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MethodSettings_LongRunning::UnsafeMergeFrom(const MethodSettings_LongRunning& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_initial_poll_delay()) {
    mutable_initial_poll_delay()->::google::protobuf::Duration::MergeFrom(from.initial_poll_delay());
  }
  if (from.poll_delay_multiplier() != 0) {
    set_poll_delay_multiplier(from.poll_delay_multiplier());
  }
  if (from.has_max_poll_delay()) {
    mutable_max_poll_delay()->::google::protobuf::Duration::MergeFrom(from.max_poll_delay());
  }
  if (from.has_total_poll_timeout()) {
    mutable_total_poll_timeout()->::google::protobuf::Duration::MergeFrom(from.total_poll_timeout());
  }
}

void MethodSettings_LongRunning::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.MethodSettings.LongRunning)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MethodSettings_LongRunning::CopyFrom(const MethodSettings_LongRunning& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.MethodSettings.LongRunning)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MethodSettings_LongRunning::IsInitialized() const {

  return true;
}

void MethodSettings_LongRunning::Swap(MethodSettings_LongRunning* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MethodSettings_LongRunning::InternalSwap(MethodSettings_LongRunning* other) {
  std::swap(initial_poll_delay_, other->initial_poll_delay_);
  std::swap(poll_delay_multiplier_, other->poll_delay_multiplier_);
  std::swap(max_poll_delay_, other->max_poll_delay_);
  std::swap(total_poll_timeout_, other->total_poll_timeout_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MethodSettings_LongRunning::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MethodSettings_LongRunning_descriptor_;
  metadata.reflection = MethodSettings_LongRunning_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MethodSettings::kSelectorFieldNumber;
const int MethodSettings::kLongRunningFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MethodSettings::MethodSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.MethodSettings)
}

void MethodSettings::InitAsDefaultInstance() {
  long_running_ = const_cast< ::google::api::MethodSettings_LongRunning*>(
      ::google::api::MethodSettings_LongRunning::internal_default_instance());
}

MethodSettings::MethodSettings(const MethodSettings& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.MethodSettings)
}

void MethodSettings::SharedCtor() {
  selector_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  long_running_ = NULL;
  _cached_size_ = 0;
}

MethodSettings::~MethodSettings() {
  // @@protoc_insertion_point(destructor:google.api.MethodSettings)
  SharedDtor();
}

void MethodSettings::SharedDtor() {
  selector_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &MethodSettings_default_instance_.get()) {
    delete long_running_;
  }
}

void MethodSettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MethodSettings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MethodSettings_descriptor_;
}

const MethodSettings& MethodSettings::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fclient_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MethodSettings> MethodSettings_default_instance_;

MethodSettings* MethodSettings::New(::google::protobuf::Arena* arena) const {
  MethodSettings* n = new MethodSettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MethodSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.MethodSettings)
  selector_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && long_running_ != NULL) delete long_running_;
  long_running_ = NULL;
}

bool MethodSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.MethodSettings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string selector = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_selector()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->selector().data(), this->selector().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.MethodSettings.selector"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_long_running;
        break;
      }

      // optional .google.api.MethodSettings.LongRunning long_running = 2;
      case 2: {
        if (tag == 18) {
         parse_long_running:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_long_running()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.MethodSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.MethodSettings)
  return false;
#undef DO_
}

void MethodSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.MethodSettings)
  // optional string selector = 1;
  if (this->selector().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selector().data(), this->selector().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MethodSettings.selector");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->selector(), output);
  }

  // optional .google.api.MethodSettings.LongRunning long_running = 2;
  if (this->has_long_running()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->long_running_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.MethodSettings)
}

::google::protobuf::uint8* MethodSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.MethodSettings)
  // optional string selector = 1;
  if (this->selector().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selector().data(), this->selector().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MethodSettings.selector");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->selector(), target);
  }

  // optional .google.api.MethodSettings.LongRunning long_running = 2;
  if (this->has_long_running()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->long_running_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.MethodSettings)
  return target;
}

size_t MethodSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.MethodSettings)
  size_t total_size = 0;

  // optional string selector = 1;
  if (this->selector().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->selector());
  }

  // optional .google.api.MethodSettings.LongRunning long_running = 2;
  if (this->has_long_running()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->long_running_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MethodSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.MethodSettings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MethodSettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MethodSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.MethodSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.MethodSettings)
    UnsafeMergeFrom(*source);
  }
}

void MethodSettings::MergeFrom(const MethodSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.MethodSettings)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MethodSettings::UnsafeMergeFrom(const MethodSettings& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.selector().size() > 0) {

    selector_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.selector_);
  }
  if (from.has_long_running()) {
    mutable_long_running()->::google::api::MethodSettings_LongRunning::MergeFrom(from.long_running());
  }
}

void MethodSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.MethodSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MethodSettings::CopyFrom(const MethodSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.MethodSettings)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MethodSettings::IsInitialized() const {

  return true;
}

void MethodSettings::Swap(MethodSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MethodSettings::InternalSwap(MethodSettings* other) {
  selector_.Swap(&other->selector_);
  std::swap(long_running_, other->long_running_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MethodSettings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MethodSettings_descriptor_;
  metadata.reflection = MethodSettings_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MethodSettings_LongRunning

// optional .google.protobuf.Duration initial_poll_delay = 1;
bool MethodSettings_LongRunning::has_initial_poll_delay() const {
  return this != internal_default_instance() && initial_poll_delay_ != NULL;
}
void MethodSettings_LongRunning::clear_initial_poll_delay() {
  if (GetArenaNoVirtual() == NULL && initial_poll_delay_ != NULL) delete initial_poll_delay_;
  initial_poll_delay_ = NULL;
}
const ::google::protobuf::Duration& MethodSettings_LongRunning::initial_poll_delay() const {
  // @@protoc_insertion_point(field_get:google.api.MethodSettings.LongRunning.initial_poll_delay)
  return initial_poll_delay_ != NULL ? *initial_poll_delay_
                         : *::google::protobuf::Duration::internal_default_instance();
}
::google::protobuf::Duration* MethodSettings_LongRunning::mutable_initial_poll_delay() {
  
  if (initial_poll_delay_ == NULL) {
    initial_poll_delay_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.api.MethodSettings.LongRunning.initial_poll_delay)
  return initial_poll_delay_;
}
::google::protobuf::Duration* MethodSettings_LongRunning::release_initial_poll_delay() {
  // @@protoc_insertion_point(field_release:google.api.MethodSettings.LongRunning.initial_poll_delay)
  
  ::google::protobuf::Duration* temp = initial_poll_delay_;
  initial_poll_delay_ = NULL;
  return temp;
}
void MethodSettings_LongRunning::set_allocated_initial_poll_delay(::google::protobuf::Duration* initial_poll_delay) {
  delete initial_poll_delay_;
  if (initial_poll_delay != NULL && initial_poll_delay->GetArena() != NULL) {
    ::google::protobuf::Duration* new_initial_poll_delay = new ::google::protobuf::Duration;
    new_initial_poll_delay->CopyFrom(*initial_poll_delay);
    initial_poll_delay = new_initial_poll_delay;
  }
  initial_poll_delay_ = initial_poll_delay;
  if (initial_poll_delay) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.MethodSettings.LongRunning.initial_poll_delay)
}

// optional float poll_delay_multiplier = 2;
void MethodSettings_LongRunning::clear_poll_delay_multiplier() {
  poll_delay_multiplier_ = 0;
}
float MethodSettings_LongRunning::poll_delay_multiplier() const {
  // @@protoc_insertion_point(field_get:google.api.MethodSettings.LongRunning.poll_delay_multiplier)
  return poll_delay_multiplier_;
}
void MethodSettings_LongRunning::set_poll_delay_multiplier(float value) {
  
  poll_delay_multiplier_ = value;
  // @@protoc_insertion_point(field_set:google.api.MethodSettings.LongRunning.poll_delay_multiplier)
}

// optional .google.protobuf.Duration max_poll_delay = 3;
bool MethodSettings_LongRunning::has_max_poll_delay() const {
  return this != internal_default_instance() && max_poll_delay_ != NULL;
}
void MethodSettings_LongRunning::clear_max_poll_delay() {
  if (GetArenaNoVirtual() == NULL && max_poll_delay_ != NULL) delete max_poll_delay_;
  max_poll_delay_ = NULL;
}
const ::google::protobuf::Duration& MethodSettings_LongRunning::max_poll_delay() const {
  // @@protoc_insertion_point(field_get:google.api.MethodSettings.LongRunning.max_poll_delay)
  return max_poll_delay_ != NULL ? *max_poll_delay_
                         : *::google::protobuf::Duration::internal_default_instance();
}
::google::protobuf::Duration* MethodSettings_LongRunning::mutable_max_poll_delay() {
  
  if (max_poll_delay_ == NULL) {
    max_poll_delay_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.api.MethodSettings.LongRunning.max_poll_delay)
  return max_poll_delay_;
}
::google::protobuf::Duration* MethodSettings_LongRunning::release_max_poll_delay() {
  // @@protoc_insertion_point(field_release:google.api.MethodSettings.LongRunning.max_poll_delay)
  
  ::google::protobuf::Duration* temp = max_poll_delay_;
  max_poll_delay_ = NULL;
  return temp;
}
void MethodSettings_LongRunning::set_allocated_max_poll_delay(::google::protobuf::Duration* max_poll_delay) {
  delete max_poll_delay_;
  if (max_poll_delay != NULL && max_poll_delay->GetArena() != NULL) {
    ::google::protobuf::Duration* new_max_poll_delay = new ::google::protobuf::Duration;
    new_max_poll_delay->CopyFrom(*max_poll_delay);
    max_poll_delay = new_max_poll_delay;
  }
  max_poll_delay_ = max_poll_delay;
  if (max_poll_delay) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.MethodSettings.LongRunning.max_poll_delay)
}

// optional .google.protobuf.Duration total_poll_timeout = 4;
bool MethodSettings_LongRunning::has_total_poll_timeout() const {
  return this != internal_default_instance() && total_poll_timeout_ != NULL;
}
void MethodSettings_LongRunning::clear_total_poll_timeout() {
  if (GetArenaNoVirtual() == NULL && total_poll_timeout_ != NULL) delete total_poll_timeout_;
  total_poll_timeout_ = NULL;
}
const ::google::protobuf::Duration& MethodSettings_LongRunning::total_poll_timeout() const {
  // @@protoc_insertion_point(field_get:google.api.MethodSettings.LongRunning.total_poll_timeout)
  return total_poll_timeout_ != NULL ? *total_poll_timeout_
                         : *::google::protobuf::Duration::internal_default_instance();
}
::google::protobuf::Duration* MethodSettings_LongRunning::mutable_total_poll_timeout() {
  
  if (total_poll_timeout_ == NULL) {
    total_poll_timeout_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.api.MethodSettings.LongRunning.total_poll_timeout)
  return total_poll_timeout_;
}
::google::protobuf::Duration* MethodSettings_LongRunning::release_total_poll_timeout() {
  // @@protoc_insertion_point(field_release:google.api.MethodSettings.LongRunning.total_poll_timeout)
  
  ::google::protobuf::Duration* temp = total_poll_timeout_;
  total_poll_timeout_ = NULL;
  return temp;
}
void MethodSettings_LongRunning::set_allocated_total_poll_timeout(::google::protobuf::Duration* total_poll_timeout) {
  delete total_poll_timeout_;
  if (total_poll_timeout != NULL && total_poll_timeout->GetArena() != NULL) {
    ::google::protobuf::Duration* new_total_poll_timeout = new ::google::protobuf::Duration;
    new_total_poll_timeout->CopyFrom(*total_poll_timeout);
    total_poll_timeout = new_total_poll_timeout;
  }
  total_poll_timeout_ = total_poll_timeout;
  if (total_poll_timeout) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.MethodSettings.LongRunning.total_poll_timeout)
}

inline const MethodSettings_LongRunning* MethodSettings_LongRunning::internal_default_instance() {
  return &MethodSettings_LongRunning_default_instance_.get();
}
// -------------------------------------------------------------------

// MethodSettings

// optional string selector = 1;
void MethodSettings::clear_selector() {
  selector_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MethodSettings::selector() const {
  // @@protoc_insertion_point(field_get:google.api.MethodSettings.selector)
  return selector_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MethodSettings::set_selector(const ::std::string& value) {
  
  selector_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.MethodSettings.selector)
}
void MethodSettings::set_selector(const char* value) {
  
  selector_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.MethodSettings.selector)
}
void MethodSettings::set_selector(const char* value, size_t size) {
  
  selector_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.MethodSettings.selector)
}
::std::string* MethodSettings::mutable_selector() {
  
  // @@protoc_insertion_point(field_mutable:google.api.MethodSettings.selector)
  return selector_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MethodSettings::release_selector() {
  // @@protoc_insertion_point(field_release:google.api.MethodSettings.selector)
  
  return selector_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MethodSettings::set_allocated_selector(::std::string* selector) {
  if (selector != NULL) {
    
  } else {
    
  }
  selector_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), selector);
  // @@protoc_insertion_point(field_set_allocated:google.api.MethodSettings.selector)
}

// optional .google.api.MethodSettings.LongRunning long_running = 2;
bool MethodSettings::has_long_running() const {
  return this != internal_default_instance() && long_running_ != NULL;
}
void MethodSettings::clear_long_running() {
  if (GetArenaNoVirtual() == NULL && long_running_ != NULL) delete long_running_;
  long_running_ = NULL;
}
const ::google::api::MethodSettings_LongRunning& MethodSettings::long_running() const {
  // @@protoc_insertion_point(field_get:google.api.MethodSettings.long_running)
  return long_running_ != NULL ? *long_running_
                         : *::google::api::MethodSettings_LongRunning::internal_default_instance();
}
::google::api::MethodSettings_LongRunning* MethodSettings::mutable_long_running() {
  
  if (long_running_ == NULL) {
    long_running_ = new ::google::api::MethodSettings_LongRunning;
  }
  // @@protoc_insertion_point(field_mutable:google.api.MethodSettings.long_running)
  return long_running_;
}
::google::api::MethodSettings_LongRunning* MethodSettings::release_long_running() {
  // @@protoc_insertion_point(field_release:google.api.MethodSettings.long_running)
  
  ::google::api::MethodSettings_LongRunning* temp = long_running_;
  long_running_ = NULL;
  return temp;
}
void MethodSettings::set_allocated_long_running(::google::api::MethodSettings_LongRunning* long_running) {
  delete long_running_;
  long_running_ = long_running;
  if (long_running) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.MethodSettings.long_running)
}

inline const MethodSettings* MethodSettings::internal_default_instance() {
  return &MethodSettings_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS
const ::std::string method_signature_default("");
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::google::protobuf::internal::RepeatedStringTypeTraits, 9, false >
  method_signature(kMethodSignatureFieldNumber, method_signature_default);
const ::std::string default_host_default("");
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::ServiceOptions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  default_host(kDefaultHostFieldNumber, default_host_default);
const ::std::string oauth_scopes_default("");
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::ServiceOptions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  oauth_scopes(kOauthScopesFieldNumber, oauth_scopes_default);

// @@protoc_insertion_point(namespace_scope)

}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)
