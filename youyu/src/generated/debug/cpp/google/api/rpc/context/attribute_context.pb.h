// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/rpc/context/attribute_context.proto

#ifndef PROTOBUF_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto__INCLUDED
#define PROTOBUF_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/struct.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace rpc {
namespace context {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
void protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
void protobuf_AssignDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
void protobuf_ShutdownFile_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();

class AttributeContext;
class AttributeContext_Api;
class AttributeContext_Auth;
class AttributeContext_Peer;
class AttributeContext_Request;
class AttributeContext_Resource;
class AttributeContext_Response;

// ===================================================================

class AttributeContext_Peer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.rpc.context.AttributeContext.Peer) */ {
 public:
  AttributeContext_Peer();
  virtual ~AttributeContext_Peer();

  AttributeContext_Peer(const AttributeContext_Peer& from);

  inline AttributeContext_Peer& operator=(const AttributeContext_Peer& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const AttributeContext_Peer& default_instance();

  static const AttributeContext_Peer* internal_default_instance();

  void UnsafeArenaSwap(AttributeContext_Peer* other);
  void Swap(AttributeContext_Peer* other);

  // implements Message ----------------------------------------------

  inline AttributeContext_Peer* New() const { return New(NULL); }

  AttributeContext_Peer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttributeContext_Peer& from);
  void MergeFrom(const AttributeContext_Peer& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AttributeContext_Peer* other);
  void UnsafeMergeFrom(const AttributeContext_Peer& from);
  protected:
  explicit AttributeContext_Peer(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional string ip = 1;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);
  ::std::string* unsafe_arena_release_ip();
  void unsafe_arena_set_allocated_ip(
      ::std::string* ip);

  // optional int64 port = 2;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::int64 port() const;
  void set_port(::google::protobuf::int64 value);

  // map<string, string> labels = 6;
  int labels_size() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 6;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      labels() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_labels();

  // optional string principal = 7;
  void clear_principal();
  static const int kPrincipalFieldNumber = 7;
  const ::std::string& principal() const;
  void set_principal(const ::std::string& value);
  void set_principal(const char* value);
  void set_principal(const char* value, size_t size);
  ::std::string* mutable_principal();
  ::std::string* release_principal();
  void set_allocated_principal(::std::string* principal);
  ::std::string* unsafe_arena_release_principal();
  void unsafe_arena_set_allocated_principal(
      ::std::string* principal);

  // optional string region_code = 8;
  void clear_region_code();
  static const int kRegionCodeFieldNumber = 8;
  const ::std::string& region_code() const;
  void set_region_code(const ::std::string& value);
  void set_region_code(const char* value);
  void set_region_code(const char* value, size_t size);
  ::std::string* mutable_region_code();
  ::std::string* release_region_code();
  void set_allocated_region_code(::std::string* region_code);
  ::std::string* unsafe_arena_release_region_code();
  void unsafe_arena_set_allocated_region_code(
      ::std::string* region_code);

  // @@protoc_insertion_point(class_scope:google.rpc.context.AttributeContext.Peer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      AttributeContext_Peer_LabelsEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > labels_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr principal_;
  ::google::protobuf::internal::ArenaStringPtr region_code_;
  ::google::protobuf::int64 port_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AttributeContext_Peer> AttributeContext_Peer_default_instance_;

// -------------------------------------------------------------------

class AttributeContext_Api : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.rpc.context.AttributeContext.Api) */ {
 public:
  AttributeContext_Api();
  virtual ~AttributeContext_Api();

  AttributeContext_Api(const AttributeContext_Api& from);

  inline AttributeContext_Api& operator=(const AttributeContext_Api& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const AttributeContext_Api& default_instance();

  static const AttributeContext_Api* internal_default_instance();

  void UnsafeArenaSwap(AttributeContext_Api* other);
  void Swap(AttributeContext_Api* other);

  // implements Message ----------------------------------------------

  inline AttributeContext_Api* New() const { return New(NULL); }

  AttributeContext_Api* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttributeContext_Api& from);
  void MergeFrom(const AttributeContext_Api& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AttributeContext_Api* other);
  void UnsafeMergeFrom(const AttributeContext_Api& from);
  protected:
  explicit AttributeContext_Api(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string service = 1;
  void clear_service();
  static const int kServiceFieldNumber = 1;
  const ::std::string& service() const;
  void set_service(const ::std::string& value);
  void set_service(const char* value);
  void set_service(const char* value, size_t size);
  ::std::string* mutable_service();
  ::std::string* release_service();
  void set_allocated_service(::std::string* service);
  ::std::string* unsafe_arena_release_service();
  void unsafe_arena_set_allocated_service(
      ::std::string* service);

  // optional string operation = 2;
  void clear_operation();
  static const int kOperationFieldNumber = 2;
  const ::std::string& operation() const;
  void set_operation(const ::std::string& value);
  void set_operation(const char* value);
  void set_operation(const char* value, size_t size);
  ::std::string* mutable_operation();
  ::std::string* release_operation();
  void set_allocated_operation(::std::string* operation);
  ::std::string* unsafe_arena_release_operation();
  void unsafe_arena_set_allocated_operation(
      ::std::string* operation);

  // optional string protocol = 3;
  void clear_protocol();
  static const int kProtocolFieldNumber = 3;
  const ::std::string& protocol() const;
  void set_protocol(const ::std::string& value);
  void set_protocol(const char* value);
  void set_protocol(const char* value, size_t size);
  ::std::string* mutable_protocol();
  ::std::string* release_protocol();
  void set_allocated_protocol(::std::string* protocol);
  ::std::string* unsafe_arena_release_protocol();
  void unsafe_arena_set_allocated_protocol(
      ::std::string* protocol);

  // optional string version = 4;
  void clear_version();
  static const int kVersionFieldNumber = 4;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);
  ::std::string* unsafe_arena_release_version();
  void unsafe_arena_set_allocated_version(
      ::std::string* version);

  // @@protoc_insertion_point(class_scope:google.rpc.context.AttributeContext.Api)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr service_;
  ::google::protobuf::internal::ArenaStringPtr operation_;
  ::google::protobuf::internal::ArenaStringPtr protocol_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AttributeContext_Api> AttributeContext_Api_default_instance_;

// -------------------------------------------------------------------

class AttributeContext_Auth : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.rpc.context.AttributeContext.Auth) */ {
 public:
  AttributeContext_Auth();
  virtual ~AttributeContext_Auth();

  AttributeContext_Auth(const AttributeContext_Auth& from);

  inline AttributeContext_Auth& operator=(const AttributeContext_Auth& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const AttributeContext_Auth& default_instance();

  static const AttributeContext_Auth* internal_default_instance();

  void UnsafeArenaSwap(AttributeContext_Auth* other);
  void Swap(AttributeContext_Auth* other);

  // implements Message ----------------------------------------------

  inline AttributeContext_Auth* New() const { return New(NULL); }

  AttributeContext_Auth* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttributeContext_Auth& from);
  void MergeFrom(const AttributeContext_Auth& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AttributeContext_Auth* other);
  void UnsafeMergeFrom(const AttributeContext_Auth& from);
  protected:
  explicit AttributeContext_Auth(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string principal = 1;
  void clear_principal();
  static const int kPrincipalFieldNumber = 1;
  const ::std::string& principal() const;
  void set_principal(const ::std::string& value);
  void set_principal(const char* value);
  void set_principal(const char* value, size_t size);
  ::std::string* mutable_principal();
  ::std::string* release_principal();
  void set_allocated_principal(::std::string* principal);
  ::std::string* unsafe_arena_release_principal();
  void unsafe_arena_set_allocated_principal(
      ::std::string* principal);

  // repeated string audiences = 2;
  int audiences_size() const;
  void clear_audiences();
  static const int kAudiencesFieldNumber = 2;
  const ::std::string& audiences(int index) const;
  ::std::string* mutable_audiences(int index);
  void set_audiences(int index, const ::std::string& value);
  void set_audiences(int index, const char* value);
  void set_audiences(int index, const char* value, size_t size);
  ::std::string* add_audiences();
  void add_audiences(const ::std::string& value);
  void add_audiences(const char* value);
  void add_audiences(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& audiences() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_audiences();

  // optional string presenter = 3;
  void clear_presenter();
  static const int kPresenterFieldNumber = 3;
  const ::std::string& presenter() const;
  void set_presenter(const ::std::string& value);
  void set_presenter(const char* value);
  void set_presenter(const char* value, size_t size);
  ::std::string* mutable_presenter();
  ::std::string* release_presenter();
  void set_allocated_presenter(::std::string* presenter);
  ::std::string* unsafe_arena_release_presenter();
  void unsafe_arena_set_allocated_presenter(
      ::std::string* presenter);

  // optional .google.protobuf.Struct claims = 4;
  bool has_claims() const;
  void clear_claims();
  static const int kClaimsFieldNumber = 4;
  private:
  void _slow_mutable_claims();
  void _slow_set_allocated_claims(
      ::google::protobuf::Arena* message_arena, ::google::protobuf::Struct** claims);
  ::google::protobuf::Struct* _slow_release_claims();
  public:
  const ::google::protobuf::Struct& claims() const;
  ::google::protobuf::Struct* mutable_claims();
  ::google::protobuf::Struct* release_claims();
  void set_allocated_claims(::google::protobuf::Struct* claims);
  ::google::protobuf::Struct* unsafe_arena_release_claims();
  void unsafe_arena_set_allocated_claims(
      ::google::protobuf::Struct* claims);

  // repeated string access_levels = 5;
  int access_levels_size() const;
  void clear_access_levels();
  static const int kAccessLevelsFieldNumber = 5;
  const ::std::string& access_levels(int index) const;
  ::std::string* mutable_access_levels(int index);
  void set_access_levels(int index, const ::std::string& value);
  void set_access_levels(int index, const char* value);
  void set_access_levels(int index, const char* value, size_t size);
  ::std::string* add_access_levels();
  void add_access_levels(const ::std::string& value);
  void add_access_levels(const char* value);
  void add_access_levels(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& access_levels() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_access_levels();

  // @@protoc_insertion_point(class_scope:google.rpc.context.AttributeContext.Auth)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> audiences_;
  ::google::protobuf::RepeatedPtrField< ::std::string> access_levels_;
  ::google::protobuf::internal::ArenaStringPtr principal_;
  ::google::protobuf::internal::ArenaStringPtr presenter_;
  ::google::protobuf::Struct* claims_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AttributeContext_Auth> AttributeContext_Auth_default_instance_;

// -------------------------------------------------------------------

class AttributeContext_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.rpc.context.AttributeContext.Request) */ {
 public:
  AttributeContext_Request();
  virtual ~AttributeContext_Request();

  AttributeContext_Request(const AttributeContext_Request& from);

  inline AttributeContext_Request& operator=(const AttributeContext_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const AttributeContext_Request& default_instance();

  static const AttributeContext_Request* internal_default_instance();

  void UnsafeArenaSwap(AttributeContext_Request* other);
  void Swap(AttributeContext_Request* other);

  // implements Message ----------------------------------------------

  inline AttributeContext_Request* New() const { return New(NULL); }

  AttributeContext_Request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttributeContext_Request& from);
  void MergeFrom(const AttributeContext_Request& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AttributeContext_Request* other);
  void UnsafeMergeFrom(const AttributeContext_Request& from);
  protected:
  explicit AttributeContext_Request(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);
  ::std::string* unsafe_arena_release_id();
  void unsafe_arena_set_allocated_id(
      ::std::string* id);

  // optional string method = 2;
  void clear_method();
  static const int kMethodFieldNumber = 2;
  const ::std::string& method() const;
  void set_method(const ::std::string& value);
  void set_method(const char* value);
  void set_method(const char* value, size_t size);
  ::std::string* mutable_method();
  ::std::string* release_method();
  void set_allocated_method(::std::string* method);
  ::std::string* unsafe_arena_release_method();
  void unsafe_arena_set_allocated_method(
      ::std::string* method);

  // map<string, string> headers = 3;
  int headers_size() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      headers() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_headers();

  // optional string path = 4;
  void clear_path();
  static const int kPathFieldNumber = 4;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);
  ::std::string* unsafe_arena_release_path();
  void unsafe_arena_set_allocated_path(
      ::std::string* path);

  // optional string host = 5;
  void clear_host();
  static const int kHostFieldNumber = 5;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);
  ::std::string* unsafe_arena_release_host();
  void unsafe_arena_set_allocated_host(
      ::std::string* host);

  // optional string scheme = 6;
  void clear_scheme();
  static const int kSchemeFieldNumber = 6;
  const ::std::string& scheme() const;
  void set_scheme(const ::std::string& value);
  void set_scheme(const char* value);
  void set_scheme(const char* value, size_t size);
  ::std::string* mutable_scheme();
  ::std::string* release_scheme();
  void set_allocated_scheme(::std::string* scheme);
  ::std::string* unsafe_arena_release_scheme();
  void unsafe_arena_set_allocated_scheme(
      ::std::string* scheme);

  // optional string query = 7;
  void clear_query();
  static const int kQueryFieldNumber = 7;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);
  ::std::string* unsafe_arena_release_query();
  void unsafe_arena_set_allocated_query(
      ::std::string* query);

  // optional .google.protobuf.Timestamp time = 9;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 9;
  private:
  void _slow_mutable_time();
  void _slow_set_allocated_time(
      ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** time);
  ::google::protobuf::Timestamp* _slow_release_time();
  public:
  const ::google::protobuf::Timestamp& time() const;
  ::google::protobuf::Timestamp* mutable_time();
  ::google::protobuf::Timestamp* release_time();
  void set_allocated_time(::google::protobuf::Timestamp* time);
  ::google::protobuf::Timestamp* unsafe_arena_release_time();
  void unsafe_arena_set_allocated_time(
      ::google::protobuf::Timestamp* time);

  // optional int64 size = 10;
  void clear_size();
  static const int kSizeFieldNumber = 10;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // optional string protocol = 11;
  void clear_protocol();
  static const int kProtocolFieldNumber = 11;
  const ::std::string& protocol() const;
  void set_protocol(const ::std::string& value);
  void set_protocol(const char* value);
  void set_protocol(const char* value, size_t size);
  ::std::string* mutable_protocol();
  ::std::string* release_protocol();
  void set_allocated_protocol(::std::string* protocol);
  ::std::string* unsafe_arena_release_protocol();
  void unsafe_arena_set_allocated_protocol(
      ::std::string* protocol);

  // optional string reason = 12;
  void clear_reason();
  static const int kReasonFieldNumber = 12;
  const ::std::string& reason() const;
  void set_reason(const ::std::string& value);
  void set_reason(const char* value);
  void set_reason(const char* value, size_t size);
  ::std::string* mutable_reason();
  ::std::string* release_reason();
  void set_allocated_reason(::std::string* reason);
  ::std::string* unsafe_arena_release_reason();
  void unsafe_arena_set_allocated_reason(
      ::std::string* reason);

  // optional .google.rpc.context.AttributeContext.Auth auth = 13;
  bool has_auth() const;
  void clear_auth();
  static const int kAuthFieldNumber = 13;
  private:
  void _slow_mutable_auth();
  void _slow_set_allocated_auth(
      ::google::protobuf::Arena* message_arena, ::google::rpc::context::AttributeContext_Auth** auth);
  ::google::rpc::context::AttributeContext_Auth* _slow_release_auth();
  public:
  const ::google::rpc::context::AttributeContext_Auth& auth() const;
  ::google::rpc::context::AttributeContext_Auth* mutable_auth();
  ::google::rpc::context::AttributeContext_Auth* release_auth();
  void set_allocated_auth(::google::rpc::context::AttributeContext_Auth* auth);
  ::google::rpc::context::AttributeContext_Auth* unsafe_arena_release_auth();
  void unsafe_arena_set_allocated_auth(
      ::google::rpc::context::AttributeContext_Auth* auth);

  // @@protoc_insertion_point(class_scope:google.rpc.context.AttributeContext.Request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      AttributeContext_Request_HeadersEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > headers_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr method_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::internal::ArenaStringPtr scheme_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::internal::ArenaStringPtr protocol_;
  ::google::protobuf::internal::ArenaStringPtr reason_;
  ::google::protobuf::Timestamp* time_;
  ::google::rpc::context::AttributeContext_Auth* auth_;
  ::google::protobuf::int64 size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AttributeContext_Request> AttributeContext_Request_default_instance_;

// -------------------------------------------------------------------

class AttributeContext_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.rpc.context.AttributeContext.Response) */ {
 public:
  AttributeContext_Response();
  virtual ~AttributeContext_Response();

  AttributeContext_Response(const AttributeContext_Response& from);

  inline AttributeContext_Response& operator=(const AttributeContext_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const AttributeContext_Response& default_instance();

  static const AttributeContext_Response* internal_default_instance();

  void UnsafeArenaSwap(AttributeContext_Response* other);
  void Swap(AttributeContext_Response* other);

  // implements Message ----------------------------------------------

  inline AttributeContext_Response* New() const { return New(NULL); }

  AttributeContext_Response* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttributeContext_Response& from);
  void MergeFrom(const AttributeContext_Response& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AttributeContext_Response* other);
  void UnsafeMergeFrom(const AttributeContext_Response& from);
  protected:
  explicit AttributeContext_Response(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional int64 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int64 code() const;
  void set_code(::google::protobuf::int64 value);

  // optional int64 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // map<string, string> headers = 3;
  int headers_size() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      headers() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_headers();

  // optional .google.protobuf.Timestamp time = 4;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 4;
  private:
  void _slow_mutable_time();
  void _slow_set_allocated_time(
      ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** time);
  ::google::protobuf::Timestamp* _slow_release_time();
  public:
  const ::google::protobuf::Timestamp& time() const;
  ::google::protobuf::Timestamp* mutable_time();
  ::google::protobuf::Timestamp* release_time();
  void set_allocated_time(::google::protobuf::Timestamp* time);
  ::google::protobuf::Timestamp* unsafe_arena_release_time();
  void unsafe_arena_set_allocated_time(
      ::google::protobuf::Timestamp* time);

  // optional .google.protobuf.Duration backend_latency = 5;
  bool has_backend_latency() const;
  void clear_backend_latency();
  static const int kBackendLatencyFieldNumber = 5;
  private:
  void _slow_mutable_backend_latency();
  void _slow_set_allocated_backend_latency(
      ::google::protobuf::Arena* message_arena, ::google::protobuf::Duration** backend_latency);
  ::google::protobuf::Duration* _slow_release_backend_latency();
  public:
  const ::google::protobuf::Duration& backend_latency() const;
  ::google::protobuf::Duration* mutable_backend_latency();
  ::google::protobuf::Duration* release_backend_latency();
  void set_allocated_backend_latency(::google::protobuf::Duration* backend_latency);
  ::google::protobuf::Duration* unsafe_arena_release_backend_latency();
  void unsafe_arena_set_allocated_backend_latency(
      ::google::protobuf::Duration* backend_latency);

  // @@protoc_insertion_point(class_scope:google.rpc.context.AttributeContext.Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      AttributeContext_Response_HeadersEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > headers_;
  ::google::protobuf::Timestamp* time_;
  ::google::protobuf::Duration* backend_latency_;
  ::google::protobuf::int64 code_;
  ::google::protobuf::int64 size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AttributeContext_Response> AttributeContext_Response_default_instance_;

// -------------------------------------------------------------------

class AttributeContext_Resource : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.rpc.context.AttributeContext.Resource) */ {
 public:
  AttributeContext_Resource();
  virtual ~AttributeContext_Resource();

  AttributeContext_Resource(const AttributeContext_Resource& from);

  inline AttributeContext_Resource& operator=(const AttributeContext_Resource& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const AttributeContext_Resource& default_instance();

  static const AttributeContext_Resource* internal_default_instance();

  void UnsafeArenaSwap(AttributeContext_Resource* other);
  void Swap(AttributeContext_Resource* other);

  // implements Message ----------------------------------------------

  inline AttributeContext_Resource* New() const { return New(NULL); }

  AttributeContext_Resource* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttributeContext_Resource& from);
  void MergeFrom(const AttributeContext_Resource& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AttributeContext_Resource* other);
  void UnsafeMergeFrom(const AttributeContext_Resource& from);
  protected:
  explicit AttributeContext_Resource(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional string service = 1;
  void clear_service();
  static const int kServiceFieldNumber = 1;
  const ::std::string& service() const;
  void set_service(const ::std::string& value);
  void set_service(const char* value);
  void set_service(const char* value, size_t size);
  ::std::string* mutable_service();
  ::std::string* release_service();
  void set_allocated_service(::std::string* service);
  ::std::string* unsafe_arena_release_service();
  void unsafe_arena_set_allocated_service(
      ::std::string* service);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  ::std::string* unsafe_arena_release_name();
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // optional string type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);
  ::std::string* unsafe_arena_release_type();
  void unsafe_arena_set_allocated_type(
      ::std::string* type);

  // map<string, string> labels = 4;
  int labels_size() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      labels() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_labels();

  // optional string uid = 5;
  void clear_uid();
  static const int kUidFieldNumber = 5;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);
  ::std::string* unsafe_arena_release_uid();
  void unsafe_arena_set_allocated_uid(
      ::std::string* uid);

  // map<string, string> annotations = 6;
  int annotations_size() const;
  void clear_annotations();
  static const int kAnnotationsFieldNumber = 6;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      annotations() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_annotations();

  // optional string display_name = 7;
  void clear_display_name();
  static const int kDisplayNameFieldNumber = 7;
  const ::std::string& display_name() const;
  void set_display_name(const ::std::string& value);
  void set_display_name(const char* value);
  void set_display_name(const char* value, size_t size);
  ::std::string* mutable_display_name();
  ::std::string* release_display_name();
  void set_allocated_display_name(::std::string* display_name);
  ::std::string* unsafe_arena_release_display_name();
  void unsafe_arena_set_allocated_display_name(
      ::std::string* display_name);

  // optional .google.protobuf.Timestamp create_time = 8;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 8;
  private:
  void _slow_mutable_create_time();
  void _slow_set_allocated_create_time(
      ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** create_time);
  ::google::protobuf::Timestamp* _slow_release_create_time();
  public:
  const ::google::protobuf::Timestamp& create_time() const;
  ::google::protobuf::Timestamp* mutable_create_time();
  ::google::protobuf::Timestamp* release_create_time();
  void set_allocated_create_time(::google::protobuf::Timestamp* create_time);
  ::google::protobuf::Timestamp* unsafe_arena_release_create_time();
  void unsafe_arena_set_allocated_create_time(
      ::google::protobuf::Timestamp* create_time);

  // optional .google.protobuf.Timestamp update_time = 9;
  bool has_update_time() const;
  void clear_update_time();
  static const int kUpdateTimeFieldNumber = 9;
  private:
  void _slow_mutable_update_time();
  void _slow_set_allocated_update_time(
      ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** update_time);
  ::google::protobuf::Timestamp* _slow_release_update_time();
  public:
  const ::google::protobuf::Timestamp& update_time() const;
  ::google::protobuf::Timestamp* mutable_update_time();
  ::google::protobuf::Timestamp* release_update_time();
  void set_allocated_update_time(::google::protobuf::Timestamp* update_time);
  ::google::protobuf::Timestamp* unsafe_arena_release_update_time();
  void unsafe_arena_set_allocated_update_time(
      ::google::protobuf::Timestamp* update_time);

  // optional .google.protobuf.Timestamp delete_time = 10;
  bool has_delete_time() const;
  void clear_delete_time();
  static const int kDeleteTimeFieldNumber = 10;
  private:
  void _slow_mutable_delete_time();
  void _slow_set_allocated_delete_time(
      ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** delete_time);
  ::google::protobuf::Timestamp* _slow_release_delete_time();
  public:
  const ::google::protobuf::Timestamp& delete_time() const;
  ::google::protobuf::Timestamp* mutable_delete_time();
  ::google::protobuf::Timestamp* release_delete_time();
  void set_allocated_delete_time(::google::protobuf::Timestamp* delete_time);
  ::google::protobuf::Timestamp* unsafe_arena_release_delete_time();
  void unsafe_arena_set_allocated_delete_time(
      ::google::protobuf::Timestamp* delete_time);

  // optional string etag = 11;
  void clear_etag();
  static const int kEtagFieldNumber = 11;
  const ::std::string& etag() const;
  void set_etag(const ::std::string& value);
  void set_etag(const char* value);
  void set_etag(const char* value, size_t size);
  ::std::string* mutable_etag();
  ::std::string* release_etag();
  void set_allocated_etag(::std::string* etag);
  ::std::string* unsafe_arena_release_etag();
  void unsafe_arena_set_allocated_etag(
      ::std::string* etag);

  // optional string location = 12;
  void clear_location();
  static const int kLocationFieldNumber = 12;
  const ::std::string& location() const;
  void set_location(const ::std::string& value);
  void set_location(const char* value);
  void set_location(const char* value, size_t size);
  ::std::string* mutable_location();
  ::std::string* release_location();
  void set_allocated_location(::std::string* location);
  ::std::string* unsafe_arena_release_location();
  void unsafe_arena_set_allocated_location(
      ::std::string* location);

  // @@protoc_insertion_point(class_scope:google.rpc.context.AttributeContext.Resource)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      AttributeContext_Resource_LabelsEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > labels_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      AttributeContext_Resource_AnnotationsEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > annotations_;
  ::google::protobuf::internal::ArenaStringPtr service_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::google::protobuf::internal::ArenaStringPtr display_name_;
  ::google::protobuf::internal::ArenaStringPtr etag_;
  ::google::protobuf::internal::ArenaStringPtr location_;
  ::google::protobuf::Timestamp* create_time_;
  ::google::protobuf::Timestamp* update_time_;
  ::google::protobuf::Timestamp* delete_time_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AttributeContext_Resource> AttributeContext_Resource_default_instance_;

// -------------------------------------------------------------------

class AttributeContext : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.rpc.context.AttributeContext) */ {
 public:
  AttributeContext();
  virtual ~AttributeContext();

  AttributeContext(const AttributeContext& from);

  inline AttributeContext& operator=(const AttributeContext& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const AttributeContext& default_instance();

  static const AttributeContext* internal_default_instance();

  void UnsafeArenaSwap(AttributeContext* other);
  void Swap(AttributeContext* other);

  // implements Message ----------------------------------------------

  inline AttributeContext* New() const { return New(NULL); }

  AttributeContext* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttributeContext& from);
  void MergeFrom(const AttributeContext& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AttributeContext* other);
  void UnsafeMergeFrom(const AttributeContext& from);
  protected:
  explicit AttributeContext(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef AttributeContext_Peer Peer;
  typedef AttributeContext_Api Api;
  typedef AttributeContext_Auth Auth;
  typedef AttributeContext_Request Request;
  typedef AttributeContext_Response Response;
  typedef AttributeContext_Resource Resource;

  // accessors -------------------------------------------------------

  // optional .google.rpc.context.AttributeContext.Peer origin = 7;
  bool has_origin() const;
  void clear_origin();
  static const int kOriginFieldNumber = 7;
  private:
  void _slow_mutable_origin();
  void _slow_set_allocated_origin(
      ::google::protobuf::Arena* message_arena, ::google::rpc::context::AttributeContext_Peer** origin);
  ::google::rpc::context::AttributeContext_Peer* _slow_release_origin();
  public:
  const ::google::rpc::context::AttributeContext_Peer& origin() const;
  ::google::rpc::context::AttributeContext_Peer* mutable_origin();
  ::google::rpc::context::AttributeContext_Peer* release_origin();
  void set_allocated_origin(::google::rpc::context::AttributeContext_Peer* origin);
  ::google::rpc::context::AttributeContext_Peer* unsafe_arena_release_origin();
  void unsafe_arena_set_allocated_origin(
      ::google::rpc::context::AttributeContext_Peer* origin);

  // optional .google.rpc.context.AttributeContext.Peer source = 1;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  private:
  void _slow_mutable_source();
  void _slow_set_allocated_source(
      ::google::protobuf::Arena* message_arena, ::google::rpc::context::AttributeContext_Peer** source);
  ::google::rpc::context::AttributeContext_Peer* _slow_release_source();
  public:
  const ::google::rpc::context::AttributeContext_Peer& source() const;
  ::google::rpc::context::AttributeContext_Peer* mutable_source();
  ::google::rpc::context::AttributeContext_Peer* release_source();
  void set_allocated_source(::google::rpc::context::AttributeContext_Peer* source);
  ::google::rpc::context::AttributeContext_Peer* unsafe_arena_release_source();
  void unsafe_arena_set_allocated_source(
      ::google::rpc::context::AttributeContext_Peer* source);

  // optional .google.rpc.context.AttributeContext.Peer destination = 2;
  bool has_destination() const;
  void clear_destination();
  static const int kDestinationFieldNumber = 2;
  private:
  void _slow_mutable_destination();
  void _slow_set_allocated_destination(
      ::google::protobuf::Arena* message_arena, ::google::rpc::context::AttributeContext_Peer** destination);
  ::google::rpc::context::AttributeContext_Peer* _slow_release_destination();
  public:
  const ::google::rpc::context::AttributeContext_Peer& destination() const;
  ::google::rpc::context::AttributeContext_Peer* mutable_destination();
  ::google::rpc::context::AttributeContext_Peer* release_destination();
  void set_allocated_destination(::google::rpc::context::AttributeContext_Peer* destination);
  ::google::rpc::context::AttributeContext_Peer* unsafe_arena_release_destination();
  void unsafe_arena_set_allocated_destination(
      ::google::rpc::context::AttributeContext_Peer* destination);

  // optional .google.rpc.context.AttributeContext.Request request = 3;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 3;
  private:
  void _slow_mutable_request();
  void _slow_set_allocated_request(
      ::google::protobuf::Arena* message_arena, ::google::rpc::context::AttributeContext_Request** request);
  ::google::rpc::context::AttributeContext_Request* _slow_release_request();
  public:
  const ::google::rpc::context::AttributeContext_Request& request() const;
  ::google::rpc::context::AttributeContext_Request* mutable_request();
  ::google::rpc::context::AttributeContext_Request* release_request();
  void set_allocated_request(::google::rpc::context::AttributeContext_Request* request);
  ::google::rpc::context::AttributeContext_Request* unsafe_arena_release_request();
  void unsafe_arena_set_allocated_request(
      ::google::rpc::context::AttributeContext_Request* request);

  // optional .google.rpc.context.AttributeContext.Response response = 4;
  bool has_response() const;
  void clear_response();
  static const int kResponseFieldNumber = 4;
  private:
  void _slow_mutable_response();
  void _slow_set_allocated_response(
      ::google::protobuf::Arena* message_arena, ::google::rpc::context::AttributeContext_Response** response);
  ::google::rpc::context::AttributeContext_Response* _slow_release_response();
  public:
  const ::google::rpc::context::AttributeContext_Response& response() const;
  ::google::rpc::context::AttributeContext_Response* mutable_response();
  ::google::rpc::context::AttributeContext_Response* release_response();
  void set_allocated_response(::google::rpc::context::AttributeContext_Response* response);
  ::google::rpc::context::AttributeContext_Response* unsafe_arena_release_response();
  void unsafe_arena_set_allocated_response(
      ::google::rpc::context::AttributeContext_Response* response);

  // optional .google.rpc.context.AttributeContext.Resource resource = 5;
  bool has_resource() const;
  void clear_resource();
  static const int kResourceFieldNumber = 5;
  private:
  void _slow_mutable_resource();
  void _slow_set_allocated_resource(
      ::google::protobuf::Arena* message_arena, ::google::rpc::context::AttributeContext_Resource** resource);
  ::google::rpc::context::AttributeContext_Resource* _slow_release_resource();
  public:
  const ::google::rpc::context::AttributeContext_Resource& resource() const;
  ::google::rpc::context::AttributeContext_Resource* mutable_resource();
  ::google::rpc::context::AttributeContext_Resource* release_resource();
  void set_allocated_resource(::google::rpc::context::AttributeContext_Resource* resource);
  ::google::rpc::context::AttributeContext_Resource* unsafe_arena_release_resource();
  void unsafe_arena_set_allocated_resource(
      ::google::rpc::context::AttributeContext_Resource* resource);

  // optional .google.rpc.context.AttributeContext.Api api = 6;
  bool has_api() const;
  void clear_api();
  static const int kApiFieldNumber = 6;
  private:
  void _slow_mutable_api();
  void _slow_set_allocated_api(
      ::google::protobuf::Arena* message_arena, ::google::rpc::context::AttributeContext_Api** api);
  ::google::rpc::context::AttributeContext_Api* _slow_release_api();
  public:
  const ::google::rpc::context::AttributeContext_Api& api() const;
  ::google::rpc::context::AttributeContext_Api* mutable_api();
  ::google::rpc::context::AttributeContext_Api* release_api();
  void set_allocated_api(::google::rpc::context::AttributeContext_Api* api);
  ::google::rpc::context::AttributeContext_Api* unsafe_arena_release_api();
  void unsafe_arena_set_allocated_api(
      ::google::rpc::context::AttributeContext_Api* api);

  // repeated .google.protobuf.Any extensions = 8;
  int extensions_size() const;
  void clear_extensions();
  static const int kExtensionsFieldNumber = 8;
  const ::google::protobuf::Any& extensions(int index) const;
  ::google::protobuf::Any* mutable_extensions(int index);
  ::google::protobuf::Any* add_extensions();
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_extensions();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      extensions() const;

  // @@protoc_insertion_point(class_scope:google.rpc.context.AttributeContext)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > extensions_;
  ::google::rpc::context::AttributeContext_Peer* origin_;
  ::google::rpc::context::AttributeContext_Peer* source_;
  ::google::rpc::context::AttributeContext_Peer* destination_;
  ::google::rpc::context::AttributeContext_Request* request_;
  ::google::rpc::context::AttributeContext_Response* response_;
  ::google::rpc::context::AttributeContext_Resource* resource_;
  ::google::rpc::context::AttributeContext_Api* api_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AttributeContext> AttributeContext_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AttributeContext_Peer

// optional string ip = 1;
inline void AttributeContext_Peer::clear_ip() {
  ip_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AttributeContext_Peer::ip() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Peer.ip)
  return ip_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeContext_Peer::set_ip(const ::std::string& value) {
  
  ip_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Peer.ip)
}
inline void AttributeContext_Peer::set_ip(const char* value) {
  
  ip_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Peer.ip)
}
inline void AttributeContext_Peer::set_ip(const char* value,
    size_t size) {
  
  ip_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Peer.ip)
}
inline ::std::string* AttributeContext_Peer::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Peer.ip)
  return ip_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Peer::release_ip() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Peer.ip)
  
  return ip_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Peer::unsafe_arena_release_ip() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Peer.ip)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return ip_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AttributeContext_Peer::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Peer.ip)
}
inline void AttributeContext_Peer::unsafe_arena_set_allocated_ip(
    ::std::string* ip) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ip, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Peer.ip)
}

// optional int64 port = 2;
inline void AttributeContext_Peer::clear_port() {
  port_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AttributeContext_Peer::port() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Peer.port)
  return port_;
}
inline void AttributeContext_Peer::set_port(::google::protobuf::int64 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Peer.port)
}

// map<string, string> labels = 6;
inline int AttributeContext_Peer::labels_size() const {
  return labels_.size();
}
inline void AttributeContext_Peer::clear_labels() {
  labels_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
AttributeContext_Peer::labels() const {
  // @@protoc_insertion_point(field_map:google.rpc.context.AttributeContext.Peer.labels)
  return labels_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
AttributeContext_Peer::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.rpc.context.AttributeContext.Peer.labels)
  return labels_.MutableMap();
}

// optional string principal = 7;
inline void AttributeContext_Peer::clear_principal() {
  principal_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AttributeContext_Peer::principal() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Peer.principal)
  return principal_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeContext_Peer::set_principal(const ::std::string& value) {
  
  principal_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Peer.principal)
}
inline void AttributeContext_Peer::set_principal(const char* value) {
  
  principal_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Peer.principal)
}
inline void AttributeContext_Peer::set_principal(const char* value,
    size_t size) {
  
  principal_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Peer.principal)
}
inline ::std::string* AttributeContext_Peer::mutable_principal() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Peer.principal)
  return principal_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Peer::release_principal() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Peer.principal)
  
  return principal_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Peer::unsafe_arena_release_principal() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Peer.principal)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return principal_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AttributeContext_Peer::set_allocated_principal(::std::string* principal) {
  if (principal != NULL) {
    
  } else {
    
  }
  principal_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), principal,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Peer.principal)
}
inline void AttributeContext_Peer::unsafe_arena_set_allocated_principal(
    ::std::string* principal) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (principal != NULL) {
    
  } else {
    
  }
  principal_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      principal, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Peer.principal)
}

// optional string region_code = 8;
inline void AttributeContext_Peer::clear_region_code() {
  region_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AttributeContext_Peer::region_code() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Peer.region_code)
  return region_code_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeContext_Peer::set_region_code(const ::std::string& value) {
  
  region_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Peer.region_code)
}
inline void AttributeContext_Peer::set_region_code(const char* value) {
  
  region_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Peer.region_code)
}
inline void AttributeContext_Peer::set_region_code(const char* value,
    size_t size) {
  
  region_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Peer.region_code)
}
inline ::std::string* AttributeContext_Peer::mutable_region_code() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Peer.region_code)
  return region_code_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Peer::release_region_code() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Peer.region_code)
  
  return region_code_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Peer::unsafe_arena_release_region_code() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Peer.region_code)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return region_code_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AttributeContext_Peer::set_allocated_region_code(::std::string* region_code) {
  if (region_code != NULL) {
    
  } else {
    
  }
  region_code_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region_code,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Peer.region_code)
}
inline void AttributeContext_Peer::unsafe_arena_set_allocated_region_code(
    ::std::string* region_code) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (region_code != NULL) {
    
  } else {
    
  }
  region_code_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      region_code, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Peer.region_code)
}

inline const AttributeContext_Peer* AttributeContext_Peer::internal_default_instance() {
  return &AttributeContext_Peer_default_instance_.get();
}
// -------------------------------------------------------------------

// AttributeContext_Api

// optional string service = 1;
inline void AttributeContext_Api::clear_service() {
  service_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AttributeContext_Api::service() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Api.service)
  return service_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeContext_Api::set_service(const ::std::string& value) {
  
  service_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Api.service)
}
inline void AttributeContext_Api::set_service(const char* value) {
  
  service_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Api.service)
}
inline void AttributeContext_Api::set_service(const char* value,
    size_t size) {
  
  service_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Api.service)
}
inline ::std::string* AttributeContext_Api::mutable_service() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Api.service)
  return service_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Api::release_service() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Api.service)
  
  return service_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Api::unsafe_arena_release_service() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Api.service)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return service_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AttributeContext_Api::set_allocated_service(::std::string* service) {
  if (service != NULL) {
    
  } else {
    
  }
  service_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Api.service)
}
inline void AttributeContext_Api::unsafe_arena_set_allocated_service(
    ::std::string* service) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (service != NULL) {
    
  } else {
    
  }
  service_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      service, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Api.service)
}

// optional string operation = 2;
inline void AttributeContext_Api::clear_operation() {
  operation_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AttributeContext_Api::operation() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Api.operation)
  return operation_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeContext_Api::set_operation(const ::std::string& value) {
  
  operation_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Api.operation)
}
inline void AttributeContext_Api::set_operation(const char* value) {
  
  operation_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Api.operation)
}
inline void AttributeContext_Api::set_operation(const char* value,
    size_t size) {
  
  operation_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Api.operation)
}
inline ::std::string* AttributeContext_Api::mutable_operation() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Api.operation)
  return operation_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Api::release_operation() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Api.operation)
  
  return operation_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Api::unsafe_arena_release_operation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Api.operation)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return operation_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AttributeContext_Api::set_allocated_operation(::std::string* operation) {
  if (operation != NULL) {
    
  } else {
    
  }
  operation_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operation,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Api.operation)
}
inline void AttributeContext_Api::unsafe_arena_set_allocated_operation(
    ::std::string* operation) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (operation != NULL) {
    
  } else {
    
  }
  operation_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      operation, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Api.operation)
}

// optional string protocol = 3;
inline void AttributeContext_Api::clear_protocol() {
  protocol_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AttributeContext_Api::protocol() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Api.protocol)
  return protocol_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeContext_Api::set_protocol(const ::std::string& value) {
  
  protocol_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Api.protocol)
}
inline void AttributeContext_Api::set_protocol(const char* value) {
  
  protocol_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Api.protocol)
}
inline void AttributeContext_Api::set_protocol(const char* value,
    size_t size) {
  
  protocol_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Api.protocol)
}
inline ::std::string* AttributeContext_Api::mutable_protocol() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Api.protocol)
  return protocol_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Api::release_protocol() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Api.protocol)
  
  return protocol_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Api::unsafe_arena_release_protocol() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Api.protocol)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return protocol_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AttributeContext_Api::set_allocated_protocol(::std::string* protocol) {
  if (protocol != NULL) {
    
  } else {
    
  }
  protocol_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), protocol,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Api.protocol)
}
inline void AttributeContext_Api::unsafe_arena_set_allocated_protocol(
    ::std::string* protocol) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (protocol != NULL) {
    
  } else {
    
  }
  protocol_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      protocol, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Api.protocol)
}

// optional string version = 4;
inline void AttributeContext_Api::clear_version() {
  version_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AttributeContext_Api::version() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Api.version)
  return version_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeContext_Api::set_version(const ::std::string& value) {
  
  version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Api.version)
}
inline void AttributeContext_Api::set_version(const char* value) {
  
  version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Api.version)
}
inline void AttributeContext_Api::set_version(const char* value,
    size_t size) {
  
  version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Api.version)
}
inline ::std::string* AttributeContext_Api::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Api.version)
  return version_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Api::release_version() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Api.version)
  
  return version_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Api::unsafe_arena_release_version() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Api.version)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return version_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AttributeContext_Api::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Api.version)
}
inline void AttributeContext_Api::unsafe_arena_set_allocated_version(
    ::std::string* version) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (version != NULL) {
    
  } else {
    
  }
  version_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      version, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Api.version)
}

inline const AttributeContext_Api* AttributeContext_Api::internal_default_instance() {
  return &AttributeContext_Api_default_instance_.get();
}
// -------------------------------------------------------------------

// AttributeContext_Auth

// optional string principal = 1;
inline void AttributeContext_Auth::clear_principal() {
  principal_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AttributeContext_Auth::principal() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Auth.principal)
  return principal_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeContext_Auth::set_principal(const ::std::string& value) {
  
  principal_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Auth.principal)
}
inline void AttributeContext_Auth::set_principal(const char* value) {
  
  principal_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Auth.principal)
}
inline void AttributeContext_Auth::set_principal(const char* value,
    size_t size) {
  
  principal_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Auth.principal)
}
inline ::std::string* AttributeContext_Auth::mutable_principal() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Auth.principal)
  return principal_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Auth::release_principal() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Auth.principal)
  
  return principal_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Auth::unsafe_arena_release_principal() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Auth.principal)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return principal_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AttributeContext_Auth::set_allocated_principal(::std::string* principal) {
  if (principal != NULL) {
    
  } else {
    
  }
  principal_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), principal,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Auth.principal)
}
inline void AttributeContext_Auth::unsafe_arena_set_allocated_principal(
    ::std::string* principal) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (principal != NULL) {
    
  } else {
    
  }
  principal_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      principal, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Auth.principal)
}

// repeated string audiences = 2;
inline int AttributeContext_Auth::audiences_size() const {
  return audiences_.size();
}
inline void AttributeContext_Auth::clear_audiences() {
  audiences_.Clear();
}
inline const ::std::string& AttributeContext_Auth::audiences(int index) const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Auth.audiences)
  return audiences_.Get(index);
}
inline ::std::string* AttributeContext_Auth::mutable_audiences(int index) {
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Auth.audiences)
  return audiences_.Mutable(index);
}
inline void AttributeContext_Auth::set_audiences(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Auth.audiences)
  audiences_.Mutable(index)->assign(value);
}
inline void AttributeContext_Auth::set_audiences(int index, const char* value) {
  audiences_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Auth.audiences)
}
inline void AttributeContext_Auth::set_audiences(int index, const char* value, size_t size) {
  audiences_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Auth.audiences)
}
inline ::std::string* AttributeContext_Auth::add_audiences() {
  // @@protoc_insertion_point(field_add_mutable:google.rpc.context.AttributeContext.Auth.audiences)
  return audiences_.Add();
}
inline void AttributeContext_Auth::add_audiences(const ::std::string& value) {
  audiences_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.rpc.context.AttributeContext.Auth.audiences)
}
inline void AttributeContext_Auth::add_audiences(const char* value) {
  audiences_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.rpc.context.AttributeContext.Auth.audiences)
}
inline void AttributeContext_Auth::add_audiences(const char* value, size_t size) {
  audiences_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.rpc.context.AttributeContext.Auth.audiences)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AttributeContext_Auth::audiences() const {
  // @@protoc_insertion_point(field_list:google.rpc.context.AttributeContext.Auth.audiences)
  return audiences_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AttributeContext_Auth::mutable_audiences() {
  // @@protoc_insertion_point(field_mutable_list:google.rpc.context.AttributeContext.Auth.audiences)
  return &audiences_;
}

// optional string presenter = 3;
inline void AttributeContext_Auth::clear_presenter() {
  presenter_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AttributeContext_Auth::presenter() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Auth.presenter)
  return presenter_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeContext_Auth::set_presenter(const ::std::string& value) {
  
  presenter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Auth.presenter)
}
inline void AttributeContext_Auth::set_presenter(const char* value) {
  
  presenter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Auth.presenter)
}
inline void AttributeContext_Auth::set_presenter(const char* value,
    size_t size) {
  
  presenter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Auth.presenter)
}
inline ::std::string* AttributeContext_Auth::mutable_presenter() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Auth.presenter)
  return presenter_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Auth::release_presenter() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Auth.presenter)
  
  return presenter_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Auth::unsafe_arena_release_presenter() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Auth.presenter)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return presenter_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AttributeContext_Auth::set_allocated_presenter(::std::string* presenter) {
  if (presenter != NULL) {
    
  } else {
    
  }
  presenter_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), presenter,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Auth.presenter)
}
inline void AttributeContext_Auth::unsafe_arena_set_allocated_presenter(
    ::std::string* presenter) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (presenter != NULL) {
    
  } else {
    
  }
  presenter_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      presenter, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Auth.presenter)
}

// optional .google.protobuf.Struct claims = 4;
inline bool AttributeContext_Auth::has_claims() const {
  return this != internal_default_instance() && claims_ != NULL;
}
inline void AttributeContext_Auth::clear_claims() {
  if (GetArenaNoVirtual() == NULL && claims_ != NULL) delete claims_;
  claims_ = NULL;
}
inline const ::google::protobuf::Struct& AttributeContext_Auth::claims() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Auth.claims)
  return claims_ != NULL ? *claims_
                         : *::google::protobuf::Struct::internal_default_instance();
}
inline ::google::protobuf::Struct* AttributeContext_Auth::mutable_claims() {
  
  if (claims_ == NULL) {
    _slow_mutable_claims();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Auth.claims)
  return claims_;
}
inline ::google::protobuf::Struct* AttributeContext_Auth::release_claims() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Auth.claims)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_claims();
  } else {
    ::google::protobuf::Struct* temp = claims_;
    claims_ = NULL;
    return temp;
  }
}
inline  void AttributeContext_Auth::set_allocated_claims(::google::protobuf::Struct* claims) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete claims_;
  }
  if (claims != NULL) {
    _slow_set_allocated_claims(message_arena, &claims);
  }
  claims_ = claims;
  if (claims) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Auth.claims)
}

// repeated string access_levels = 5;
inline int AttributeContext_Auth::access_levels_size() const {
  return access_levels_.size();
}
inline void AttributeContext_Auth::clear_access_levels() {
  access_levels_.Clear();
}
inline const ::std::string& AttributeContext_Auth::access_levels(int index) const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Auth.access_levels)
  return access_levels_.Get(index);
}
inline ::std::string* AttributeContext_Auth::mutable_access_levels(int index) {
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Auth.access_levels)
  return access_levels_.Mutable(index);
}
inline void AttributeContext_Auth::set_access_levels(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Auth.access_levels)
  access_levels_.Mutable(index)->assign(value);
}
inline void AttributeContext_Auth::set_access_levels(int index, const char* value) {
  access_levels_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Auth.access_levels)
}
inline void AttributeContext_Auth::set_access_levels(int index, const char* value, size_t size) {
  access_levels_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Auth.access_levels)
}
inline ::std::string* AttributeContext_Auth::add_access_levels() {
  // @@protoc_insertion_point(field_add_mutable:google.rpc.context.AttributeContext.Auth.access_levels)
  return access_levels_.Add();
}
inline void AttributeContext_Auth::add_access_levels(const ::std::string& value) {
  access_levels_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.rpc.context.AttributeContext.Auth.access_levels)
}
inline void AttributeContext_Auth::add_access_levels(const char* value) {
  access_levels_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.rpc.context.AttributeContext.Auth.access_levels)
}
inline void AttributeContext_Auth::add_access_levels(const char* value, size_t size) {
  access_levels_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.rpc.context.AttributeContext.Auth.access_levels)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AttributeContext_Auth::access_levels() const {
  // @@protoc_insertion_point(field_list:google.rpc.context.AttributeContext.Auth.access_levels)
  return access_levels_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AttributeContext_Auth::mutable_access_levels() {
  // @@protoc_insertion_point(field_mutable_list:google.rpc.context.AttributeContext.Auth.access_levels)
  return &access_levels_;
}

inline const AttributeContext_Auth* AttributeContext_Auth::internal_default_instance() {
  return &AttributeContext_Auth_default_instance_.get();
}
// -------------------------------------------------------------------

// AttributeContext_Request

// optional string id = 1;
inline void AttributeContext_Request::clear_id() {
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AttributeContext_Request::id() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Request.id)
  return id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeContext_Request::set_id(const ::std::string& value) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Request.id)
}
inline void AttributeContext_Request::set_id(const char* value) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Request.id)
}
inline void AttributeContext_Request::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Request.id)
}
inline ::std::string* AttributeContext_Request::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Request.id)
  return id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Request::release_id() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Request.id)
  
  return id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Request::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Request.id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AttributeContext_Request::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Request.id)
}
inline void AttributeContext_Request::unsafe_arena_set_allocated_id(
    ::std::string* id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (id != NULL) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Request.id)
}

// optional string method = 2;
inline void AttributeContext_Request::clear_method() {
  method_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AttributeContext_Request::method() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Request.method)
  return method_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeContext_Request::set_method(const ::std::string& value) {
  
  method_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Request.method)
}
inline void AttributeContext_Request::set_method(const char* value) {
  
  method_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Request.method)
}
inline void AttributeContext_Request::set_method(const char* value,
    size_t size) {
  
  method_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Request.method)
}
inline ::std::string* AttributeContext_Request::mutable_method() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Request.method)
  return method_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Request::release_method() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Request.method)
  
  return method_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Request::unsafe_arena_release_method() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Request.method)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return method_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AttributeContext_Request::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    
  } else {
    
  }
  method_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Request.method)
}
inline void AttributeContext_Request::unsafe_arena_set_allocated_method(
    ::std::string* method) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (method != NULL) {
    
  } else {
    
  }
  method_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      method, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Request.method)
}

// map<string, string> headers = 3;
inline int AttributeContext_Request::headers_size() const {
  return headers_.size();
}
inline void AttributeContext_Request::clear_headers() {
  headers_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
AttributeContext_Request::headers() const {
  // @@protoc_insertion_point(field_map:google.rpc.context.AttributeContext.Request.headers)
  return headers_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
AttributeContext_Request::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_map:google.rpc.context.AttributeContext.Request.headers)
  return headers_.MutableMap();
}

// optional string path = 4;
inline void AttributeContext_Request::clear_path() {
  path_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AttributeContext_Request::path() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Request.path)
  return path_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeContext_Request::set_path(const ::std::string& value) {
  
  path_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Request.path)
}
inline void AttributeContext_Request::set_path(const char* value) {
  
  path_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Request.path)
}
inline void AttributeContext_Request::set_path(const char* value,
    size_t size) {
  
  path_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Request.path)
}
inline ::std::string* AttributeContext_Request::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Request.path)
  return path_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Request::release_path() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Request.path)
  
  return path_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Request::unsafe_arena_release_path() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Request.path)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return path_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AttributeContext_Request::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Request.path)
}
inline void AttributeContext_Request::unsafe_arena_set_allocated_path(
    ::std::string* path) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (path != NULL) {
    
  } else {
    
  }
  path_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      path, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Request.path)
}

// optional string host = 5;
inline void AttributeContext_Request::clear_host() {
  host_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AttributeContext_Request::host() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Request.host)
  return host_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeContext_Request::set_host(const ::std::string& value) {
  
  host_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Request.host)
}
inline void AttributeContext_Request::set_host(const char* value) {
  
  host_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Request.host)
}
inline void AttributeContext_Request::set_host(const char* value,
    size_t size) {
  
  host_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Request.host)
}
inline ::std::string* AttributeContext_Request::mutable_host() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Request.host)
  return host_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Request::release_host() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Request.host)
  
  return host_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Request::unsafe_arena_release_host() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Request.host)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return host_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AttributeContext_Request::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    
  } else {
    
  }
  host_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Request.host)
}
inline void AttributeContext_Request::unsafe_arena_set_allocated_host(
    ::std::string* host) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (host != NULL) {
    
  } else {
    
  }
  host_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      host, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Request.host)
}

// optional string scheme = 6;
inline void AttributeContext_Request::clear_scheme() {
  scheme_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AttributeContext_Request::scheme() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Request.scheme)
  return scheme_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeContext_Request::set_scheme(const ::std::string& value) {
  
  scheme_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Request.scheme)
}
inline void AttributeContext_Request::set_scheme(const char* value) {
  
  scheme_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Request.scheme)
}
inline void AttributeContext_Request::set_scheme(const char* value,
    size_t size) {
  
  scheme_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Request.scheme)
}
inline ::std::string* AttributeContext_Request::mutable_scheme() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Request.scheme)
  return scheme_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Request::release_scheme() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Request.scheme)
  
  return scheme_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Request::unsafe_arena_release_scheme() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Request.scheme)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return scheme_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AttributeContext_Request::set_allocated_scheme(::std::string* scheme) {
  if (scheme != NULL) {
    
  } else {
    
  }
  scheme_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scheme,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Request.scheme)
}
inline void AttributeContext_Request::unsafe_arena_set_allocated_scheme(
    ::std::string* scheme) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (scheme != NULL) {
    
  } else {
    
  }
  scheme_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      scheme, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Request.scheme)
}

// optional string query = 7;
inline void AttributeContext_Request::clear_query() {
  query_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AttributeContext_Request::query() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Request.query)
  return query_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeContext_Request::set_query(const ::std::string& value) {
  
  query_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Request.query)
}
inline void AttributeContext_Request::set_query(const char* value) {
  
  query_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Request.query)
}
inline void AttributeContext_Request::set_query(const char* value,
    size_t size) {
  
  query_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Request.query)
}
inline ::std::string* AttributeContext_Request::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Request.query)
  return query_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Request::release_query() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Request.query)
  
  return query_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Request::unsafe_arena_release_query() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Request.query)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return query_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AttributeContext_Request::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Request.query)
}
inline void AttributeContext_Request::unsafe_arena_set_allocated_query(
    ::std::string* query) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (query != NULL) {
    
  } else {
    
  }
  query_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      query, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Request.query)
}

// optional .google.protobuf.Timestamp time = 9;
inline bool AttributeContext_Request::has_time() const {
  return this != internal_default_instance() && time_ != NULL;
}
inline void AttributeContext_Request::clear_time() {
  if (GetArenaNoVirtual() == NULL && time_ != NULL) delete time_;
  time_ = NULL;
}
inline const ::google::protobuf::Timestamp& AttributeContext_Request::time() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Request.time)
  return time_ != NULL ? *time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* AttributeContext_Request::mutable_time() {
  
  if (time_ == NULL) {
    _slow_mutable_time();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Request.time)
  return time_;
}
inline ::google::protobuf::Timestamp* AttributeContext_Request::release_time() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Request.time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_time();
  } else {
    ::google::protobuf::Timestamp* temp = time_;
    time_ = NULL;
    return temp;
  }
}
inline  void AttributeContext_Request::set_allocated_time(::google::protobuf::Timestamp* time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete time_;
  }
  if (time != NULL) {
    _slow_set_allocated_time(message_arena, &time);
  }
  time_ = time;
  if (time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Request.time)
}

// optional int64 size = 10;
inline void AttributeContext_Request::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AttributeContext_Request::size() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Request.size)
  return size_;
}
inline void AttributeContext_Request::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Request.size)
}

// optional string protocol = 11;
inline void AttributeContext_Request::clear_protocol() {
  protocol_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AttributeContext_Request::protocol() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Request.protocol)
  return protocol_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeContext_Request::set_protocol(const ::std::string& value) {
  
  protocol_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Request.protocol)
}
inline void AttributeContext_Request::set_protocol(const char* value) {
  
  protocol_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Request.protocol)
}
inline void AttributeContext_Request::set_protocol(const char* value,
    size_t size) {
  
  protocol_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Request.protocol)
}
inline ::std::string* AttributeContext_Request::mutable_protocol() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Request.protocol)
  return protocol_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Request::release_protocol() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Request.protocol)
  
  return protocol_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Request::unsafe_arena_release_protocol() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Request.protocol)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return protocol_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AttributeContext_Request::set_allocated_protocol(::std::string* protocol) {
  if (protocol != NULL) {
    
  } else {
    
  }
  protocol_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), protocol,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Request.protocol)
}
inline void AttributeContext_Request::unsafe_arena_set_allocated_protocol(
    ::std::string* protocol) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (protocol != NULL) {
    
  } else {
    
  }
  protocol_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      protocol, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Request.protocol)
}

// optional string reason = 12;
inline void AttributeContext_Request::clear_reason() {
  reason_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AttributeContext_Request::reason() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Request.reason)
  return reason_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeContext_Request::set_reason(const ::std::string& value) {
  
  reason_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Request.reason)
}
inline void AttributeContext_Request::set_reason(const char* value) {
  
  reason_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Request.reason)
}
inline void AttributeContext_Request::set_reason(const char* value,
    size_t size) {
  
  reason_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Request.reason)
}
inline ::std::string* AttributeContext_Request::mutable_reason() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Request.reason)
  return reason_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Request::release_reason() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Request.reason)
  
  return reason_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Request::unsafe_arena_release_reason() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Request.reason)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return reason_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AttributeContext_Request::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    
  } else {
    
  }
  reason_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Request.reason)
}
inline void AttributeContext_Request::unsafe_arena_set_allocated_reason(
    ::std::string* reason) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reason != NULL) {
    
  } else {
    
  }
  reason_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reason, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Request.reason)
}

// optional .google.rpc.context.AttributeContext.Auth auth = 13;
inline bool AttributeContext_Request::has_auth() const {
  return this != internal_default_instance() && auth_ != NULL;
}
inline void AttributeContext_Request::clear_auth() {
  if (GetArenaNoVirtual() == NULL && auth_ != NULL) delete auth_;
  auth_ = NULL;
}
inline const ::google::rpc::context::AttributeContext_Auth& AttributeContext_Request::auth() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Request.auth)
  return auth_ != NULL ? *auth_
                         : *::google::rpc::context::AttributeContext_Auth::internal_default_instance();
}
inline ::google::rpc::context::AttributeContext_Auth* AttributeContext_Request::mutable_auth() {
  
  if (auth_ == NULL) {
    _slow_mutable_auth();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Request.auth)
  return auth_;
}
inline ::google::rpc::context::AttributeContext_Auth* AttributeContext_Request::release_auth() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Request.auth)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_auth();
  } else {
    ::google::rpc::context::AttributeContext_Auth* temp = auth_;
    auth_ = NULL;
    return temp;
  }
}
inline  void AttributeContext_Request::set_allocated_auth(::google::rpc::context::AttributeContext_Auth* auth) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete auth_;
  }
  if (auth != NULL) {
    _slow_set_allocated_auth(message_arena, &auth);
  }
  auth_ = auth;
  if (auth) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Request.auth)
}

inline const AttributeContext_Request* AttributeContext_Request::internal_default_instance() {
  return &AttributeContext_Request_default_instance_.get();
}
// -------------------------------------------------------------------

// AttributeContext_Response

// optional int64 code = 1;
inline void AttributeContext_Response::clear_code() {
  code_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AttributeContext_Response::code() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Response.code)
  return code_;
}
inline void AttributeContext_Response::set_code(::google::protobuf::int64 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Response.code)
}

// optional int64 size = 2;
inline void AttributeContext_Response::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AttributeContext_Response::size() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Response.size)
  return size_;
}
inline void AttributeContext_Response::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Response.size)
}

// map<string, string> headers = 3;
inline int AttributeContext_Response::headers_size() const {
  return headers_.size();
}
inline void AttributeContext_Response::clear_headers() {
  headers_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
AttributeContext_Response::headers() const {
  // @@protoc_insertion_point(field_map:google.rpc.context.AttributeContext.Response.headers)
  return headers_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
AttributeContext_Response::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_map:google.rpc.context.AttributeContext.Response.headers)
  return headers_.MutableMap();
}

// optional .google.protobuf.Timestamp time = 4;
inline bool AttributeContext_Response::has_time() const {
  return this != internal_default_instance() && time_ != NULL;
}
inline void AttributeContext_Response::clear_time() {
  if (GetArenaNoVirtual() == NULL && time_ != NULL) delete time_;
  time_ = NULL;
}
inline const ::google::protobuf::Timestamp& AttributeContext_Response::time() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Response.time)
  return time_ != NULL ? *time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* AttributeContext_Response::mutable_time() {
  
  if (time_ == NULL) {
    _slow_mutable_time();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Response.time)
  return time_;
}
inline ::google::protobuf::Timestamp* AttributeContext_Response::release_time() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Response.time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_time();
  } else {
    ::google::protobuf::Timestamp* temp = time_;
    time_ = NULL;
    return temp;
  }
}
inline  void AttributeContext_Response::set_allocated_time(::google::protobuf::Timestamp* time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete time_;
  }
  if (time != NULL) {
    _slow_set_allocated_time(message_arena, &time);
  }
  time_ = time;
  if (time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Response.time)
}

// optional .google.protobuf.Duration backend_latency = 5;
inline bool AttributeContext_Response::has_backend_latency() const {
  return this != internal_default_instance() && backend_latency_ != NULL;
}
inline void AttributeContext_Response::clear_backend_latency() {
  if (GetArenaNoVirtual() == NULL && backend_latency_ != NULL) delete backend_latency_;
  backend_latency_ = NULL;
}
inline const ::google::protobuf::Duration& AttributeContext_Response::backend_latency() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Response.backend_latency)
  return backend_latency_ != NULL ? *backend_latency_
                         : *::google::protobuf::Duration::internal_default_instance();
}
inline ::google::protobuf::Duration* AttributeContext_Response::mutable_backend_latency() {
  
  if (backend_latency_ == NULL) {
    _slow_mutable_backend_latency();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Response.backend_latency)
  return backend_latency_;
}
inline ::google::protobuf::Duration* AttributeContext_Response::release_backend_latency() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Response.backend_latency)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_backend_latency();
  } else {
    ::google::protobuf::Duration* temp = backend_latency_;
    backend_latency_ = NULL;
    return temp;
  }
}
inline  void AttributeContext_Response::set_allocated_backend_latency(::google::protobuf::Duration* backend_latency) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete backend_latency_;
  }
  if (backend_latency != NULL) {
    _slow_set_allocated_backend_latency(message_arena, &backend_latency);
  }
  backend_latency_ = backend_latency;
  if (backend_latency) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Response.backend_latency)
}

inline const AttributeContext_Response* AttributeContext_Response::internal_default_instance() {
  return &AttributeContext_Response_default_instance_.get();
}
// -------------------------------------------------------------------

// AttributeContext_Resource

// optional string service = 1;
inline void AttributeContext_Resource::clear_service() {
  service_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AttributeContext_Resource::service() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Resource.service)
  return service_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeContext_Resource::set_service(const ::std::string& value) {
  
  service_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Resource.service)
}
inline void AttributeContext_Resource::set_service(const char* value) {
  
  service_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Resource.service)
}
inline void AttributeContext_Resource::set_service(const char* value,
    size_t size) {
  
  service_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Resource.service)
}
inline ::std::string* AttributeContext_Resource::mutable_service() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Resource.service)
  return service_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Resource::release_service() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Resource.service)
  
  return service_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Resource::unsafe_arena_release_service() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Resource.service)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return service_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AttributeContext_Resource::set_allocated_service(::std::string* service) {
  if (service != NULL) {
    
  } else {
    
  }
  service_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Resource.service)
}
inline void AttributeContext_Resource::unsafe_arena_set_allocated_service(
    ::std::string* service) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (service != NULL) {
    
  } else {
    
  }
  service_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      service, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Resource.service)
}

// optional string name = 2;
inline void AttributeContext_Resource::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AttributeContext_Resource::name() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Resource.name)
  return name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeContext_Resource::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Resource.name)
}
inline void AttributeContext_Resource::set_name(const char* value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Resource.name)
}
inline void AttributeContext_Resource::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Resource.name)
}
inline ::std::string* AttributeContext_Resource::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Resource.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Resource::release_name() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Resource.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Resource::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Resource.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AttributeContext_Resource::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Resource.name)
}
inline void AttributeContext_Resource::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Resource.name)
}

// optional string type = 3;
inline void AttributeContext_Resource::clear_type() {
  type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AttributeContext_Resource::type() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Resource.type)
  return type_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeContext_Resource::set_type(const ::std::string& value) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Resource.type)
}
inline void AttributeContext_Resource::set_type(const char* value) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Resource.type)
}
inline void AttributeContext_Resource::set_type(const char* value,
    size_t size) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Resource.type)
}
inline ::std::string* AttributeContext_Resource::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Resource.type)
  return type_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Resource::release_type() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Resource.type)
  
  return type_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Resource::unsafe_arena_release_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Resource.type)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return type_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AttributeContext_Resource::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Resource.type)
}
inline void AttributeContext_Resource::unsafe_arena_set_allocated_type(
    ::std::string* type) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (type != NULL) {
    
  } else {
    
  }
  type_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      type, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Resource.type)
}

// map<string, string> labels = 4;
inline int AttributeContext_Resource::labels_size() const {
  return labels_.size();
}
inline void AttributeContext_Resource::clear_labels() {
  labels_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
AttributeContext_Resource::labels() const {
  // @@protoc_insertion_point(field_map:google.rpc.context.AttributeContext.Resource.labels)
  return labels_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
AttributeContext_Resource::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.rpc.context.AttributeContext.Resource.labels)
  return labels_.MutableMap();
}

// optional string uid = 5;
inline void AttributeContext_Resource::clear_uid() {
  uid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AttributeContext_Resource::uid() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Resource.uid)
  return uid_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeContext_Resource::set_uid(const ::std::string& value) {
  
  uid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Resource.uid)
}
inline void AttributeContext_Resource::set_uid(const char* value) {
  
  uid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Resource.uid)
}
inline void AttributeContext_Resource::set_uid(const char* value,
    size_t size) {
  
  uid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Resource.uid)
}
inline ::std::string* AttributeContext_Resource::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Resource.uid)
  return uid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Resource::release_uid() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Resource.uid)
  
  return uid_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Resource::unsafe_arena_release_uid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Resource.uid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return uid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AttributeContext_Resource::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Resource.uid)
}
inline void AttributeContext_Resource::unsafe_arena_set_allocated_uid(
    ::std::string* uid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      uid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Resource.uid)
}

// map<string, string> annotations = 6;
inline int AttributeContext_Resource::annotations_size() const {
  return annotations_.size();
}
inline void AttributeContext_Resource::clear_annotations() {
  annotations_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
AttributeContext_Resource::annotations() const {
  // @@protoc_insertion_point(field_map:google.rpc.context.AttributeContext.Resource.annotations)
  return annotations_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
AttributeContext_Resource::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_map:google.rpc.context.AttributeContext.Resource.annotations)
  return annotations_.MutableMap();
}

// optional string display_name = 7;
inline void AttributeContext_Resource::clear_display_name() {
  display_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AttributeContext_Resource::display_name() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Resource.display_name)
  return display_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeContext_Resource::set_display_name(const ::std::string& value) {
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Resource.display_name)
}
inline void AttributeContext_Resource::set_display_name(const char* value) {
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Resource.display_name)
}
inline void AttributeContext_Resource::set_display_name(const char* value,
    size_t size) {
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Resource.display_name)
}
inline ::std::string* AttributeContext_Resource::mutable_display_name() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Resource.display_name)
  return display_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Resource::release_display_name() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Resource.display_name)
  
  return display_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Resource::unsafe_arena_release_display_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Resource.display_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return display_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AttributeContext_Resource::set_allocated_display_name(::std::string* display_name) {
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Resource.display_name)
}
inline void AttributeContext_Resource::unsafe_arena_set_allocated_display_name(
    ::std::string* display_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      display_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Resource.display_name)
}

// optional .google.protobuf.Timestamp create_time = 8;
inline bool AttributeContext_Resource::has_create_time() const {
  return this != internal_default_instance() && create_time_ != NULL;
}
inline void AttributeContext_Resource::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) delete create_time_;
  create_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& AttributeContext_Resource::create_time() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Resource.create_time)
  return create_time_ != NULL ? *create_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* AttributeContext_Resource::mutable_create_time() {
  
  if (create_time_ == NULL) {
    _slow_mutable_create_time();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Resource.create_time)
  return create_time_;
}
inline ::google::protobuf::Timestamp* AttributeContext_Resource::release_create_time() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Resource.create_time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_create_time();
  } else {
    ::google::protobuf::Timestamp* temp = create_time_;
    create_time_ = NULL;
    return temp;
  }
}
inline  void AttributeContext_Resource::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete create_time_;
  }
  if (create_time != NULL) {
    _slow_set_allocated_create_time(message_arena, &create_time);
  }
  create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Resource.create_time)
}

// optional .google.protobuf.Timestamp update_time = 9;
inline bool AttributeContext_Resource::has_update_time() const {
  return this != internal_default_instance() && update_time_ != NULL;
}
inline void AttributeContext_Resource::clear_update_time() {
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) delete update_time_;
  update_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& AttributeContext_Resource::update_time() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Resource.update_time)
  return update_time_ != NULL ? *update_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* AttributeContext_Resource::mutable_update_time() {
  
  if (update_time_ == NULL) {
    _slow_mutable_update_time();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Resource.update_time)
  return update_time_;
}
inline ::google::protobuf::Timestamp* AttributeContext_Resource::release_update_time() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Resource.update_time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_update_time();
  } else {
    ::google::protobuf::Timestamp* temp = update_time_;
    update_time_ = NULL;
    return temp;
  }
}
inline  void AttributeContext_Resource::set_allocated_update_time(::google::protobuf::Timestamp* update_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete update_time_;
  }
  if (update_time != NULL) {
    _slow_set_allocated_update_time(message_arena, &update_time);
  }
  update_time_ = update_time;
  if (update_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Resource.update_time)
}

// optional .google.protobuf.Timestamp delete_time = 10;
inline bool AttributeContext_Resource::has_delete_time() const {
  return this != internal_default_instance() && delete_time_ != NULL;
}
inline void AttributeContext_Resource::clear_delete_time() {
  if (GetArenaNoVirtual() == NULL && delete_time_ != NULL) delete delete_time_;
  delete_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& AttributeContext_Resource::delete_time() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Resource.delete_time)
  return delete_time_ != NULL ? *delete_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* AttributeContext_Resource::mutable_delete_time() {
  
  if (delete_time_ == NULL) {
    _slow_mutable_delete_time();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Resource.delete_time)
  return delete_time_;
}
inline ::google::protobuf::Timestamp* AttributeContext_Resource::release_delete_time() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Resource.delete_time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_delete_time();
  } else {
    ::google::protobuf::Timestamp* temp = delete_time_;
    delete_time_ = NULL;
    return temp;
  }
}
inline  void AttributeContext_Resource::set_allocated_delete_time(::google::protobuf::Timestamp* delete_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete delete_time_;
  }
  if (delete_time != NULL) {
    _slow_set_allocated_delete_time(message_arena, &delete_time);
  }
  delete_time_ = delete_time;
  if (delete_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Resource.delete_time)
}

// optional string etag = 11;
inline void AttributeContext_Resource::clear_etag() {
  etag_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AttributeContext_Resource::etag() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Resource.etag)
  return etag_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeContext_Resource::set_etag(const ::std::string& value) {
  
  etag_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Resource.etag)
}
inline void AttributeContext_Resource::set_etag(const char* value) {
  
  etag_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Resource.etag)
}
inline void AttributeContext_Resource::set_etag(const char* value,
    size_t size) {
  
  etag_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Resource.etag)
}
inline ::std::string* AttributeContext_Resource::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Resource.etag)
  return etag_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Resource::release_etag() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Resource.etag)
  
  return etag_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Resource::unsafe_arena_release_etag() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Resource.etag)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return etag_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AttributeContext_Resource::set_allocated_etag(::std::string* etag) {
  if (etag != NULL) {
    
  } else {
    
  }
  etag_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Resource.etag)
}
inline void AttributeContext_Resource::unsafe_arena_set_allocated_etag(
    ::std::string* etag) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (etag != NULL) {
    
  } else {
    
  }
  etag_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      etag, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Resource.etag)
}

// optional string location = 12;
inline void AttributeContext_Resource::clear_location() {
  location_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AttributeContext_Resource::location() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Resource.location)
  return location_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeContext_Resource::set_location(const ::std::string& value) {
  
  location_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Resource.location)
}
inline void AttributeContext_Resource::set_location(const char* value) {
  
  location_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Resource.location)
}
inline void AttributeContext_Resource::set_location(const char* value,
    size_t size) {
  
  location_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Resource.location)
}
inline ::std::string* AttributeContext_Resource::mutable_location() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Resource.location)
  return location_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Resource::release_location() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Resource.location)
  
  return location_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AttributeContext_Resource::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Resource.location)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return location_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AttributeContext_Resource::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    
  } else {
    
  }
  location_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Resource.location)
}
inline void AttributeContext_Resource::unsafe_arena_set_allocated_location(
    ::std::string* location) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (location != NULL) {
    
  } else {
    
  }
  location_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      location, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Resource.location)
}

inline const AttributeContext_Resource* AttributeContext_Resource::internal_default_instance() {
  return &AttributeContext_Resource_default_instance_.get();
}
// -------------------------------------------------------------------

// AttributeContext

// optional .google.rpc.context.AttributeContext.Peer origin = 7;
inline bool AttributeContext::has_origin() const {
  return this != internal_default_instance() && origin_ != NULL;
}
inline void AttributeContext::clear_origin() {
  if (GetArenaNoVirtual() == NULL && origin_ != NULL) delete origin_;
  origin_ = NULL;
}
inline const ::google::rpc::context::AttributeContext_Peer& AttributeContext::origin() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.origin)
  return origin_ != NULL ? *origin_
                         : *::google::rpc::context::AttributeContext_Peer::internal_default_instance();
}
inline ::google::rpc::context::AttributeContext_Peer* AttributeContext::mutable_origin() {
  
  if (origin_ == NULL) {
    _slow_mutable_origin();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.origin)
  return origin_;
}
inline ::google::rpc::context::AttributeContext_Peer* AttributeContext::release_origin() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.origin)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_origin();
  } else {
    ::google::rpc::context::AttributeContext_Peer* temp = origin_;
    origin_ = NULL;
    return temp;
  }
}
inline  void AttributeContext::set_allocated_origin(::google::rpc::context::AttributeContext_Peer* origin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete origin_;
  }
  if (origin != NULL) {
    _slow_set_allocated_origin(message_arena, &origin);
  }
  origin_ = origin;
  if (origin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.origin)
}

// optional .google.rpc.context.AttributeContext.Peer source = 1;
inline bool AttributeContext::has_source() const {
  return this != internal_default_instance() && source_ != NULL;
}
inline void AttributeContext::clear_source() {
  if (GetArenaNoVirtual() == NULL && source_ != NULL) delete source_;
  source_ = NULL;
}
inline const ::google::rpc::context::AttributeContext_Peer& AttributeContext::source() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.source)
  return source_ != NULL ? *source_
                         : *::google::rpc::context::AttributeContext_Peer::internal_default_instance();
}
inline ::google::rpc::context::AttributeContext_Peer* AttributeContext::mutable_source() {
  
  if (source_ == NULL) {
    _slow_mutable_source();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.source)
  return source_;
}
inline ::google::rpc::context::AttributeContext_Peer* AttributeContext::release_source() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.source)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_source();
  } else {
    ::google::rpc::context::AttributeContext_Peer* temp = source_;
    source_ = NULL;
    return temp;
  }
}
inline  void AttributeContext::set_allocated_source(::google::rpc::context::AttributeContext_Peer* source) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete source_;
  }
  if (source != NULL) {
    _slow_set_allocated_source(message_arena, &source);
  }
  source_ = source;
  if (source) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.source)
}

// optional .google.rpc.context.AttributeContext.Peer destination = 2;
inline bool AttributeContext::has_destination() const {
  return this != internal_default_instance() && destination_ != NULL;
}
inline void AttributeContext::clear_destination() {
  if (GetArenaNoVirtual() == NULL && destination_ != NULL) delete destination_;
  destination_ = NULL;
}
inline const ::google::rpc::context::AttributeContext_Peer& AttributeContext::destination() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.destination)
  return destination_ != NULL ? *destination_
                         : *::google::rpc::context::AttributeContext_Peer::internal_default_instance();
}
inline ::google::rpc::context::AttributeContext_Peer* AttributeContext::mutable_destination() {
  
  if (destination_ == NULL) {
    _slow_mutable_destination();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.destination)
  return destination_;
}
inline ::google::rpc::context::AttributeContext_Peer* AttributeContext::release_destination() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.destination)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_destination();
  } else {
    ::google::rpc::context::AttributeContext_Peer* temp = destination_;
    destination_ = NULL;
    return temp;
  }
}
inline  void AttributeContext::set_allocated_destination(::google::rpc::context::AttributeContext_Peer* destination) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete destination_;
  }
  if (destination != NULL) {
    _slow_set_allocated_destination(message_arena, &destination);
  }
  destination_ = destination;
  if (destination) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.destination)
}

// optional .google.rpc.context.AttributeContext.Request request = 3;
inline bool AttributeContext::has_request() const {
  return this != internal_default_instance() && request_ != NULL;
}
inline void AttributeContext::clear_request() {
  if (GetArenaNoVirtual() == NULL && request_ != NULL) delete request_;
  request_ = NULL;
}
inline const ::google::rpc::context::AttributeContext_Request& AttributeContext::request() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.request)
  return request_ != NULL ? *request_
                         : *::google::rpc::context::AttributeContext_Request::internal_default_instance();
}
inline ::google::rpc::context::AttributeContext_Request* AttributeContext::mutable_request() {
  
  if (request_ == NULL) {
    _slow_mutable_request();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.request)
  return request_;
}
inline ::google::rpc::context::AttributeContext_Request* AttributeContext::release_request() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.request)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_request();
  } else {
    ::google::rpc::context::AttributeContext_Request* temp = request_;
    request_ = NULL;
    return temp;
  }
}
inline  void AttributeContext::set_allocated_request(::google::rpc::context::AttributeContext_Request* request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete request_;
  }
  if (request != NULL) {
    _slow_set_allocated_request(message_arena, &request);
  }
  request_ = request;
  if (request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.request)
}

// optional .google.rpc.context.AttributeContext.Response response = 4;
inline bool AttributeContext::has_response() const {
  return this != internal_default_instance() && response_ != NULL;
}
inline void AttributeContext::clear_response() {
  if (GetArenaNoVirtual() == NULL && response_ != NULL) delete response_;
  response_ = NULL;
}
inline const ::google::rpc::context::AttributeContext_Response& AttributeContext::response() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.response)
  return response_ != NULL ? *response_
                         : *::google::rpc::context::AttributeContext_Response::internal_default_instance();
}
inline ::google::rpc::context::AttributeContext_Response* AttributeContext::mutable_response() {
  
  if (response_ == NULL) {
    _slow_mutable_response();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.response)
  return response_;
}
inline ::google::rpc::context::AttributeContext_Response* AttributeContext::release_response() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.response)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_response();
  } else {
    ::google::rpc::context::AttributeContext_Response* temp = response_;
    response_ = NULL;
    return temp;
  }
}
inline  void AttributeContext::set_allocated_response(::google::rpc::context::AttributeContext_Response* response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete response_;
  }
  if (response != NULL) {
    _slow_set_allocated_response(message_arena, &response);
  }
  response_ = response;
  if (response) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.response)
}

// optional .google.rpc.context.AttributeContext.Resource resource = 5;
inline bool AttributeContext::has_resource() const {
  return this != internal_default_instance() && resource_ != NULL;
}
inline void AttributeContext::clear_resource() {
  if (GetArenaNoVirtual() == NULL && resource_ != NULL) delete resource_;
  resource_ = NULL;
}
inline const ::google::rpc::context::AttributeContext_Resource& AttributeContext::resource() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.resource)
  return resource_ != NULL ? *resource_
                         : *::google::rpc::context::AttributeContext_Resource::internal_default_instance();
}
inline ::google::rpc::context::AttributeContext_Resource* AttributeContext::mutable_resource() {
  
  if (resource_ == NULL) {
    _slow_mutable_resource();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.resource)
  return resource_;
}
inline ::google::rpc::context::AttributeContext_Resource* AttributeContext::release_resource() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.resource)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_resource();
  } else {
    ::google::rpc::context::AttributeContext_Resource* temp = resource_;
    resource_ = NULL;
    return temp;
  }
}
inline  void AttributeContext::set_allocated_resource(::google::rpc::context::AttributeContext_Resource* resource) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete resource_;
  }
  if (resource != NULL) {
    _slow_set_allocated_resource(message_arena, &resource);
  }
  resource_ = resource;
  if (resource) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.resource)
}

// optional .google.rpc.context.AttributeContext.Api api = 6;
inline bool AttributeContext::has_api() const {
  return this != internal_default_instance() && api_ != NULL;
}
inline void AttributeContext::clear_api() {
  if (GetArenaNoVirtual() == NULL && api_ != NULL) delete api_;
  api_ = NULL;
}
inline const ::google::rpc::context::AttributeContext_Api& AttributeContext::api() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.api)
  return api_ != NULL ? *api_
                         : *::google::rpc::context::AttributeContext_Api::internal_default_instance();
}
inline ::google::rpc::context::AttributeContext_Api* AttributeContext::mutable_api() {
  
  if (api_ == NULL) {
    _slow_mutable_api();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.api)
  return api_;
}
inline ::google::rpc::context::AttributeContext_Api* AttributeContext::release_api() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.api)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_api();
  } else {
    ::google::rpc::context::AttributeContext_Api* temp = api_;
    api_ = NULL;
    return temp;
  }
}
inline  void AttributeContext::set_allocated_api(::google::rpc::context::AttributeContext_Api* api) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete api_;
  }
  if (api != NULL) {
    _slow_set_allocated_api(message_arena, &api);
  }
  api_ = api;
  if (api) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.api)
}

// repeated .google.protobuf.Any extensions = 8;
inline int AttributeContext::extensions_size() const {
  return extensions_.size();
}
inline void AttributeContext::clear_extensions() {
  extensions_.Clear();
}
inline const ::google::protobuf::Any& AttributeContext::extensions(int index) const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.extensions)
  return extensions_.Get(index);
}
inline ::google::protobuf::Any* AttributeContext::mutable_extensions(int index) {
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.extensions)
  return extensions_.Mutable(index);
}
inline ::google::protobuf::Any* AttributeContext::add_extensions() {
  // @@protoc_insertion_point(field_add:google.rpc.context.AttributeContext.extensions)
  return extensions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
AttributeContext::mutable_extensions() {
  // @@protoc_insertion_point(field_mutable_list:google.rpc.context.AttributeContext.extensions)
  return &extensions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
AttributeContext::extensions() const {
  // @@protoc_insertion_point(field_list:google.rpc.context.AttributeContext.extensions)
  return extensions_;
}

inline const AttributeContext* AttributeContext::internal_default_instance() {
  return &AttributeContext_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace context
}  // namespace rpc
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto__INCLUDED
