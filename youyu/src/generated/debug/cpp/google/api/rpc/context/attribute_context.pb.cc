// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/rpc/context/attribute_context.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/api/rpc/context/attribute_context.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace rpc {
namespace context {

namespace {

const ::google::protobuf::Descriptor* AttributeContext_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AttributeContext_reflection_ = NULL;
const ::google::protobuf::Descriptor* AttributeContext_Peer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AttributeContext_Peer_reflection_ = NULL;
const ::google::protobuf::Descriptor* AttributeContext_Peer_LabelsEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* AttributeContext_Api_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AttributeContext_Api_reflection_ = NULL;
const ::google::protobuf::Descriptor* AttributeContext_Auth_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AttributeContext_Auth_reflection_ = NULL;
const ::google::protobuf::Descriptor* AttributeContext_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AttributeContext_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* AttributeContext_Request_HeadersEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* AttributeContext_Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AttributeContext_Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* AttributeContext_Response_HeadersEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* AttributeContext_Resource_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AttributeContext_Resource_reflection_ = NULL;
const ::google::protobuf::Descriptor* AttributeContext_Resource_LabelsEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* AttributeContext_Resource_AnnotationsEntry_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto() {
  protobuf_AddDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/api/rpc/context/attribute_context.proto");
  GOOGLE_CHECK(file != NULL);
  AttributeContext_descriptor_ = file->message_type(0);
  static const int AttributeContext_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext, origin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext, destination_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext, request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext, response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext, resource_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext, api_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext, extensions_),
  };
  AttributeContext_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AttributeContext_descriptor_,
      AttributeContext::internal_default_instance(),
      AttributeContext_offsets_,
      -1,
      -1,
      -1,
      sizeof(AttributeContext),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext, _internal_metadata_));
  AttributeContext_Peer_descriptor_ = AttributeContext_descriptor_->nested_type(0);
  static const int AttributeContext_Peer_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Peer, ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Peer, port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Peer, labels_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Peer, principal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Peer, region_code_),
  };
  AttributeContext_Peer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AttributeContext_Peer_descriptor_,
      AttributeContext_Peer::internal_default_instance(),
      AttributeContext_Peer_offsets_,
      -1,
      -1,
      -1,
      sizeof(AttributeContext_Peer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Peer, _internal_metadata_));
  AttributeContext_Peer_LabelsEntry_descriptor_ = AttributeContext_Peer_descriptor_->nested_type(0);
  AttributeContext_Api_descriptor_ = AttributeContext_descriptor_->nested_type(1);
  static const int AttributeContext_Api_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Api, service_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Api, operation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Api, protocol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Api, version_),
  };
  AttributeContext_Api_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AttributeContext_Api_descriptor_,
      AttributeContext_Api::internal_default_instance(),
      AttributeContext_Api_offsets_,
      -1,
      -1,
      -1,
      sizeof(AttributeContext_Api),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Api, _internal_metadata_));
  AttributeContext_Auth_descriptor_ = AttributeContext_descriptor_->nested_type(2);
  static const int AttributeContext_Auth_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Auth, principal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Auth, audiences_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Auth, presenter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Auth, claims_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Auth, access_levels_),
  };
  AttributeContext_Auth_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AttributeContext_Auth_descriptor_,
      AttributeContext_Auth::internal_default_instance(),
      AttributeContext_Auth_offsets_,
      -1,
      -1,
      -1,
      sizeof(AttributeContext_Auth),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Auth, _internal_metadata_));
  AttributeContext_Request_descriptor_ = AttributeContext_descriptor_->nested_type(3);
  static const int AttributeContext_Request_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Request, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Request, method_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Request, headers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Request, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Request, host_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Request, scheme_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Request, query_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Request, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Request, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Request, protocol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Request, reason_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Request, auth_),
  };
  AttributeContext_Request_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AttributeContext_Request_descriptor_,
      AttributeContext_Request::internal_default_instance(),
      AttributeContext_Request_offsets_,
      -1,
      -1,
      -1,
      sizeof(AttributeContext_Request),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Request, _internal_metadata_));
  AttributeContext_Request_HeadersEntry_descriptor_ = AttributeContext_Request_descriptor_->nested_type(0);
  AttributeContext_Response_descriptor_ = AttributeContext_descriptor_->nested_type(4);
  static const int AttributeContext_Response_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Response, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Response, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Response, headers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Response, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Response, backend_latency_),
  };
  AttributeContext_Response_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AttributeContext_Response_descriptor_,
      AttributeContext_Response::internal_default_instance(),
      AttributeContext_Response_offsets_,
      -1,
      -1,
      -1,
      sizeof(AttributeContext_Response),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Response, _internal_metadata_));
  AttributeContext_Response_HeadersEntry_descriptor_ = AttributeContext_Response_descriptor_->nested_type(0);
  AttributeContext_Resource_descriptor_ = AttributeContext_descriptor_->nested_type(5);
  static const int AttributeContext_Resource_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Resource, service_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Resource, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Resource, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Resource, labels_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Resource, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Resource, annotations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Resource, display_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Resource, create_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Resource, update_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Resource, delete_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Resource, etag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Resource, location_),
  };
  AttributeContext_Resource_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AttributeContext_Resource_descriptor_,
      AttributeContext_Resource::internal_default_instance(),
      AttributeContext_Resource_offsets_,
      -1,
      -1,
      -1,
      sizeof(AttributeContext_Resource),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeContext_Resource, _internal_metadata_));
  AttributeContext_Resource_LabelsEntry_descriptor_ = AttributeContext_Resource_descriptor_->nested_type(0);
  AttributeContext_Resource_AnnotationsEntry_descriptor_ = AttributeContext_Resource_descriptor_->nested_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AttributeContext_descriptor_, AttributeContext::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AttributeContext_Peer_descriptor_, AttributeContext_Peer::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        AttributeContext_Peer_LabelsEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                AttributeContext_Peer_LabelsEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AttributeContext_Api_descriptor_, AttributeContext_Api::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AttributeContext_Auth_descriptor_, AttributeContext_Auth::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AttributeContext_Request_descriptor_, AttributeContext_Request::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        AttributeContext_Request_HeadersEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                AttributeContext_Request_HeadersEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AttributeContext_Response_descriptor_, AttributeContext_Response::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        AttributeContext_Response_HeadersEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                AttributeContext_Response_HeadersEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AttributeContext_Resource_descriptor_, AttributeContext_Resource::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        AttributeContext_Resource_LabelsEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                AttributeContext_Resource_LabelsEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        AttributeContext_Resource_AnnotationsEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                AttributeContext_Resource_AnnotationsEntry_descriptor_));
}

}  // namespace

void protobuf_ShutdownFile_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto() {
  AttributeContext_default_instance_.Shutdown();
  delete AttributeContext_reflection_;
  AttributeContext_Peer_default_instance_.Shutdown();
  delete AttributeContext_Peer_reflection_;
  AttributeContext_Api_default_instance_.Shutdown();
  delete AttributeContext_Api_reflection_;
  AttributeContext_Auth_default_instance_.Shutdown();
  delete AttributeContext_Auth_reflection_;
  AttributeContext_Request_default_instance_.Shutdown();
  delete AttributeContext_Request_reflection_;
  AttributeContext_Response_default_instance_.Shutdown();
  delete AttributeContext_Response_reflection_;
  AttributeContext_Resource_default_instance_.Shutdown();
  delete AttributeContext_Resource_reflection_;
}

void protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fduration_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fstruct_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2ftimestamp_2eproto();
  AttributeContext_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AttributeContext_Peer_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ::google::protobuf::internal::GetEmptyString();
  AttributeContext_Api_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AttributeContext_Auth_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AttributeContext_Request_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ::google::protobuf::internal::GetEmptyString();
  AttributeContext_Response_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AttributeContext_Resource_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AttributeContext_default_instance_.get_mutable()->InitAsDefaultInstance();
  AttributeContext_Peer_default_instance_.get_mutable()->InitAsDefaultInstance();
  AttributeContext_Api_default_instance_.get_mutable()->InitAsDefaultInstance();
  AttributeContext_Auth_default_instance_.get_mutable()->InitAsDefaultInstance();
  AttributeContext_Request_default_instance_.get_mutable()->InitAsDefaultInstance();
  AttributeContext_Response_default_instance_.get_mutable()->InitAsDefaultInstance();
  AttributeContext_Resource_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto_once_);
void protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto_once_,
                 &protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto_impl);
}
void protobuf_AddDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n.google/api/rpc/context/attribute_conte"
    "xt.proto\022\022google.rpc.context\032\031google/pro"
    "tobuf/any.proto\032\036google/protobuf/duratio"
    "n.proto\032\034google/protobuf/struct.proto\032\037g"
    "oogle/protobuf/timestamp.proto\"\203\020\n\020Attri"
    "buteContext\0229\n\006origin\030\007 \001(\0132).google.rpc"
    ".context.AttributeContext.Peer\0229\n\006source"
    "\030\001 \001(\0132).google.rpc.context.AttributeCon"
    "text.Peer\022>\n\013destination\030\002 \001(\0132).google."
    "rpc.context.AttributeContext.Peer\022=\n\007req"
    "uest\030\003 \001(\0132,.google.rpc.context.Attribut"
    "eContext.Request\022\?\n\010response\030\004 \001(\0132-.goo"
    "gle.rpc.context.AttributeContext.Respons"
    "e\022\?\n\010resource\030\005 \001(\0132-.google.rpc.context"
    ".AttributeContext.Resource\0225\n\003api\030\006 \001(\0132"
    "(.google.rpc.context.AttributeContext.Ap"
    "i\022(\n\nextensions\030\010 \003(\0132\024.google.protobuf."
    "Any\032\276\001\n\004Peer\022\n\n\002ip\030\001 \001(\t\022\014\n\004port\030\002 \001(\003\022E"
    "\n\006labels\030\006 \003(\01325.google.rpc.context.Attr"
    "ibuteContext.Peer.LabelsEntry\022\021\n\tprincip"
    "al\030\007 \001(\t\022\023\n\013region_code\030\010 \001(\t\032-\n\013LabelsE"
    "ntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032L\n\003"
    "Api\022\017\n\007service\030\001 \001(\t\022\021\n\toperation\030\002 \001(\t\022"
    "\020\n\010protocol\030\003 \001(\t\022\017\n\007version\030\004 \001(\t\032\177\n\004Au"
    "th\022\021\n\tprincipal\030\001 \001(\t\022\021\n\taudiences\030\002 \003(\t"
    "\022\021\n\tpresenter\030\003 \001(\t\022\'\n\006claims\030\004 \001(\0132\027.go"
    "ogle.protobuf.Struct\022\025\n\raccess_levels\030\005 "
    "\003(\t\032\357\002\n\007Request\022\n\n\002id\030\001 \001(\t\022\016\n\006method\030\002 "
    "\001(\t\022J\n\007headers\030\003 \003(\01329.google.rpc.contex"
    "t.AttributeContext.Request.HeadersEntry\022"
    "\014\n\004path\030\004 \001(\t\022\014\n\004host\030\005 \001(\t\022\016\n\006scheme\030\006 "
    "\001(\t\022\r\n\005query\030\007 \001(\t\022(\n\004time\030\t \001(\0132\032.googl"
    "e.protobuf.Timestamp\022\014\n\004size\030\n \001(\003\022\020\n\010pr"
    "otocol\030\013 \001(\t\022\016\n\006reason\030\014 \001(\t\0227\n\004auth\030\r \001"
    "(\0132).google.rpc.context.AttributeContext"
    ".Auth\032.\n\014HeadersEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
    "lue\030\002 \001(\t:\0028\001\032\201\002\n\010Response\022\014\n\004code\030\001 \001(\003"
    "\022\014\n\004size\030\002 \001(\003\022K\n\007headers\030\003 \003(\0132:.google"
    ".rpc.context.AttributeContext.Response.H"
    "eadersEntry\022(\n\004time\030\004 \001(\0132\032.google.proto"
    "buf.Timestamp\0222\n\017backend_latency\030\005 \001(\0132\031"
    ".google.protobuf.Duration\032.\n\014HeadersEntr"
    "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032\220\004\n\010Re"
    "source\022\017\n\007service\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\014\n"
    "\004type\030\003 \001(\t\022I\n\006labels\030\004 \003(\01329.google.rpc"
    ".context.AttributeContext.Resource.Label"
    "sEntry\022\013\n\003uid\030\005 \001(\t\022S\n\013annotations\030\006 \003(\013"
    "2>.google.rpc.context.AttributeContext.R"
    "esource.AnnotationsEntry\022\024\n\014display_name"
    "\030\007 \001(\t\022/\n\013create_time\030\010 \001(\0132\032.google.pro"
    "tobuf.Timestamp\022/\n\013update_time\030\t \001(\0132\032.g"
    "oogle.protobuf.Timestamp\022/\n\013delete_time\030"
    "\n \001(\0132\032.google.protobuf.Timestamp\022\014\n\004eta"
    "g\030\013 \001(\t\022\020\n\010location\030\014 \001(\t\032-\n\013LabelsEntry"
    "\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0322\n\020Anno"
    "tationsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t"
    ":\0028\001B\213\001\n\026com.google.rpc.contextB\025Attribu"
    "teContextProtoP\001ZUgoogle.golang.org/genp"
    "roto/googleapis/rpc/context/attribute_co"
    "ntext;attribute_context\370\001\001b\006proto3", 2394);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/rpc/context/attribute_context.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fduration_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fstruct_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto_once_);
void protobuf_AddDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto_once_,
                 &protobuf_AddDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto {
  StaticDescriptorInitializer_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto() {
    protobuf_AddDesc_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
  }
} static_descriptor_initializer_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttributeContext_Peer::kIpFieldNumber;
const int AttributeContext_Peer::kPortFieldNumber;
const int AttributeContext_Peer::kLabelsFieldNumber;
const int AttributeContext_Peer::kPrincipalFieldNumber;
const int AttributeContext_Peer::kRegionCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttributeContext_Peer::AttributeContext_Peer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.rpc.context.AttributeContext.Peer)
}
AttributeContext_Peer::AttributeContext_Peer(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  labels_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.rpc.context.AttributeContext.Peer)
}

void AttributeContext_Peer::InitAsDefaultInstance() {
}

AttributeContext_Peer::AttributeContext_Peer(const AttributeContext_Peer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.rpc.context.AttributeContext.Peer)
}

void AttributeContext_Peer::SharedCtor() {
  labels_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  labels_.SetEntryDescriptor(
      &::google::rpc::context::AttributeContext_Peer_LabelsEntry_descriptor_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  principal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

AttributeContext_Peer::~AttributeContext_Peer() {
  // @@protoc_insertion_point(destructor:google.rpc.context.AttributeContext.Peer)
  SharedDtor();
}

void AttributeContext_Peer::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  ip_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  principal_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  region_code_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void AttributeContext_Peer::ArenaDtor(void* object) {
  AttributeContext_Peer* _this = reinterpret_cast< AttributeContext_Peer* >(object);
  (void)_this;
}
void AttributeContext_Peer::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AttributeContext_Peer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttributeContext_Peer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AttributeContext_Peer_descriptor_;
}

const AttributeContext_Peer& AttributeContext_Peer::default_instance() {
  protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AttributeContext_Peer> AttributeContext_Peer_default_instance_;

AttributeContext_Peer* AttributeContext_Peer::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<AttributeContext_Peer>(arena);
}

void AttributeContext_Peer::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.context.AttributeContext.Peer)
  ip_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  port_ = GOOGLE_LONGLONG(0);
  principal_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  region_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  labels_.Clear();
}

bool AttributeContext_Peer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.rpc.context.AttributeContext.Peer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ip = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Peer.ip"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_port;
        break;
      }

      // optional int64 port = 2;
      case 2: {
        if (tag == 16) {
         parse_port:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_labels;
        break;
      }

      // map<string, string> labels = 6;
      case 6: {
        if (tag == 50) {
         parse_labels:
          DO_(input->IncrementRecursionDepth());
         parse_loop_labels:
          AttributeContext_Peer_LabelsEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Peer.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Peer.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_labels;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(58)) goto parse_principal;
        break;
      }

      // optional string principal = 7;
      case 7: {
        if (tag == 58) {
         parse_principal:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_principal()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->principal().data(), this->principal().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Peer.principal"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_region_code;
        break;
      }

      // optional string region_code = 8;
      case 8: {
        if (tag == 66) {
         parse_region_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->region_code().data(), this->region_code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Peer.region_code"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.rpc.context.AttributeContext.Peer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.rpc.context.AttributeContext.Peer)
  return false;
#undef DO_
}

void AttributeContext_Peer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.rpc.context.AttributeContext.Peer)
  // optional string ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Peer.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip(), output);
  }

  // optional int64 port = 2;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->port(), output);
  }

  // map<string, string> labels = 6;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Peer.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Peer.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<AttributeContext_Peer_LabelsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<AttributeContext_Peer_LabelsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string principal = 7;
  if (this->principal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->principal().data(), this->principal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Peer.principal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->principal(), output);
  }

  // optional string region_code = 8;
  if (this->region_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region_code().data(), this->region_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Peer.region_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->region_code(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.rpc.context.AttributeContext.Peer)
}

::google::protobuf::uint8* AttributeContext_Peer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.context.AttributeContext.Peer)
  // optional string ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Peer.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip(), target);
  }

  // optional int64 port = 2;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->port(), target);
  }

  // map<string, string> labels = 6;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Peer.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Peer.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<AttributeContext_Peer_LabelsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<AttributeContext_Peer_LabelsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string principal = 7;
  if (this->principal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->principal().data(), this->principal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Peer.principal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->principal(), target);
  }

  // optional string region_code = 8;
  if (this->region_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region_code().data(), this->region_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Peer.region_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->region_code(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.context.AttributeContext.Peer)
  return target;
}

size_t AttributeContext_Peer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.context.AttributeContext.Peer)
  size_t total_size = 0;

  // optional string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // optional int64 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->port());
  }

  // optional string principal = 7;
  if (this->principal().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->principal());
  }

  // optional string region_code = 8;
  if (this->region_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region_code());
  }

  // map<string, string> labels = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::google::protobuf::scoped_ptr<AttributeContext_Peer_LabelsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttributeContext_Peer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.rpc.context.AttributeContext.Peer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AttributeContext_Peer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttributeContext_Peer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.rpc.context.AttributeContext.Peer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.rpc.context.AttributeContext.Peer)
    UnsafeMergeFrom(*source);
  }
}

void AttributeContext_Peer::MergeFrom(const AttributeContext_Peer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.context.AttributeContext.Peer)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AttributeContext_Peer::UnsafeMergeFrom(const AttributeContext_Peer& from) {
  GOOGLE_DCHECK(&from != this);
  labels_.MergeFrom(from.labels_);
  if (from.ip().size() > 0) {
    set_ip(from.ip());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.principal().size() > 0) {
    set_principal(from.principal());
  }
  if (from.region_code().size() > 0) {
    set_region_code(from.region_code());
  }
}

void AttributeContext_Peer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.rpc.context.AttributeContext.Peer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttributeContext_Peer::CopyFrom(const AttributeContext_Peer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.context.AttributeContext.Peer)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AttributeContext_Peer::IsInitialized() const {

  return true;
}

void AttributeContext_Peer::Swap(AttributeContext_Peer* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AttributeContext_Peer temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void AttributeContext_Peer::UnsafeArenaSwap(AttributeContext_Peer* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AttributeContext_Peer::InternalSwap(AttributeContext_Peer* other) {
  ip_.Swap(&other->ip_);
  std::swap(port_, other->port_);
  labels_.Swap(&other->labels_);
  principal_.Swap(&other->principal_);
  region_code_.Swap(&other->region_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AttributeContext_Peer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AttributeContext_Peer_descriptor_;
  metadata.reflection = AttributeContext_Peer_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttributeContext_Api::kServiceFieldNumber;
const int AttributeContext_Api::kOperationFieldNumber;
const int AttributeContext_Api::kProtocolFieldNumber;
const int AttributeContext_Api::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttributeContext_Api::AttributeContext_Api()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.rpc.context.AttributeContext.Api)
}
AttributeContext_Api::AttributeContext_Api(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.rpc.context.AttributeContext.Api)
}

void AttributeContext_Api::InitAsDefaultInstance() {
}

AttributeContext_Api::AttributeContext_Api(const AttributeContext_Api& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.rpc.context.AttributeContext.Api)
}

void AttributeContext_Api::SharedCtor() {
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AttributeContext_Api::~AttributeContext_Api() {
  // @@protoc_insertion_point(destructor:google.rpc.context.AttributeContext.Api)
  SharedDtor();
}

void AttributeContext_Api::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  service_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  operation_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  protocol_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  version_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void AttributeContext_Api::ArenaDtor(void* object) {
  AttributeContext_Api* _this = reinterpret_cast< AttributeContext_Api* >(object);
  (void)_this;
}
void AttributeContext_Api::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AttributeContext_Api::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttributeContext_Api::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AttributeContext_Api_descriptor_;
}

const AttributeContext_Api& AttributeContext_Api::default_instance() {
  protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AttributeContext_Api> AttributeContext_Api_default_instance_;

AttributeContext_Api* AttributeContext_Api::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<AttributeContext_Api>(arena);
}

void AttributeContext_Api::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.context.AttributeContext.Api)
  service_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  operation_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  protocol_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  version_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}

bool AttributeContext_Api::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.rpc.context.AttributeContext.Api)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string service = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service().data(), this->service().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Api.service"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_operation;
        break;
      }

      // optional string operation = 2;
      case 2: {
        if (tag == 18) {
         parse_operation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operation().data(), this->operation().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Api.operation"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_protocol;
        break;
      }

      // optional string protocol = 3;
      case 3: {
        if (tag == 26) {
         parse_protocol:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_protocol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->protocol().data(), this->protocol().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Api.protocol"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_version;
        break;
      }

      // optional string version = 4;
      case 4: {
        if (tag == 34) {
         parse_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Api.version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.rpc.context.AttributeContext.Api)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.rpc.context.AttributeContext.Api)
  return false;
#undef DO_
}

void AttributeContext_Api::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.rpc.context.AttributeContext.Api)
  // optional string service = 1;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), this->service().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Api.service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service(), output);
  }

  // optional string operation = 2;
  if (this->operation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation().data(), this->operation().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Api.operation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->operation(), output);
  }

  // optional string protocol = 3;
  if (this->protocol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protocol().data(), this->protocol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Api.protocol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->protocol(), output);
  }

  // optional string version = 4;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Api.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->version(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.rpc.context.AttributeContext.Api)
}

::google::protobuf::uint8* AttributeContext_Api::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.context.AttributeContext.Api)
  // optional string service = 1;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), this->service().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Api.service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service(), target);
  }

  // optional string operation = 2;
  if (this->operation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation().data(), this->operation().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Api.operation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->operation(), target);
  }

  // optional string protocol = 3;
  if (this->protocol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protocol().data(), this->protocol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Api.protocol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->protocol(), target);
  }

  // optional string version = 4;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Api.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->version(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.context.AttributeContext.Api)
  return target;
}

size_t AttributeContext_Api::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.context.AttributeContext.Api)
  size_t total_size = 0;

  // optional string service = 1;
  if (this->service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service());
  }

  // optional string operation = 2;
  if (this->operation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operation());
  }

  // optional string protocol = 3;
  if (this->protocol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->protocol());
  }

  // optional string version = 4;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttributeContext_Api::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.rpc.context.AttributeContext.Api)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AttributeContext_Api* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttributeContext_Api>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.rpc.context.AttributeContext.Api)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.rpc.context.AttributeContext.Api)
    UnsafeMergeFrom(*source);
  }
}

void AttributeContext_Api::MergeFrom(const AttributeContext_Api& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.context.AttributeContext.Api)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AttributeContext_Api::UnsafeMergeFrom(const AttributeContext_Api& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.service().size() > 0) {
    set_service(from.service());
  }
  if (from.operation().size() > 0) {
    set_operation(from.operation());
  }
  if (from.protocol().size() > 0) {
    set_protocol(from.protocol());
  }
  if (from.version().size() > 0) {
    set_version(from.version());
  }
}

void AttributeContext_Api::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.rpc.context.AttributeContext.Api)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttributeContext_Api::CopyFrom(const AttributeContext_Api& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.context.AttributeContext.Api)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AttributeContext_Api::IsInitialized() const {

  return true;
}

void AttributeContext_Api::Swap(AttributeContext_Api* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AttributeContext_Api temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void AttributeContext_Api::UnsafeArenaSwap(AttributeContext_Api* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AttributeContext_Api::InternalSwap(AttributeContext_Api* other) {
  service_.Swap(&other->service_);
  operation_.Swap(&other->operation_);
  protocol_.Swap(&other->protocol_);
  version_.Swap(&other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AttributeContext_Api::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AttributeContext_Api_descriptor_;
  metadata.reflection = AttributeContext_Api_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

void AttributeContext_Auth::_slow_mutable_claims() {
  claims_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Struct >(
      GetArenaNoVirtual());
}
::google::protobuf::Struct* AttributeContext_Auth::_slow_release_claims() {
  if (claims_ == NULL) {
    return NULL;
  } else {
    ::google::protobuf::Struct* temp = new ::google::protobuf::Struct(*claims_);
    claims_ = NULL;
    return temp;
  }
}
::google::protobuf::Struct* AttributeContext_Auth::unsafe_arena_release_claims() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Auth.claims)
  
  ::google::protobuf::Struct* temp = claims_;
  claims_ = NULL;
  return temp;
}
void AttributeContext_Auth::_slow_set_allocated_claims(
    ::google::protobuf::Arena* message_arena, ::google::protobuf::Struct** claims) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*claims) == NULL) {
      message_arena->Own(*claims);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*claims)) {
      ::google::protobuf::Struct* new_claims = 
            ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Struct >(
            message_arena);
      new_claims->CopyFrom(**claims);
      *claims = new_claims;
    }
}
void AttributeContext_Auth::unsafe_arena_set_allocated_claims(
    ::google::protobuf::Struct* claims) {
  if (GetArenaNoVirtual() == NULL) {
    delete claims_;
  }
  claims_ = claims;
  if (claims) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Auth.claims)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttributeContext_Auth::kPrincipalFieldNumber;
const int AttributeContext_Auth::kAudiencesFieldNumber;
const int AttributeContext_Auth::kPresenterFieldNumber;
const int AttributeContext_Auth::kClaimsFieldNumber;
const int AttributeContext_Auth::kAccessLevelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttributeContext_Auth::AttributeContext_Auth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.rpc.context.AttributeContext.Auth)
}
AttributeContext_Auth::AttributeContext_Auth(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  audiences_(arena),
  access_levels_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.rpc.context.AttributeContext.Auth)
}

void AttributeContext_Auth::InitAsDefaultInstance() {
  claims_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
}

AttributeContext_Auth::AttributeContext_Auth(const AttributeContext_Auth& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.rpc.context.AttributeContext.Auth)
}

void AttributeContext_Auth::SharedCtor() {
  principal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  presenter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  claims_ = NULL;
  _cached_size_ = 0;
}

AttributeContext_Auth::~AttributeContext_Auth() {
  // @@protoc_insertion_point(destructor:google.rpc.context.AttributeContext.Auth)
  SharedDtor();
}

void AttributeContext_Auth::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  principal_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  presenter_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != &AttributeContext_Auth_default_instance_.get()) {
    delete claims_;
  }
}

void AttributeContext_Auth::ArenaDtor(void* object) {
  AttributeContext_Auth* _this = reinterpret_cast< AttributeContext_Auth* >(object);
  (void)_this;
}
void AttributeContext_Auth::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AttributeContext_Auth::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttributeContext_Auth::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AttributeContext_Auth_descriptor_;
}

const AttributeContext_Auth& AttributeContext_Auth::default_instance() {
  protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AttributeContext_Auth> AttributeContext_Auth_default_instance_;

AttributeContext_Auth* AttributeContext_Auth::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<AttributeContext_Auth>(arena);
}

void AttributeContext_Auth::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.context.AttributeContext.Auth)
  principal_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  presenter_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && claims_ != NULL) delete claims_;
  claims_ = NULL;
  audiences_.Clear();
  access_levels_.Clear();
}

bool AttributeContext_Auth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.rpc.context.AttributeContext.Auth)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string principal = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_principal()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->principal().data(), this->principal().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Auth.principal"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_audiences;
        break;
      }

      // repeated string audiences = 2;
      case 2: {
        if (tag == 18) {
         parse_audiences:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_audiences()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->audiences(this->audiences_size() - 1).data(),
            this->audiences(this->audiences_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Auth.audiences"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_audiences;
        if (input->ExpectTag(26)) goto parse_presenter;
        break;
      }

      // optional string presenter = 3;
      case 3: {
        if (tag == 26) {
         parse_presenter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_presenter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->presenter().data(), this->presenter().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Auth.presenter"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_claims;
        break;
      }

      // optional .google.protobuf.Struct claims = 4;
      case 4: {
        if (tag == 34) {
         parse_claims:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_claims()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_access_levels;
        break;
      }

      // repeated string access_levels = 5;
      case 5: {
        if (tag == 42) {
         parse_access_levels:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_access_levels()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->access_levels(this->access_levels_size() - 1).data(),
            this->access_levels(this->access_levels_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Auth.access_levels"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_access_levels;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.rpc.context.AttributeContext.Auth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.rpc.context.AttributeContext.Auth)
  return false;
#undef DO_
}

void AttributeContext_Auth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.rpc.context.AttributeContext.Auth)
  // optional string principal = 1;
  if (this->principal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->principal().data(), this->principal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Auth.principal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->principal(), output);
  }

  // repeated string audiences = 2;
  for (int i = 0; i < this->audiences_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audiences(i).data(), this->audiences(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Auth.audiences");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->audiences(i), output);
  }

  // optional string presenter = 3;
  if (this->presenter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->presenter().data(), this->presenter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Auth.presenter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->presenter(), output);
  }

  // optional .google.protobuf.Struct claims = 4;
  if (this->has_claims()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->claims_, output);
  }

  // repeated string access_levels = 5;
  for (int i = 0; i < this->access_levels_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_levels(i).data(), this->access_levels(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Auth.access_levels");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->access_levels(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.rpc.context.AttributeContext.Auth)
}

::google::protobuf::uint8* AttributeContext_Auth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.context.AttributeContext.Auth)
  // optional string principal = 1;
  if (this->principal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->principal().data(), this->principal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Auth.principal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->principal(), target);
  }

  // repeated string audiences = 2;
  for (int i = 0; i < this->audiences_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audiences(i).data(), this->audiences(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Auth.audiences");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->audiences(i), target);
  }

  // optional string presenter = 3;
  if (this->presenter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->presenter().data(), this->presenter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Auth.presenter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->presenter(), target);
  }

  // optional .google.protobuf.Struct claims = 4;
  if (this->has_claims()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->claims_, false, target);
  }

  // repeated string access_levels = 5;
  for (int i = 0; i < this->access_levels_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_levels(i).data(), this->access_levels(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Auth.access_levels");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->access_levels(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.context.AttributeContext.Auth)
  return target;
}

size_t AttributeContext_Auth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.context.AttributeContext.Auth)
  size_t total_size = 0;

  // optional string principal = 1;
  if (this->principal().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->principal());
  }

  // optional string presenter = 3;
  if (this->presenter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->presenter());
  }

  // optional .google.protobuf.Struct claims = 4;
  if (this->has_claims()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->claims_);
  }

  // repeated string audiences = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->audiences_size());
  for (int i = 0; i < this->audiences_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->audiences(i));
  }

  // repeated string access_levels = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->access_levels_size());
  for (int i = 0; i < this->access_levels_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->access_levels(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttributeContext_Auth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.rpc.context.AttributeContext.Auth)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AttributeContext_Auth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttributeContext_Auth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.rpc.context.AttributeContext.Auth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.rpc.context.AttributeContext.Auth)
    UnsafeMergeFrom(*source);
  }
}

void AttributeContext_Auth::MergeFrom(const AttributeContext_Auth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.context.AttributeContext.Auth)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AttributeContext_Auth::UnsafeMergeFrom(const AttributeContext_Auth& from) {
  GOOGLE_DCHECK(&from != this);
  audiences_.UnsafeMergeFrom(from.audiences_);
  access_levels_.UnsafeMergeFrom(from.access_levels_);
  if (from.principal().size() > 0) {
    set_principal(from.principal());
  }
  if (from.presenter().size() > 0) {
    set_presenter(from.presenter());
  }
  if (from.has_claims()) {
    mutable_claims()->::google::protobuf::Struct::MergeFrom(from.claims());
  }
}

void AttributeContext_Auth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.rpc.context.AttributeContext.Auth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttributeContext_Auth::CopyFrom(const AttributeContext_Auth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.context.AttributeContext.Auth)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AttributeContext_Auth::IsInitialized() const {

  return true;
}

void AttributeContext_Auth::Swap(AttributeContext_Auth* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AttributeContext_Auth temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void AttributeContext_Auth::UnsafeArenaSwap(AttributeContext_Auth* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AttributeContext_Auth::InternalSwap(AttributeContext_Auth* other) {
  principal_.Swap(&other->principal_);
  audiences_.UnsafeArenaSwap(&other->audiences_);
  presenter_.Swap(&other->presenter_);
  std::swap(claims_, other->claims_);
  access_levels_.UnsafeArenaSwap(&other->access_levels_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AttributeContext_Auth::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AttributeContext_Auth_descriptor_;
  metadata.reflection = AttributeContext_Auth_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

void AttributeContext_Request::_slow_mutable_time() {
  time_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
      GetArenaNoVirtual());
}
::google::protobuf::Timestamp* AttributeContext_Request::_slow_release_time() {
  if (time_ == NULL) {
    return NULL;
  } else {
    ::google::protobuf::Timestamp* temp = new ::google::protobuf::Timestamp(*time_);
    time_ = NULL;
    return temp;
  }
}
::google::protobuf::Timestamp* AttributeContext_Request::unsafe_arena_release_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Request.time)
  
  ::google::protobuf::Timestamp* temp = time_;
  time_ = NULL;
  return temp;
}
void AttributeContext_Request::_slow_set_allocated_time(
    ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** time) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*time) == NULL) {
      message_arena->Own(*time);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*time)) {
      ::google::protobuf::Timestamp* new_time = 
            ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
            message_arena);
      new_time->CopyFrom(**time);
      *time = new_time;
    }
}
void AttributeContext_Request::unsafe_arena_set_allocated_time(
    ::google::protobuf::Timestamp* time) {
  if (GetArenaNoVirtual() == NULL) {
    delete time_;
  }
  time_ = time;
  if (time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Request.time)
}
void AttributeContext_Request::_slow_mutable_auth() {
  auth_ = ::google::protobuf::Arena::CreateMessage< ::google::rpc::context::AttributeContext_Auth >(
      GetArenaNoVirtual());
}
::google::rpc::context::AttributeContext_Auth* AttributeContext_Request::_slow_release_auth() {
  if (auth_ == NULL) {
    return NULL;
  } else {
    ::google::rpc::context::AttributeContext_Auth* temp = new ::google::rpc::context::AttributeContext_Auth(*auth_);
    auth_ = NULL;
    return temp;
  }
}
::google::rpc::context::AttributeContext_Auth* AttributeContext_Request::unsafe_arena_release_auth() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Request.auth)
  
  ::google::rpc::context::AttributeContext_Auth* temp = auth_;
  auth_ = NULL;
  return temp;
}
void AttributeContext_Request::_slow_set_allocated_auth(
    ::google::protobuf::Arena* message_arena, ::google::rpc::context::AttributeContext_Auth** auth) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*auth) == NULL) {
      message_arena->Own(*auth);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*auth)) {
      ::google::rpc::context::AttributeContext_Auth* new_auth = 
            ::google::protobuf::Arena::CreateMessage< ::google::rpc::context::AttributeContext_Auth >(
            message_arena);
      new_auth->CopyFrom(**auth);
      *auth = new_auth;
    }
}
void AttributeContext_Request::unsafe_arena_set_allocated_auth(
    ::google::rpc::context::AttributeContext_Auth* auth) {
  if (GetArenaNoVirtual() == NULL) {
    delete auth_;
  }
  auth_ = auth;
  if (auth) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Request.auth)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttributeContext_Request::kIdFieldNumber;
const int AttributeContext_Request::kMethodFieldNumber;
const int AttributeContext_Request::kHeadersFieldNumber;
const int AttributeContext_Request::kPathFieldNumber;
const int AttributeContext_Request::kHostFieldNumber;
const int AttributeContext_Request::kSchemeFieldNumber;
const int AttributeContext_Request::kQueryFieldNumber;
const int AttributeContext_Request::kTimeFieldNumber;
const int AttributeContext_Request::kSizeFieldNumber;
const int AttributeContext_Request::kProtocolFieldNumber;
const int AttributeContext_Request::kReasonFieldNumber;
const int AttributeContext_Request::kAuthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttributeContext_Request::AttributeContext_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.rpc.context.AttributeContext.Request)
}
AttributeContext_Request::AttributeContext_Request(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  headers_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.rpc.context.AttributeContext.Request)
}

void AttributeContext_Request::InitAsDefaultInstance() {
  time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  auth_ = const_cast< ::google::rpc::context::AttributeContext_Auth*>(
      ::google::rpc::context::AttributeContext_Auth::internal_default_instance());
}

AttributeContext_Request::AttributeContext_Request(const AttributeContext_Request& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.rpc.context.AttributeContext.Request)
}

void AttributeContext_Request::SharedCtor() {
  headers_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  headers_.SetEntryDescriptor(
      &::google::rpc::context::AttributeContext_Request_HeadersEntry_descriptor_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scheme_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = NULL;
  auth_ = NULL;
  size_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

AttributeContext_Request::~AttributeContext_Request() {
  // @@protoc_insertion_point(destructor:google.rpc.context.AttributeContext.Request)
  SharedDtor();
}

void AttributeContext_Request::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  method_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  path_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  host_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  scheme_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  query_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  protocol_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  reason_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != &AttributeContext_Request_default_instance_.get()) {
    delete time_;
    delete auth_;
  }
}

void AttributeContext_Request::ArenaDtor(void* object) {
  AttributeContext_Request* _this = reinterpret_cast< AttributeContext_Request* >(object);
  (void)_this;
}
void AttributeContext_Request::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AttributeContext_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttributeContext_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AttributeContext_Request_descriptor_;
}

const AttributeContext_Request& AttributeContext_Request::default_instance() {
  protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AttributeContext_Request> AttributeContext_Request_default_instance_;

AttributeContext_Request* AttributeContext_Request::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<AttributeContext_Request>(arena);
}

void AttributeContext_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.context.AttributeContext.Request)
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  method_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  path_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  host_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  scheme_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  query_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && time_ != NULL) delete time_;
  time_ = NULL;
  size_ = GOOGLE_LONGLONG(0);
  protocol_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  reason_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && auth_ != NULL) delete auth_;
  auth_ = NULL;
  headers_.Clear();
}

bool AttributeContext_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.rpc.context.AttributeContext.Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Request.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_method;
        break;
      }

      // optional string method = 2;
      case 2: {
        if (tag == 18) {
         parse_method:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method().data(), this->method().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Request.method"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_headers;
        break;
      }

      // map<string, string> headers = 3;
      case 3: {
        if (tag == 26) {
         parse_headers:
          DO_(input->IncrementRecursionDepth());
         parse_loop_headers:
          AttributeContext_Request_HeadersEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&headers_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Request.HeadersEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Request.HeadersEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_headers;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(34)) goto parse_path;
        break;
      }

      // optional string path = 4;
      case 4: {
        if (tag == 34) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Request.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_host;
        break;
      }

      // optional string host = 5;
      case 5: {
        if (tag == 42) {
         parse_host:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host().data(), this->host().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Request.host"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_scheme;
        break;
      }

      // optional string scheme = 6;
      case 6: {
        if (tag == 50) {
         parse_scheme:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scheme()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scheme().data(), this->scheme().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Request.scheme"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_query;
        break;
      }

      // optional string query = 7;
      case 7: {
        if (tag == 58) {
         parse_query:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), this->query().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Request.query"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_time;
        break;
      }

      // optional .google.protobuf.Timestamp time = 9;
      case 9: {
        if (tag == 74) {
         parse_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_size;
        break;
      }

      // optional int64 size = 10;
      case 10: {
        if (tag == 80) {
         parse_size:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_protocol;
        break;
      }

      // optional string protocol = 11;
      case 11: {
        if (tag == 90) {
         parse_protocol:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_protocol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->protocol().data(), this->protocol().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Request.protocol"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_reason;
        break;
      }

      // optional string reason = 12;
      case 12: {
        if (tag == 98) {
         parse_reason:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), this->reason().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Request.reason"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_auth;
        break;
      }

      // optional .google.rpc.context.AttributeContext.Auth auth = 13;
      case 13: {
        if (tag == 106) {
         parse_auth:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_auth()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.rpc.context.AttributeContext.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.rpc.context.AttributeContext.Request)
  return false;
#undef DO_
}

void AttributeContext_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.rpc.context.AttributeContext.Request)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Request.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string method = 2;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Request.method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->method(), output);
  }

  // map<string, string> headers = 3;
  if (!this->headers().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Request.HeadersEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Request.HeadersEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->headers().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->headers().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->headers().begin();
          it != this->headers().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<AttributeContext_Request_HeadersEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(headers_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<AttributeContext_Request_HeadersEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->headers().begin();
          it != this->headers().end(); ++it) {
        entry.reset(headers_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string path = 4;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Request.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->path(), output);
  }

  // optional string host = 5;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), this->host().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Request.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->host(), output);
  }

  // optional string scheme = 6;
  if (this->scheme().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scheme().data(), this->scheme().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Request.scheme");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->scheme(), output);
  }

  // optional string query = 7;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), this->query().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Request.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->query(), output);
  }

  // optional .google.protobuf.Timestamp time = 9;
  if (this->has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->time_, output);
  }

  // optional int64 size = 10;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->size(), output);
  }

  // optional string protocol = 11;
  if (this->protocol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protocol().data(), this->protocol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Request.protocol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->protocol(), output);
  }

  // optional string reason = 12;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), this->reason().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Request.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->reason(), output);
  }

  // optional .google.rpc.context.AttributeContext.Auth auth = 13;
  if (this->has_auth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->auth_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.rpc.context.AttributeContext.Request)
}

::google::protobuf::uint8* AttributeContext_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.context.AttributeContext.Request)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Request.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string method = 2;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Request.method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->method(), target);
  }

  // map<string, string> headers = 3;
  if (!this->headers().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Request.HeadersEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Request.HeadersEntry.value");
      }
    };

    if (deterministic &&
        this->headers().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->headers().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->headers().begin();
          it != this->headers().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<AttributeContext_Request_HeadersEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(headers_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<AttributeContext_Request_HeadersEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->headers().begin();
          it != this->headers().end(); ++it) {
        entry.reset(headers_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string path = 4;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Request.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->path(), target);
  }

  // optional string host = 5;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), this->host().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Request.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->host(), target);
  }

  // optional string scheme = 6;
  if (this->scheme().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scheme().data(), this->scheme().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Request.scheme");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->scheme(), target);
  }

  // optional string query = 7;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), this->query().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Request.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->query(), target);
  }

  // optional .google.protobuf.Timestamp time = 9;
  if (this->has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->time_, false, target);
  }

  // optional int64 size = 10;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->size(), target);
  }

  // optional string protocol = 11;
  if (this->protocol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protocol().data(), this->protocol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Request.protocol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->protocol(), target);
  }

  // optional string reason = 12;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), this->reason().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Request.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->reason(), target);
  }

  // optional .google.rpc.context.AttributeContext.Auth auth = 13;
  if (this->has_auth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->auth_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.context.AttributeContext.Request)
  return target;
}

size_t AttributeContext_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.context.AttributeContext.Request)
  size_t total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string method = 2;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());
  }

  // optional string path = 4;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // optional string host = 5;
  if (this->host().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host());
  }

  // optional string scheme = 6;
  if (this->scheme().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scheme());
  }

  // optional string query = 7;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  // optional .google.protobuf.Timestamp time = 9;
  if (this->has_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->time_);
  }

  // optional int64 size = 10;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->size());
  }

  // optional string protocol = 11;
  if (this->protocol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->protocol());
  }

  // optional string reason = 12;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // optional .google.rpc.context.AttributeContext.Auth auth = 13;
  if (this->has_auth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->auth_);
  }

  // map<string, string> headers = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->headers_size());
  {
    ::google::protobuf::scoped_ptr<AttributeContext_Request_HeadersEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->headers().begin();
        it != this->headers().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(headers_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttributeContext_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.rpc.context.AttributeContext.Request)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AttributeContext_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttributeContext_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.rpc.context.AttributeContext.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.rpc.context.AttributeContext.Request)
    UnsafeMergeFrom(*source);
  }
}

void AttributeContext_Request::MergeFrom(const AttributeContext_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.context.AttributeContext.Request)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AttributeContext_Request::UnsafeMergeFrom(const AttributeContext_Request& from) {
  GOOGLE_DCHECK(&from != this);
  headers_.MergeFrom(from.headers_);
  if (from.id().size() > 0) {
    set_id(from.id());
  }
  if (from.method().size() > 0) {
    set_method(from.method());
  }
  if (from.path().size() > 0) {
    set_path(from.path());
  }
  if (from.host().size() > 0) {
    set_host(from.host());
  }
  if (from.scheme().size() > 0) {
    set_scheme(from.scheme());
  }
  if (from.query().size() > 0) {
    set_query(from.query());
  }
  if (from.has_time()) {
    mutable_time()->::google::protobuf::Timestamp::MergeFrom(from.time());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.protocol().size() > 0) {
    set_protocol(from.protocol());
  }
  if (from.reason().size() > 0) {
    set_reason(from.reason());
  }
  if (from.has_auth()) {
    mutable_auth()->::google::rpc::context::AttributeContext_Auth::MergeFrom(from.auth());
  }
}

void AttributeContext_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.rpc.context.AttributeContext.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttributeContext_Request::CopyFrom(const AttributeContext_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.context.AttributeContext.Request)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AttributeContext_Request::IsInitialized() const {

  return true;
}

void AttributeContext_Request::Swap(AttributeContext_Request* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AttributeContext_Request temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void AttributeContext_Request::UnsafeArenaSwap(AttributeContext_Request* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AttributeContext_Request::InternalSwap(AttributeContext_Request* other) {
  id_.Swap(&other->id_);
  method_.Swap(&other->method_);
  headers_.Swap(&other->headers_);
  path_.Swap(&other->path_);
  host_.Swap(&other->host_);
  scheme_.Swap(&other->scheme_);
  query_.Swap(&other->query_);
  std::swap(time_, other->time_);
  std::swap(size_, other->size_);
  protocol_.Swap(&other->protocol_);
  reason_.Swap(&other->reason_);
  std::swap(auth_, other->auth_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AttributeContext_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AttributeContext_Request_descriptor_;
  metadata.reflection = AttributeContext_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

void AttributeContext_Response::_slow_mutable_time() {
  time_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
      GetArenaNoVirtual());
}
::google::protobuf::Timestamp* AttributeContext_Response::_slow_release_time() {
  if (time_ == NULL) {
    return NULL;
  } else {
    ::google::protobuf::Timestamp* temp = new ::google::protobuf::Timestamp(*time_);
    time_ = NULL;
    return temp;
  }
}
::google::protobuf::Timestamp* AttributeContext_Response::unsafe_arena_release_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Response.time)
  
  ::google::protobuf::Timestamp* temp = time_;
  time_ = NULL;
  return temp;
}
void AttributeContext_Response::_slow_set_allocated_time(
    ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** time) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*time) == NULL) {
      message_arena->Own(*time);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*time)) {
      ::google::protobuf::Timestamp* new_time = 
            ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
            message_arena);
      new_time->CopyFrom(**time);
      *time = new_time;
    }
}
void AttributeContext_Response::unsafe_arena_set_allocated_time(
    ::google::protobuf::Timestamp* time) {
  if (GetArenaNoVirtual() == NULL) {
    delete time_;
  }
  time_ = time;
  if (time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Response.time)
}
void AttributeContext_Response::_slow_mutable_backend_latency() {
  backend_latency_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Duration >(
      GetArenaNoVirtual());
}
::google::protobuf::Duration* AttributeContext_Response::_slow_release_backend_latency() {
  if (backend_latency_ == NULL) {
    return NULL;
  } else {
    ::google::protobuf::Duration* temp = new ::google::protobuf::Duration(*backend_latency_);
    backend_latency_ = NULL;
    return temp;
  }
}
::google::protobuf::Duration* AttributeContext_Response::unsafe_arena_release_backend_latency() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Response.backend_latency)
  
  ::google::protobuf::Duration* temp = backend_latency_;
  backend_latency_ = NULL;
  return temp;
}
void AttributeContext_Response::_slow_set_allocated_backend_latency(
    ::google::protobuf::Arena* message_arena, ::google::protobuf::Duration** backend_latency) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*backend_latency) == NULL) {
      message_arena->Own(*backend_latency);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*backend_latency)) {
      ::google::protobuf::Duration* new_backend_latency = 
            ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Duration >(
            message_arena);
      new_backend_latency->CopyFrom(**backend_latency);
      *backend_latency = new_backend_latency;
    }
}
void AttributeContext_Response::unsafe_arena_set_allocated_backend_latency(
    ::google::protobuf::Duration* backend_latency) {
  if (GetArenaNoVirtual() == NULL) {
    delete backend_latency_;
  }
  backend_latency_ = backend_latency;
  if (backend_latency) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Response.backend_latency)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttributeContext_Response::kCodeFieldNumber;
const int AttributeContext_Response::kSizeFieldNumber;
const int AttributeContext_Response::kHeadersFieldNumber;
const int AttributeContext_Response::kTimeFieldNumber;
const int AttributeContext_Response::kBackendLatencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttributeContext_Response::AttributeContext_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.rpc.context.AttributeContext.Response)
}
AttributeContext_Response::AttributeContext_Response(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  headers_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.rpc.context.AttributeContext.Response)
}

void AttributeContext_Response::InitAsDefaultInstance() {
  time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  backend_latency_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}

AttributeContext_Response::AttributeContext_Response(const AttributeContext_Response& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.rpc.context.AttributeContext.Response)
}

void AttributeContext_Response::SharedCtor() {
  headers_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  headers_.SetEntryDescriptor(
      &::google::rpc::context::AttributeContext_Response_HeadersEntry_descriptor_);
  time_ = NULL;
  backend_latency_ = NULL;
  ::memset(&code_, 0, reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&code_) + sizeof(size_));
  _cached_size_ = 0;
}

AttributeContext_Response::~AttributeContext_Response() {
  // @@protoc_insertion_point(destructor:google.rpc.context.AttributeContext.Response)
  SharedDtor();
}

void AttributeContext_Response::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &AttributeContext_Response_default_instance_.get()) {
    delete time_;
    delete backend_latency_;
  }
}

void AttributeContext_Response::ArenaDtor(void* object) {
  AttributeContext_Response* _this = reinterpret_cast< AttributeContext_Response* >(object);
  (void)_this;
}
void AttributeContext_Response::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AttributeContext_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttributeContext_Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AttributeContext_Response_descriptor_;
}

const AttributeContext_Response& AttributeContext_Response::default_instance() {
  protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AttributeContext_Response> AttributeContext_Response_default_instance_;

AttributeContext_Response* AttributeContext_Response::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<AttributeContext_Response>(arena);
}

void AttributeContext_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.context.AttributeContext.Response)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AttributeContext_Response, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AttributeContext_Response*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(code_, size_);
  if (GetArenaNoVirtual() == NULL && time_ != NULL) delete time_;
  time_ = NULL;
  if (GetArenaNoVirtual() == NULL && backend_latency_ != NULL) delete backend_latency_;
  backend_latency_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  headers_.Clear();
}

bool AttributeContext_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.rpc.context.AttributeContext.Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 code = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_size;
        break;
      }

      // optional int64 size = 2;
      case 2: {
        if (tag == 16) {
         parse_size:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_headers;
        break;
      }

      // map<string, string> headers = 3;
      case 3: {
        if (tag == 26) {
         parse_headers:
          DO_(input->IncrementRecursionDepth());
         parse_loop_headers:
          AttributeContext_Response_HeadersEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&headers_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Response.HeadersEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Response.HeadersEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_headers;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(34)) goto parse_time;
        break;
      }

      // optional .google.protobuf.Timestamp time = 4;
      case 4: {
        if (tag == 34) {
         parse_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_backend_latency;
        break;
      }

      // optional .google.protobuf.Duration backend_latency = 5;
      case 5: {
        if (tag == 42) {
         parse_backend_latency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_backend_latency()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.rpc.context.AttributeContext.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.rpc.context.AttributeContext.Response)
  return false;
#undef DO_
}

void AttributeContext_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.rpc.context.AttributeContext.Response)
  // optional int64 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->code(), output);
  }

  // optional int64 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->size(), output);
  }

  // map<string, string> headers = 3;
  if (!this->headers().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Response.HeadersEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Response.HeadersEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->headers().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->headers().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->headers().begin();
          it != this->headers().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<AttributeContext_Response_HeadersEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(headers_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<AttributeContext_Response_HeadersEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->headers().begin();
          it != this->headers().end(); ++it) {
        entry.reset(headers_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional .google.protobuf.Timestamp time = 4;
  if (this->has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->time_, output);
  }

  // optional .google.protobuf.Duration backend_latency = 5;
  if (this->has_backend_latency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->backend_latency_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.rpc.context.AttributeContext.Response)
}

::google::protobuf::uint8* AttributeContext_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.context.AttributeContext.Response)
  // optional int64 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->code(), target);
  }

  // optional int64 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->size(), target);
  }

  // map<string, string> headers = 3;
  if (!this->headers().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Response.HeadersEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Response.HeadersEntry.value");
      }
    };

    if (deterministic &&
        this->headers().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->headers().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->headers().begin();
          it != this->headers().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<AttributeContext_Response_HeadersEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(headers_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<AttributeContext_Response_HeadersEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->headers().begin();
          it != this->headers().end(); ++it) {
        entry.reset(headers_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional .google.protobuf.Timestamp time = 4;
  if (this->has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->time_, false, target);
  }

  // optional .google.protobuf.Duration backend_latency = 5;
  if (this->has_backend_latency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->backend_latency_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.context.AttributeContext.Response)
  return target;
}

size_t AttributeContext_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.context.AttributeContext.Response)
  size_t total_size = 0;

  // optional int64 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->code());
  }

  // optional int64 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->size());
  }

  // optional .google.protobuf.Timestamp time = 4;
  if (this->has_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->time_);
  }

  // optional .google.protobuf.Duration backend_latency = 5;
  if (this->has_backend_latency()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->backend_latency_);
  }

  // map<string, string> headers = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->headers_size());
  {
    ::google::protobuf::scoped_ptr<AttributeContext_Response_HeadersEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->headers().begin();
        it != this->headers().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(headers_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttributeContext_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.rpc.context.AttributeContext.Response)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AttributeContext_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttributeContext_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.rpc.context.AttributeContext.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.rpc.context.AttributeContext.Response)
    UnsafeMergeFrom(*source);
  }
}

void AttributeContext_Response::MergeFrom(const AttributeContext_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.context.AttributeContext.Response)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AttributeContext_Response::UnsafeMergeFrom(const AttributeContext_Response& from) {
  GOOGLE_DCHECK(&from != this);
  headers_.MergeFrom(from.headers_);
  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.has_time()) {
    mutable_time()->::google::protobuf::Timestamp::MergeFrom(from.time());
  }
  if (from.has_backend_latency()) {
    mutable_backend_latency()->::google::protobuf::Duration::MergeFrom(from.backend_latency());
  }
}

void AttributeContext_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.rpc.context.AttributeContext.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttributeContext_Response::CopyFrom(const AttributeContext_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.context.AttributeContext.Response)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AttributeContext_Response::IsInitialized() const {

  return true;
}

void AttributeContext_Response::Swap(AttributeContext_Response* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AttributeContext_Response temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void AttributeContext_Response::UnsafeArenaSwap(AttributeContext_Response* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AttributeContext_Response::InternalSwap(AttributeContext_Response* other) {
  std::swap(code_, other->code_);
  std::swap(size_, other->size_);
  headers_.Swap(&other->headers_);
  std::swap(time_, other->time_);
  std::swap(backend_latency_, other->backend_latency_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AttributeContext_Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AttributeContext_Response_descriptor_;
  metadata.reflection = AttributeContext_Response_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

void AttributeContext_Resource::_slow_mutable_create_time() {
  create_time_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
      GetArenaNoVirtual());
}
::google::protobuf::Timestamp* AttributeContext_Resource::_slow_release_create_time() {
  if (create_time_ == NULL) {
    return NULL;
  } else {
    ::google::protobuf::Timestamp* temp = new ::google::protobuf::Timestamp(*create_time_);
    create_time_ = NULL;
    return temp;
  }
}
::google::protobuf::Timestamp* AttributeContext_Resource::unsafe_arena_release_create_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Resource.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  create_time_ = NULL;
  return temp;
}
void AttributeContext_Resource::_slow_set_allocated_create_time(
    ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** create_time) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*create_time) == NULL) {
      message_arena->Own(*create_time);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*create_time)) {
      ::google::protobuf::Timestamp* new_create_time = 
            ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
            message_arena);
      new_create_time->CopyFrom(**create_time);
      *create_time = new_create_time;
    }
}
void AttributeContext_Resource::unsafe_arena_set_allocated_create_time(
    ::google::protobuf::Timestamp* create_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete create_time_;
  }
  create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Resource.create_time)
}
void AttributeContext_Resource::_slow_mutable_update_time() {
  update_time_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
      GetArenaNoVirtual());
}
::google::protobuf::Timestamp* AttributeContext_Resource::_slow_release_update_time() {
  if (update_time_ == NULL) {
    return NULL;
  } else {
    ::google::protobuf::Timestamp* temp = new ::google::protobuf::Timestamp(*update_time_);
    update_time_ = NULL;
    return temp;
  }
}
::google::protobuf::Timestamp* AttributeContext_Resource::unsafe_arena_release_update_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Resource.update_time)
  
  ::google::protobuf::Timestamp* temp = update_time_;
  update_time_ = NULL;
  return temp;
}
void AttributeContext_Resource::_slow_set_allocated_update_time(
    ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** update_time) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*update_time) == NULL) {
      message_arena->Own(*update_time);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*update_time)) {
      ::google::protobuf::Timestamp* new_update_time = 
            ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
            message_arena);
      new_update_time->CopyFrom(**update_time);
      *update_time = new_update_time;
    }
}
void AttributeContext_Resource::unsafe_arena_set_allocated_update_time(
    ::google::protobuf::Timestamp* update_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete update_time_;
  }
  update_time_ = update_time;
  if (update_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Resource.update_time)
}
void AttributeContext_Resource::_slow_mutable_delete_time() {
  delete_time_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
      GetArenaNoVirtual());
}
::google::protobuf::Timestamp* AttributeContext_Resource::_slow_release_delete_time() {
  if (delete_time_ == NULL) {
    return NULL;
  } else {
    ::google::protobuf::Timestamp* temp = new ::google::protobuf::Timestamp(*delete_time_);
    delete_time_ = NULL;
    return temp;
  }
}
::google::protobuf::Timestamp* AttributeContext_Resource::unsafe_arena_release_delete_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Resource.delete_time)
  
  ::google::protobuf::Timestamp* temp = delete_time_;
  delete_time_ = NULL;
  return temp;
}
void AttributeContext_Resource::_slow_set_allocated_delete_time(
    ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** delete_time) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*delete_time) == NULL) {
      message_arena->Own(*delete_time);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*delete_time)) {
      ::google::protobuf::Timestamp* new_delete_time = 
            ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
            message_arena);
      new_delete_time->CopyFrom(**delete_time);
      *delete_time = new_delete_time;
    }
}
void AttributeContext_Resource::unsafe_arena_set_allocated_delete_time(
    ::google::protobuf::Timestamp* delete_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete delete_time_;
  }
  delete_time_ = delete_time;
  if (delete_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Resource.delete_time)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttributeContext_Resource::kServiceFieldNumber;
const int AttributeContext_Resource::kNameFieldNumber;
const int AttributeContext_Resource::kTypeFieldNumber;
const int AttributeContext_Resource::kLabelsFieldNumber;
const int AttributeContext_Resource::kUidFieldNumber;
const int AttributeContext_Resource::kAnnotationsFieldNumber;
const int AttributeContext_Resource::kDisplayNameFieldNumber;
const int AttributeContext_Resource::kCreateTimeFieldNumber;
const int AttributeContext_Resource::kUpdateTimeFieldNumber;
const int AttributeContext_Resource::kDeleteTimeFieldNumber;
const int AttributeContext_Resource::kEtagFieldNumber;
const int AttributeContext_Resource::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttributeContext_Resource::AttributeContext_Resource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.rpc.context.AttributeContext.Resource)
}
AttributeContext_Resource::AttributeContext_Resource(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  labels_(arena),
  annotations_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.rpc.context.AttributeContext.Resource)
}

void AttributeContext_Resource::InitAsDefaultInstance() {
  create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  delete_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}

AttributeContext_Resource::AttributeContext_Resource(const AttributeContext_Resource& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.rpc.context.AttributeContext.Resource)
}

void AttributeContext_Resource::SharedCtor() {
  labels_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  labels_.SetEntryDescriptor(
      &::google::rpc::context::AttributeContext_Resource_LabelsEntry_descriptor_);
  annotations_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  annotations_.SetEntryDescriptor(
      &::google::rpc::context::AttributeContext_Resource_AnnotationsEntry_descriptor_);
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  etag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_time_ = NULL;
  update_time_ = NULL;
  delete_time_ = NULL;
  _cached_size_ = 0;
}

AttributeContext_Resource::~AttributeContext_Resource() {
  // @@protoc_insertion_point(destructor:google.rpc.context.AttributeContext.Resource)
  SharedDtor();
}

void AttributeContext_Resource::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  service_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  type_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  uid_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  display_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  etag_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  location_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != &AttributeContext_Resource_default_instance_.get()) {
    delete create_time_;
    delete update_time_;
    delete delete_time_;
  }
}

void AttributeContext_Resource::ArenaDtor(void* object) {
  AttributeContext_Resource* _this = reinterpret_cast< AttributeContext_Resource* >(object);
  (void)_this;
}
void AttributeContext_Resource::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AttributeContext_Resource::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttributeContext_Resource::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AttributeContext_Resource_descriptor_;
}

const AttributeContext_Resource& AttributeContext_Resource::default_instance() {
  protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AttributeContext_Resource> AttributeContext_Resource_default_instance_;

AttributeContext_Resource* AttributeContext_Resource::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<AttributeContext_Resource>(arena);
}

void AttributeContext_Resource::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.context.AttributeContext.Resource)
  service_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  uid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  display_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) delete create_time_;
  create_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) delete update_time_;
  update_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && delete_time_ != NULL) delete delete_time_;
  delete_time_ = NULL;
  etag_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  location_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  labels_.Clear();
  annotations_.Clear();
}

bool AttributeContext_Resource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.rpc.context.AttributeContext.Resource)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string service = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service().data(), this->service().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Resource.service"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Resource.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_type;
        break;
      }

      // optional string type = 3;
      case 3: {
        if (tag == 26) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Resource.type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_labels;
        break;
      }

      // map<string, string> labels = 4;
      case 4: {
        if (tag == 34) {
         parse_labels:
          DO_(input->IncrementRecursionDepth());
         parse_loop_labels:
          AttributeContext_Resource_LabelsEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Resource.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Resource.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_labels;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(42)) goto parse_uid;
        break;
      }

      // optional string uid = 5;
      case 5: {
        if (tag == 42) {
         parse_uid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uid().data(), this->uid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Resource.uid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_annotations;
        break;
      }

      // map<string, string> annotations = 6;
      case 6: {
        if (tag == 50) {
         parse_annotations:
          DO_(input->IncrementRecursionDepth());
         parse_loop_annotations:
          AttributeContext_Resource_AnnotationsEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&annotations_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Resource.AnnotationsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Resource.AnnotationsEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_annotations;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(58)) goto parse_display_name;
        break;
      }

      // optional string display_name = 7;
      case 7: {
        if (tag == 58) {
         parse_display_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), this->display_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Resource.display_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_create_time;
        break;
      }

      // optional .google.protobuf.Timestamp create_time = 8;
      case 8: {
        if (tag == 66) {
         parse_create_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_update_time;
        break;
      }

      // optional .google.protobuf.Timestamp update_time = 9;
      case 9: {
        if (tag == 74) {
         parse_update_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_delete_time;
        break;
      }

      // optional .google.protobuf.Timestamp delete_time = 10;
      case 10: {
        if (tag == 82) {
         parse_delete_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_delete_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_etag;
        break;
      }

      // optional string etag = 11;
      case 11: {
        if (tag == 90) {
         parse_etag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->etag().data(), this->etag().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Resource.etag"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_location;
        break;
      }

      // optional string location = 12;
      case 12: {
        if (tag == 98) {
         parse_location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location().data(), this->location().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.context.AttributeContext.Resource.location"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.rpc.context.AttributeContext.Resource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.rpc.context.AttributeContext.Resource)
  return false;
#undef DO_
}

void AttributeContext_Resource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.rpc.context.AttributeContext.Resource)
  // optional string service = 1;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), this->service().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Resource.service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Resource.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Resource.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // map<string, string> labels = 4;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Resource.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Resource.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<AttributeContext_Resource_LabelsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<AttributeContext_Resource_LabelsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string uid = 5;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Resource.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->uid(), output);
  }

  // map<string, string> annotations = 6;
  if (!this->annotations().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Resource.AnnotationsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Resource.AnnotationsEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->annotations().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->annotations().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<AttributeContext_Resource_AnnotationsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(annotations_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<AttributeContext_Resource_AnnotationsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it) {
        entry.reset(annotations_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string display_name = 7;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), this->display_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Resource.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->display_name(), output);
  }

  // optional .google.protobuf.Timestamp create_time = 8;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->create_time_, output);
  }

  // optional .google.protobuf.Timestamp update_time = 9;
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->update_time_, output);
  }

  // optional .google.protobuf.Timestamp delete_time = 10;
  if (this->has_delete_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->delete_time_, output);
  }

  // optional string etag = 11;
  if (this->etag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etag().data(), this->etag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Resource.etag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->etag(), output);
  }

  // optional string location = 12;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Resource.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->location(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.rpc.context.AttributeContext.Resource)
}

::google::protobuf::uint8* AttributeContext_Resource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.context.AttributeContext.Resource)
  // optional string service = 1;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), this->service().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Resource.service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Resource.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Resource.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  // map<string, string> labels = 4;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Resource.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Resource.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<AttributeContext_Resource_LabelsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<AttributeContext_Resource_LabelsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string uid = 5;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Resource.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->uid(), target);
  }

  // map<string, string> annotations = 6;
  if (!this->annotations().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Resource.AnnotationsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Resource.AnnotationsEntry.value");
      }
    };

    if (deterministic &&
        this->annotations().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->annotations().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<AttributeContext_Resource_AnnotationsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(annotations_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<AttributeContext_Resource_AnnotationsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it) {
        entry.reset(annotations_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string display_name = 7;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), this->display_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Resource.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->display_name(), target);
  }

  // optional .google.protobuf.Timestamp create_time = 8;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->create_time_, false, target);
  }

  // optional .google.protobuf.Timestamp update_time = 9;
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->update_time_, false, target);
  }

  // optional .google.protobuf.Timestamp delete_time = 10;
  if (this->has_delete_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->delete_time_, false, target);
  }

  // optional string etag = 11;
  if (this->etag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etag().data(), this->etag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Resource.etag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->etag(), target);
  }

  // optional string location = 12;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Resource.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->location(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.context.AttributeContext.Resource)
  return target;
}

size_t AttributeContext_Resource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.context.AttributeContext.Resource)
  size_t total_size = 0;

  // optional string service = 1;
  if (this->service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // optional string uid = 5;
  if (this->uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uid());
  }

  // optional string display_name = 7;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // optional .google.protobuf.Timestamp create_time = 8;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->create_time_);
  }

  // optional .google.protobuf.Timestamp update_time = 9;
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->update_time_);
  }

  // optional .google.protobuf.Timestamp delete_time = 10;
  if (this->has_delete_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->delete_time_);
  }

  // optional string etag = 11;
  if (this->etag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->etag());
  }

  // optional string location = 12;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location());
  }

  // map<string, string> labels = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::google::protobuf::scoped_ptr<AttributeContext_Resource_LabelsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<string, string> annotations = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->annotations_size());
  {
    ::google::protobuf::scoped_ptr<AttributeContext_Resource_AnnotationsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->annotations().begin();
        it != this->annotations().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(annotations_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttributeContext_Resource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.rpc.context.AttributeContext.Resource)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AttributeContext_Resource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttributeContext_Resource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.rpc.context.AttributeContext.Resource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.rpc.context.AttributeContext.Resource)
    UnsafeMergeFrom(*source);
  }
}

void AttributeContext_Resource::MergeFrom(const AttributeContext_Resource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.context.AttributeContext.Resource)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AttributeContext_Resource::UnsafeMergeFrom(const AttributeContext_Resource& from) {
  GOOGLE_DCHECK(&from != this);
  labels_.MergeFrom(from.labels_);
  annotations_.MergeFrom(from.annotations_);
  if (from.service().size() > 0) {
    set_service(from.service());
  }
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.type().size() > 0) {
    set_type(from.type());
  }
  if (from.uid().size() > 0) {
    set_uid(from.uid());
  }
  if (from.display_name().size() > 0) {
    set_display_name(from.display_name());
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
  if (from.has_delete_time()) {
    mutable_delete_time()->::google::protobuf::Timestamp::MergeFrom(from.delete_time());
  }
  if (from.etag().size() > 0) {
    set_etag(from.etag());
  }
  if (from.location().size() > 0) {
    set_location(from.location());
  }
}

void AttributeContext_Resource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.rpc.context.AttributeContext.Resource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttributeContext_Resource::CopyFrom(const AttributeContext_Resource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.context.AttributeContext.Resource)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AttributeContext_Resource::IsInitialized() const {

  return true;
}

void AttributeContext_Resource::Swap(AttributeContext_Resource* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AttributeContext_Resource temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void AttributeContext_Resource::UnsafeArenaSwap(AttributeContext_Resource* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AttributeContext_Resource::InternalSwap(AttributeContext_Resource* other) {
  service_.Swap(&other->service_);
  name_.Swap(&other->name_);
  type_.Swap(&other->type_);
  labels_.Swap(&other->labels_);
  uid_.Swap(&other->uid_);
  annotations_.Swap(&other->annotations_);
  display_name_.Swap(&other->display_name_);
  std::swap(create_time_, other->create_time_);
  std::swap(update_time_, other->update_time_);
  std::swap(delete_time_, other->delete_time_);
  etag_.Swap(&other->etag_);
  location_.Swap(&other->location_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AttributeContext_Resource::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AttributeContext_Resource_descriptor_;
  metadata.reflection = AttributeContext_Resource_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

void AttributeContext::_slow_mutable_origin() {
  origin_ = ::google::protobuf::Arena::CreateMessage< ::google::rpc::context::AttributeContext_Peer >(
      GetArenaNoVirtual());
}
::google::rpc::context::AttributeContext_Peer* AttributeContext::_slow_release_origin() {
  if (origin_ == NULL) {
    return NULL;
  } else {
    ::google::rpc::context::AttributeContext_Peer* temp = new ::google::rpc::context::AttributeContext_Peer(*origin_);
    origin_ = NULL;
    return temp;
  }
}
::google::rpc::context::AttributeContext_Peer* AttributeContext::unsafe_arena_release_origin() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.origin)
  
  ::google::rpc::context::AttributeContext_Peer* temp = origin_;
  origin_ = NULL;
  return temp;
}
void AttributeContext::_slow_set_allocated_origin(
    ::google::protobuf::Arena* message_arena, ::google::rpc::context::AttributeContext_Peer** origin) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*origin) == NULL) {
      message_arena->Own(*origin);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*origin)) {
      ::google::rpc::context::AttributeContext_Peer* new_origin = 
            ::google::protobuf::Arena::CreateMessage< ::google::rpc::context::AttributeContext_Peer >(
            message_arena);
      new_origin->CopyFrom(**origin);
      *origin = new_origin;
    }
}
void AttributeContext::unsafe_arena_set_allocated_origin(
    ::google::rpc::context::AttributeContext_Peer* origin) {
  if (GetArenaNoVirtual() == NULL) {
    delete origin_;
  }
  origin_ = origin;
  if (origin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.origin)
}
void AttributeContext::_slow_mutable_source() {
  source_ = ::google::protobuf::Arena::CreateMessage< ::google::rpc::context::AttributeContext_Peer >(
      GetArenaNoVirtual());
}
::google::rpc::context::AttributeContext_Peer* AttributeContext::_slow_release_source() {
  if (source_ == NULL) {
    return NULL;
  } else {
    ::google::rpc::context::AttributeContext_Peer* temp = new ::google::rpc::context::AttributeContext_Peer(*source_);
    source_ = NULL;
    return temp;
  }
}
::google::rpc::context::AttributeContext_Peer* AttributeContext::unsafe_arena_release_source() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.source)
  
  ::google::rpc::context::AttributeContext_Peer* temp = source_;
  source_ = NULL;
  return temp;
}
void AttributeContext::_slow_set_allocated_source(
    ::google::protobuf::Arena* message_arena, ::google::rpc::context::AttributeContext_Peer** source) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*source) == NULL) {
      message_arena->Own(*source);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*source)) {
      ::google::rpc::context::AttributeContext_Peer* new_source = 
            ::google::protobuf::Arena::CreateMessage< ::google::rpc::context::AttributeContext_Peer >(
            message_arena);
      new_source->CopyFrom(**source);
      *source = new_source;
    }
}
void AttributeContext::unsafe_arena_set_allocated_source(
    ::google::rpc::context::AttributeContext_Peer* source) {
  if (GetArenaNoVirtual() == NULL) {
    delete source_;
  }
  source_ = source;
  if (source) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.source)
}
void AttributeContext::_slow_mutable_destination() {
  destination_ = ::google::protobuf::Arena::CreateMessage< ::google::rpc::context::AttributeContext_Peer >(
      GetArenaNoVirtual());
}
::google::rpc::context::AttributeContext_Peer* AttributeContext::_slow_release_destination() {
  if (destination_ == NULL) {
    return NULL;
  } else {
    ::google::rpc::context::AttributeContext_Peer* temp = new ::google::rpc::context::AttributeContext_Peer(*destination_);
    destination_ = NULL;
    return temp;
  }
}
::google::rpc::context::AttributeContext_Peer* AttributeContext::unsafe_arena_release_destination() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.destination)
  
  ::google::rpc::context::AttributeContext_Peer* temp = destination_;
  destination_ = NULL;
  return temp;
}
void AttributeContext::_slow_set_allocated_destination(
    ::google::protobuf::Arena* message_arena, ::google::rpc::context::AttributeContext_Peer** destination) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*destination) == NULL) {
      message_arena->Own(*destination);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*destination)) {
      ::google::rpc::context::AttributeContext_Peer* new_destination = 
            ::google::protobuf::Arena::CreateMessage< ::google::rpc::context::AttributeContext_Peer >(
            message_arena);
      new_destination->CopyFrom(**destination);
      *destination = new_destination;
    }
}
void AttributeContext::unsafe_arena_set_allocated_destination(
    ::google::rpc::context::AttributeContext_Peer* destination) {
  if (GetArenaNoVirtual() == NULL) {
    delete destination_;
  }
  destination_ = destination;
  if (destination) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.destination)
}
void AttributeContext::_slow_mutable_request() {
  request_ = ::google::protobuf::Arena::CreateMessage< ::google::rpc::context::AttributeContext_Request >(
      GetArenaNoVirtual());
}
::google::rpc::context::AttributeContext_Request* AttributeContext::_slow_release_request() {
  if (request_ == NULL) {
    return NULL;
  } else {
    ::google::rpc::context::AttributeContext_Request* temp = new ::google::rpc::context::AttributeContext_Request(*request_);
    request_ = NULL;
    return temp;
  }
}
::google::rpc::context::AttributeContext_Request* AttributeContext::unsafe_arena_release_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.request)
  
  ::google::rpc::context::AttributeContext_Request* temp = request_;
  request_ = NULL;
  return temp;
}
void AttributeContext::_slow_set_allocated_request(
    ::google::protobuf::Arena* message_arena, ::google::rpc::context::AttributeContext_Request** request) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*request) == NULL) {
      message_arena->Own(*request);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*request)) {
      ::google::rpc::context::AttributeContext_Request* new_request = 
            ::google::protobuf::Arena::CreateMessage< ::google::rpc::context::AttributeContext_Request >(
            message_arena);
      new_request->CopyFrom(**request);
      *request = new_request;
    }
}
void AttributeContext::unsafe_arena_set_allocated_request(
    ::google::rpc::context::AttributeContext_Request* request) {
  if (GetArenaNoVirtual() == NULL) {
    delete request_;
  }
  request_ = request;
  if (request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.request)
}
void AttributeContext::_slow_mutable_response() {
  response_ = ::google::protobuf::Arena::CreateMessage< ::google::rpc::context::AttributeContext_Response >(
      GetArenaNoVirtual());
}
::google::rpc::context::AttributeContext_Response* AttributeContext::_slow_release_response() {
  if (response_ == NULL) {
    return NULL;
  } else {
    ::google::rpc::context::AttributeContext_Response* temp = new ::google::rpc::context::AttributeContext_Response(*response_);
    response_ = NULL;
    return temp;
  }
}
::google::rpc::context::AttributeContext_Response* AttributeContext::unsafe_arena_release_response() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.response)
  
  ::google::rpc::context::AttributeContext_Response* temp = response_;
  response_ = NULL;
  return temp;
}
void AttributeContext::_slow_set_allocated_response(
    ::google::protobuf::Arena* message_arena, ::google::rpc::context::AttributeContext_Response** response) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*response) == NULL) {
      message_arena->Own(*response);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*response)) {
      ::google::rpc::context::AttributeContext_Response* new_response = 
            ::google::protobuf::Arena::CreateMessage< ::google::rpc::context::AttributeContext_Response >(
            message_arena);
      new_response->CopyFrom(**response);
      *response = new_response;
    }
}
void AttributeContext::unsafe_arena_set_allocated_response(
    ::google::rpc::context::AttributeContext_Response* response) {
  if (GetArenaNoVirtual() == NULL) {
    delete response_;
  }
  response_ = response;
  if (response) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.response)
}
void AttributeContext::_slow_mutable_resource() {
  resource_ = ::google::protobuf::Arena::CreateMessage< ::google::rpc::context::AttributeContext_Resource >(
      GetArenaNoVirtual());
}
::google::rpc::context::AttributeContext_Resource* AttributeContext::_slow_release_resource() {
  if (resource_ == NULL) {
    return NULL;
  } else {
    ::google::rpc::context::AttributeContext_Resource* temp = new ::google::rpc::context::AttributeContext_Resource(*resource_);
    resource_ = NULL;
    return temp;
  }
}
::google::rpc::context::AttributeContext_Resource* AttributeContext::unsafe_arena_release_resource() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.resource)
  
  ::google::rpc::context::AttributeContext_Resource* temp = resource_;
  resource_ = NULL;
  return temp;
}
void AttributeContext::_slow_set_allocated_resource(
    ::google::protobuf::Arena* message_arena, ::google::rpc::context::AttributeContext_Resource** resource) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*resource) == NULL) {
      message_arena->Own(*resource);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*resource)) {
      ::google::rpc::context::AttributeContext_Resource* new_resource = 
            ::google::protobuf::Arena::CreateMessage< ::google::rpc::context::AttributeContext_Resource >(
            message_arena);
      new_resource->CopyFrom(**resource);
      *resource = new_resource;
    }
}
void AttributeContext::unsafe_arena_set_allocated_resource(
    ::google::rpc::context::AttributeContext_Resource* resource) {
  if (GetArenaNoVirtual() == NULL) {
    delete resource_;
  }
  resource_ = resource;
  if (resource) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.resource)
}
void AttributeContext::_slow_mutable_api() {
  api_ = ::google::protobuf::Arena::CreateMessage< ::google::rpc::context::AttributeContext_Api >(
      GetArenaNoVirtual());
}
::google::rpc::context::AttributeContext_Api* AttributeContext::_slow_release_api() {
  if (api_ == NULL) {
    return NULL;
  } else {
    ::google::rpc::context::AttributeContext_Api* temp = new ::google::rpc::context::AttributeContext_Api(*api_);
    api_ = NULL;
    return temp;
  }
}
::google::rpc::context::AttributeContext_Api* AttributeContext::unsafe_arena_release_api() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.api)
  
  ::google::rpc::context::AttributeContext_Api* temp = api_;
  api_ = NULL;
  return temp;
}
void AttributeContext::_slow_set_allocated_api(
    ::google::protobuf::Arena* message_arena, ::google::rpc::context::AttributeContext_Api** api) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*api) == NULL) {
      message_arena->Own(*api);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*api)) {
      ::google::rpc::context::AttributeContext_Api* new_api = 
            ::google::protobuf::Arena::CreateMessage< ::google::rpc::context::AttributeContext_Api >(
            message_arena);
      new_api->CopyFrom(**api);
      *api = new_api;
    }
}
void AttributeContext::unsafe_arena_set_allocated_api(
    ::google::rpc::context::AttributeContext_Api* api) {
  if (GetArenaNoVirtual() == NULL) {
    delete api_;
  }
  api_ = api;
  if (api) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.api)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttributeContext::kOriginFieldNumber;
const int AttributeContext::kSourceFieldNumber;
const int AttributeContext::kDestinationFieldNumber;
const int AttributeContext::kRequestFieldNumber;
const int AttributeContext::kResponseFieldNumber;
const int AttributeContext::kResourceFieldNumber;
const int AttributeContext::kApiFieldNumber;
const int AttributeContext::kExtensionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttributeContext::AttributeContext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.rpc.context.AttributeContext)
}
AttributeContext::AttributeContext(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  extensions_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.rpc.context.AttributeContext)
}

void AttributeContext::InitAsDefaultInstance() {
  origin_ = const_cast< ::google::rpc::context::AttributeContext_Peer*>(
      ::google::rpc::context::AttributeContext_Peer::internal_default_instance());
  source_ = const_cast< ::google::rpc::context::AttributeContext_Peer*>(
      ::google::rpc::context::AttributeContext_Peer::internal_default_instance());
  destination_ = const_cast< ::google::rpc::context::AttributeContext_Peer*>(
      ::google::rpc::context::AttributeContext_Peer::internal_default_instance());
  request_ = const_cast< ::google::rpc::context::AttributeContext_Request*>(
      ::google::rpc::context::AttributeContext_Request::internal_default_instance());
  response_ = const_cast< ::google::rpc::context::AttributeContext_Response*>(
      ::google::rpc::context::AttributeContext_Response::internal_default_instance());
  resource_ = const_cast< ::google::rpc::context::AttributeContext_Resource*>(
      ::google::rpc::context::AttributeContext_Resource::internal_default_instance());
  api_ = const_cast< ::google::rpc::context::AttributeContext_Api*>(
      ::google::rpc::context::AttributeContext_Api::internal_default_instance());
}

AttributeContext::AttributeContext(const AttributeContext& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.rpc.context.AttributeContext)
}

void AttributeContext::SharedCtor() {
  origin_ = NULL;
  source_ = NULL;
  destination_ = NULL;
  request_ = NULL;
  response_ = NULL;
  resource_ = NULL;
  api_ = NULL;
  _cached_size_ = 0;
}

AttributeContext::~AttributeContext() {
  // @@protoc_insertion_point(destructor:google.rpc.context.AttributeContext)
  SharedDtor();
}

void AttributeContext::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &AttributeContext_default_instance_.get()) {
    delete origin_;
    delete source_;
    delete destination_;
    delete request_;
    delete response_;
    delete resource_;
    delete api_;
  }
}

void AttributeContext::ArenaDtor(void* object) {
  AttributeContext* _this = reinterpret_cast< AttributeContext* >(object);
  (void)_this;
}
void AttributeContext::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AttributeContext::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttributeContext::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AttributeContext_descriptor_;
}

const AttributeContext& AttributeContext::default_instance() {
  protobuf_InitDefaults_google_2fapi_2frpc_2fcontext_2fattribute_5fcontext_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AttributeContext> AttributeContext_default_instance_;

AttributeContext* AttributeContext::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<AttributeContext>(arena);
}

void AttributeContext::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.context.AttributeContext)
  if (GetArenaNoVirtual() == NULL && origin_ != NULL) delete origin_;
  origin_ = NULL;
  if (GetArenaNoVirtual() == NULL && source_ != NULL) delete source_;
  source_ = NULL;
  if (GetArenaNoVirtual() == NULL && destination_ != NULL) delete destination_;
  destination_ = NULL;
  if (GetArenaNoVirtual() == NULL && request_ != NULL) delete request_;
  request_ = NULL;
  if (GetArenaNoVirtual() == NULL && response_ != NULL) delete response_;
  response_ = NULL;
  if (GetArenaNoVirtual() == NULL && resource_ != NULL) delete resource_;
  resource_ = NULL;
  if (GetArenaNoVirtual() == NULL && api_ != NULL) delete api_;
  api_ = NULL;
  extensions_.Clear();
}

bool AttributeContext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.rpc.context.AttributeContext)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.rpc.context.AttributeContext.Peer source = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_destination;
        break;
      }

      // optional .google.rpc.context.AttributeContext.Peer destination = 2;
      case 2: {
        if (tag == 18) {
         parse_destination:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_destination()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_request;
        break;
      }

      // optional .google.rpc.context.AttributeContext.Request request = 3;
      case 3: {
        if (tag == 26) {
         parse_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_response;
        break;
      }

      // optional .google.rpc.context.AttributeContext.Response response = 4;
      case 4: {
        if (tag == 34) {
         parse_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_response()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_resource;
        break;
      }

      // optional .google.rpc.context.AttributeContext.Resource resource = 5;
      case 5: {
        if (tag == 42) {
         parse_resource:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_api;
        break;
      }

      // optional .google.rpc.context.AttributeContext.Api api = 6;
      case 6: {
        if (tag == 50) {
         parse_api:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_api()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_origin;
        break;
      }

      // optional .google.rpc.context.AttributeContext.Peer origin = 7;
      case 7: {
        if (tag == 58) {
         parse_origin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_origin()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_extensions;
        break;
      }

      // repeated .google.protobuf.Any extensions = 8;
      case 8: {
        if (tag == 66) {
         parse_extensions:
          DO_(input->IncrementRecursionDepth());
         parse_loop_extensions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_extensions()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_loop_extensions;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.rpc.context.AttributeContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.rpc.context.AttributeContext)
  return false;
#undef DO_
}

void AttributeContext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.rpc.context.AttributeContext)
  // optional .google.rpc.context.AttributeContext.Peer source = 1;
  if (this->has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->source_, output);
  }

  // optional .google.rpc.context.AttributeContext.Peer destination = 2;
  if (this->has_destination()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->destination_, output);
  }

  // optional .google.rpc.context.AttributeContext.Request request = 3;
  if (this->has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->request_, output);
  }

  // optional .google.rpc.context.AttributeContext.Response response = 4;
  if (this->has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->response_, output);
  }

  // optional .google.rpc.context.AttributeContext.Resource resource = 5;
  if (this->has_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->resource_, output);
  }

  // optional .google.rpc.context.AttributeContext.Api api = 6;
  if (this->has_api()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->api_, output);
  }

  // optional .google.rpc.context.AttributeContext.Peer origin = 7;
  if (this->has_origin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->origin_, output);
  }

  // repeated .google.protobuf.Any extensions = 8;
  for (unsigned int i = 0, n = this->extensions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->extensions(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.rpc.context.AttributeContext)
}

::google::protobuf::uint8* AttributeContext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.context.AttributeContext)
  // optional .google.rpc.context.AttributeContext.Peer source = 1;
  if (this->has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->source_, false, target);
  }

  // optional .google.rpc.context.AttributeContext.Peer destination = 2;
  if (this->has_destination()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->destination_, false, target);
  }

  // optional .google.rpc.context.AttributeContext.Request request = 3;
  if (this->has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->request_, false, target);
  }

  // optional .google.rpc.context.AttributeContext.Response response = 4;
  if (this->has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->response_, false, target);
  }

  // optional .google.rpc.context.AttributeContext.Resource resource = 5;
  if (this->has_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->resource_, false, target);
  }

  // optional .google.rpc.context.AttributeContext.Api api = 6;
  if (this->has_api()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->api_, false, target);
  }

  // optional .google.rpc.context.AttributeContext.Peer origin = 7;
  if (this->has_origin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->origin_, false, target);
  }

  // repeated .google.protobuf.Any extensions = 8;
  for (unsigned int i = 0, n = this->extensions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->extensions(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.context.AttributeContext)
  return target;
}

size_t AttributeContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.context.AttributeContext)
  size_t total_size = 0;

  // optional .google.rpc.context.AttributeContext.Peer origin = 7;
  if (this->has_origin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->origin_);
  }

  // optional .google.rpc.context.AttributeContext.Peer source = 1;
  if (this->has_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->source_);
  }

  // optional .google.rpc.context.AttributeContext.Peer destination = 2;
  if (this->has_destination()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->destination_);
  }

  // optional .google.rpc.context.AttributeContext.Request request = 3;
  if (this->has_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->request_);
  }

  // optional .google.rpc.context.AttributeContext.Response response = 4;
  if (this->has_response()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->response_);
  }

  // optional .google.rpc.context.AttributeContext.Resource resource = 5;
  if (this->has_resource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->resource_);
  }

  // optional .google.rpc.context.AttributeContext.Api api = 6;
  if (this->has_api()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->api_);
  }

  // repeated .google.protobuf.Any extensions = 8;
  {
    unsigned int count = this->extensions_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->extensions(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttributeContext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.rpc.context.AttributeContext)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AttributeContext* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttributeContext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.rpc.context.AttributeContext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.rpc.context.AttributeContext)
    UnsafeMergeFrom(*source);
  }
}

void AttributeContext::MergeFrom(const AttributeContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.context.AttributeContext)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AttributeContext::UnsafeMergeFrom(const AttributeContext& from) {
  GOOGLE_DCHECK(&from != this);
  extensions_.MergeFrom(from.extensions_);
  if (from.has_origin()) {
    mutable_origin()->::google::rpc::context::AttributeContext_Peer::MergeFrom(from.origin());
  }
  if (from.has_source()) {
    mutable_source()->::google::rpc::context::AttributeContext_Peer::MergeFrom(from.source());
  }
  if (from.has_destination()) {
    mutable_destination()->::google::rpc::context::AttributeContext_Peer::MergeFrom(from.destination());
  }
  if (from.has_request()) {
    mutable_request()->::google::rpc::context::AttributeContext_Request::MergeFrom(from.request());
  }
  if (from.has_response()) {
    mutable_response()->::google::rpc::context::AttributeContext_Response::MergeFrom(from.response());
  }
  if (from.has_resource()) {
    mutable_resource()->::google::rpc::context::AttributeContext_Resource::MergeFrom(from.resource());
  }
  if (from.has_api()) {
    mutable_api()->::google::rpc::context::AttributeContext_Api::MergeFrom(from.api());
  }
}

void AttributeContext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.rpc.context.AttributeContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttributeContext::CopyFrom(const AttributeContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.context.AttributeContext)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AttributeContext::IsInitialized() const {

  return true;
}

void AttributeContext::Swap(AttributeContext* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AttributeContext temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void AttributeContext::UnsafeArenaSwap(AttributeContext* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AttributeContext::InternalSwap(AttributeContext* other) {
  std::swap(origin_, other->origin_);
  std::swap(source_, other->source_);
  std::swap(destination_, other->destination_);
  std::swap(request_, other->request_);
  std::swap(response_, other->response_);
  std::swap(resource_, other->resource_);
  std::swap(api_, other->api_);
  extensions_.UnsafeArenaSwap(&other->extensions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AttributeContext::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AttributeContext_descriptor_;
  metadata.reflection = AttributeContext_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AttributeContext_Peer

// optional string ip = 1;
void AttributeContext_Peer::clear_ip() {
  ip_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AttributeContext_Peer::ip() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Peer.ip)
  return ip_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeContext_Peer::set_ip(const ::std::string& value) {
  
  ip_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Peer.ip)
}
void AttributeContext_Peer::set_ip(const char* value) {
  
  ip_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Peer.ip)
}
void AttributeContext_Peer::set_ip(const char* value,
    size_t size) {
  
  ip_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Peer.ip)
}
::std::string* AttributeContext_Peer::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Peer.ip)
  return ip_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Peer::release_ip() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Peer.ip)
  
  return ip_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Peer::unsafe_arena_release_ip() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Peer.ip)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return ip_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AttributeContext_Peer::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Peer.ip)
}
void AttributeContext_Peer::unsafe_arena_set_allocated_ip(
    ::std::string* ip) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ip, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Peer.ip)
}

// optional int64 port = 2;
void AttributeContext_Peer::clear_port() {
  port_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AttributeContext_Peer::port() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Peer.port)
  return port_;
}
void AttributeContext_Peer::set_port(::google::protobuf::int64 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Peer.port)
}

// map<string, string> labels = 6;
int AttributeContext_Peer::labels_size() const {
  return labels_.size();
}
void AttributeContext_Peer::clear_labels() {
  labels_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
AttributeContext_Peer::labels() const {
  // @@protoc_insertion_point(field_map:google.rpc.context.AttributeContext.Peer.labels)
  return labels_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
AttributeContext_Peer::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.rpc.context.AttributeContext.Peer.labels)
  return labels_.MutableMap();
}

// optional string principal = 7;
void AttributeContext_Peer::clear_principal() {
  principal_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AttributeContext_Peer::principal() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Peer.principal)
  return principal_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeContext_Peer::set_principal(const ::std::string& value) {
  
  principal_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Peer.principal)
}
void AttributeContext_Peer::set_principal(const char* value) {
  
  principal_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Peer.principal)
}
void AttributeContext_Peer::set_principal(const char* value,
    size_t size) {
  
  principal_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Peer.principal)
}
::std::string* AttributeContext_Peer::mutable_principal() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Peer.principal)
  return principal_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Peer::release_principal() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Peer.principal)
  
  return principal_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Peer::unsafe_arena_release_principal() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Peer.principal)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return principal_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AttributeContext_Peer::set_allocated_principal(::std::string* principal) {
  if (principal != NULL) {
    
  } else {
    
  }
  principal_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), principal,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Peer.principal)
}
void AttributeContext_Peer::unsafe_arena_set_allocated_principal(
    ::std::string* principal) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (principal != NULL) {
    
  } else {
    
  }
  principal_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      principal, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Peer.principal)
}

// optional string region_code = 8;
void AttributeContext_Peer::clear_region_code() {
  region_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AttributeContext_Peer::region_code() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Peer.region_code)
  return region_code_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeContext_Peer::set_region_code(const ::std::string& value) {
  
  region_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Peer.region_code)
}
void AttributeContext_Peer::set_region_code(const char* value) {
  
  region_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Peer.region_code)
}
void AttributeContext_Peer::set_region_code(const char* value,
    size_t size) {
  
  region_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Peer.region_code)
}
::std::string* AttributeContext_Peer::mutable_region_code() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Peer.region_code)
  return region_code_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Peer::release_region_code() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Peer.region_code)
  
  return region_code_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Peer::unsafe_arena_release_region_code() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Peer.region_code)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return region_code_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AttributeContext_Peer::set_allocated_region_code(::std::string* region_code) {
  if (region_code != NULL) {
    
  } else {
    
  }
  region_code_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region_code,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Peer.region_code)
}
void AttributeContext_Peer::unsafe_arena_set_allocated_region_code(
    ::std::string* region_code) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (region_code != NULL) {
    
  } else {
    
  }
  region_code_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      region_code, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Peer.region_code)
}

inline const AttributeContext_Peer* AttributeContext_Peer::internal_default_instance() {
  return &AttributeContext_Peer_default_instance_.get();
}
// -------------------------------------------------------------------

// AttributeContext_Api

// optional string service = 1;
void AttributeContext_Api::clear_service() {
  service_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AttributeContext_Api::service() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Api.service)
  return service_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeContext_Api::set_service(const ::std::string& value) {
  
  service_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Api.service)
}
void AttributeContext_Api::set_service(const char* value) {
  
  service_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Api.service)
}
void AttributeContext_Api::set_service(const char* value,
    size_t size) {
  
  service_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Api.service)
}
::std::string* AttributeContext_Api::mutable_service() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Api.service)
  return service_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Api::release_service() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Api.service)
  
  return service_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Api::unsafe_arena_release_service() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Api.service)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return service_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AttributeContext_Api::set_allocated_service(::std::string* service) {
  if (service != NULL) {
    
  } else {
    
  }
  service_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Api.service)
}
void AttributeContext_Api::unsafe_arena_set_allocated_service(
    ::std::string* service) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (service != NULL) {
    
  } else {
    
  }
  service_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      service, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Api.service)
}

// optional string operation = 2;
void AttributeContext_Api::clear_operation() {
  operation_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AttributeContext_Api::operation() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Api.operation)
  return operation_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeContext_Api::set_operation(const ::std::string& value) {
  
  operation_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Api.operation)
}
void AttributeContext_Api::set_operation(const char* value) {
  
  operation_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Api.operation)
}
void AttributeContext_Api::set_operation(const char* value,
    size_t size) {
  
  operation_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Api.operation)
}
::std::string* AttributeContext_Api::mutable_operation() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Api.operation)
  return operation_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Api::release_operation() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Api.operation)
  
  return operation_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Api::unsafe_arena_release_operation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Api.operation)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return operation_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AttributeContext_Api::set_allocated_operation(::std::string* operation) {
  if (operation != NULL) {
    
  } else {
    
  }
  operation_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operation,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Api.operation)
}
void AttributeContext_Api::unsafe_arena_set_allocated_operation(
    ::std::string* operation) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (operation != NULL) {
    
  } else {
    
  }
  operation_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      operation, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Api.operation)
}

// optional string protocol = 3;
void AttributeContext_Api::clear_protocol() {
  protocol_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AttributeContext_Api::protocol() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Api.protocol)
  return protocol_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeContext_Api::set_protocol(const ::std::string& value) {
  
  protocol_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Api.protocol)
}
void AttributeContext_Api::set_protocol(const char* value) {
  
  protocol_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Api.protocol)
}
void AttributeContext_Api::set_protocol(const char* value,
    size_t size) {
  
  protocol_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Api.protocol)
}
::std::string* AttributeContext_Api::mutable_protocol() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Api.protocol)
  return protocol_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Api::release_protocol() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Api.protocol)
  
  return protocol_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Api::unsafe_arena_release_protocol() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Api.protocol)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return protocol_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AttributeContext_Api::set_allocated_protocol(::std::string* protocol) {
  if (protocol != NULL) {
    
  } else {
    
  }
  protocol_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), protocol,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Api.protocol)
}
void AttributeContext_Api::unsafe_arena_set_allocated_protocol(
    ::std::string* protocol) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (protocol != NULL) {
    
  } else {
    
  }
  protocol_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      protocol, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Api.protocol)
}

// optional string version = 4;
void AttributeContext_Api::clear_version() {
  version_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AttributeContext_Api::version() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Api.version)
  return version_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeContext_Api::set_version(const ::std::string& value) {
  
  version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Api.version)
}
void AttributeContext_Api::set_version(const char* value) {
  
  version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Api.version)
}
void AttributeContext_Api::set_version(const char* value,
    size_t size) {
  
  version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Api.version)
}
::std::string* AttributeContext_Api::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Api.version)
  return version_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Api::release_version() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Api.version)
  
  return version_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Api::unsafe_arena_release_version() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Api.version)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return version_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AttributeContext_Api::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Api.version)
}
void AttributeContext_Api::unsafe_arena_set_allocated_version(
    ::std::string* version) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (version != NULL) {
    
  } else {
    
  }
  version_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      version, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Api.version)
}

inline const AttributeContext_Api* AttributeContext_Api::internal_default_instance() {
  return &AttributeContext_Api_default_instance_.get();
}
// -------------------------------------------------------------------

// AttributeContext_Auth

// optional string principal = 1;
void AttributeContext_Auth::clear_principal() {
  principal_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AttributeContext_Auth::principal() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Auth.principal)
  return principal_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeContext_Auth::set_principal(const ::std::string& value) {
  
  principal_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Auth.principal)
}
void AttributeContext_Auth::set_principal(const char* value) {
  
  principal_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Auth.principal)
}
void AttributeContext_Auth::set_principal(const char* value,
    size_t size) {
  
  principal_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Auth.principal)
}
::std::string* AttributeContext_Auth::mutable_principal() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Auth.principal)
  return principal_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Auth::release_principal() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Auth.principal)
  
  return principal_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Auth::unsafe_arena_release_principal() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Auth.principal)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return principal_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AttributeContext_Auth::set_allocated_principal(::std::string* principal) {
  if (principal != NULL) {
    
  } else {
    
  }
  principal_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), principal,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Auth.principal)
}
void AttributeContext_Auth::unsafe_arena_set_allocated_principal(
    ::std::string* principal) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (principal != NULL) {
    
  } else {
    
  }
  principal_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      principal, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Auth.principal)
}

// repeated string audiences = 2;
int AttributeContext_Auth::audiences_size() const {
  return audiences_.size();
}
void AttributeContext_Auth::clear_audiences() {
  audiences_.Clear();
}
const ::std::string& AttributeContext_Auth::audiences(int index) const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Auth.audiences)
  return audiences_.Get(index);
}
::std::string* AttributeContext_Auth::mutable_audiences(int index) {
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Auth.audiences)
  return audiences_.Mutable(index);
}
void AttributeContext_Auth::set_audiences(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Auth.audiences)
  audiences_.Mutable(index)->assign(value);
}
void AttributeContext_Auth::set_audiences(int index, const char* value) {
  audiences_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Auth.audiences)
}
void AttributeContext_Auth::set_audiences(int index, const char* value, size_t size) {
  audiences_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Auth.audiences)
}
::std::string* AttributeContext_Auth::add_audiences() {
  // @@protoc_insertion_point(field_add_mutable:google.rpc.context.AttributeContext.Auth.audiences)
  return audiences_.Add();
}
void AttributeContext_Auth::add_audiences(const ::std::string& value) {
  audiences_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.rpc.context.AttributeContext.Auth.audiences)
}
void AttributeContext_Auth::add_audiences(const char* value) {
  audiences_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.rpc.context.AttributeContext.Auth.audiences)
}
void AttributeContext_Auth::add_audiences(const char* value, size_t size) {
  audiences_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.rpc.context.AttributeContext.Auth.audiences)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AttributeContext_Auth::audiences() const {
  // @@protoc_insertion_point(field_list:google.rpc.context.AttributeContext.Auth.audiences)
  return audiences_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AttributeContext_Auth::mutable_audiences() {
  // @@protoc_insertion_point(field_mutable_list:google.rpc.context.AttributeContext.Auth.audiences)
  return &audiences_;
}

// optional string presenter = 3;
void AttributeContext_Auth::clear_presenter() {
  presenter_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AttributeContext_Auth::presenter() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Auth.presenter)
  return presenter_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeContext_Auth::set_presenter(const ::std::string& value) {
  
  presenter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Auth.presenter)
}
void AttributeContext_Auth::set_presenter(const char* value) {
  
  presenter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Auth.presenter)
}
void AttributeContext_Auth::set_presenter(const char* value,
    size_t size) {
  
  presenter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Auth.presenter)
}
::std::string* AttributeContext_Auth::mutable_presenter() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Auth.presenter)
  return presenter_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Auth::release_presenter() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Auth.presenter)
  
  return presenter_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Auth::unsafe_arena_release_presenter() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Auth.presenter)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return presenter_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AttributeContext_Auth::set_allocated_presenter(::std::string* presenter) {
  if (presenter != NULL) {
    
  } else {
    
  }
  presenter_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), presenter,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Auth.presenter)
}
void AttributeContext_Auth::unsafe_arena_set_allocated_presenter(
    ::std::string* presenter) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (presenter != NULL) {
    
  } else {
    
  }
  presenter_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      presenter, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Auth.presenter)
}

// optional .google.protobuf.Struct claims = 4;
bool AttributeContext_Auth::has_claims() const {
  return this != internal_default_instance() && claims_ != NULL;
}
void AttributeContext_Auth::clear_claims() {
  if (GetArenaNoVirtual() == NULL && claims_ != NULL) delete claims_;
  claims_ = NULL;
}
const ::google::protobuf::Struct& AttributeContext_Auth::claims() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Auth.claims)
  return claims_ != NULL ? *claims_
                         : *::google::protobuf::Struct::internal_default_instance();
}
::google::protobuf::Struct* AttributeContext_Auth::mutable_claims() {
  
  if (claims_ == NULL) {
    _slow_mutable_claims();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Auth.claims)
  return claims_;
}
::google::protobuf::Struct* AttributeContext_Auth::release_claims() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Auth.claims)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_claims();
  } else {
    ::google::protobuf::Struct* temp = claims_;
    claims_ = NULL;
    return temp;
  }
}
 void AttributeContext_Auth::set_allocated_claims(::google::protobuf::Struct* claims) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete claims_;
  }
  if (claims != NULL) {
    _slow_set_allocated_claims(message_arena, &claims);
  }
  claims_ = claims;
  if (claims) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Auth.claims)
}

// repeated string access_levels = 5;
int AttributeContext_Auth::access_levels_size() const {
  return access_levels_.size();
}
void AttributeContext_Auth::clear_access_levels() {
  access_levels_.Clear();
}
const ::std::string& AttributeContext_Auth::access_levels(int index) const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Auth.access_levels)
  return access_levels_.Get(index);
}
::std::string* AttributeContext_Auth::mutable_access_levels(int index) {
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Auth.access_levels)
  return access_levels_.Mutable(index);
}
void AttributeContext_Auth::set_access_levels(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Auth.access_levels)
  access_levels_.Mutable(index)->assign(value);
}
void AttributeContext_Auth::set_access_levels(int index, const char* value) {
  access_levels_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Auth.access_levels)
}
void AttributeContext_Auth::set_access_levels(int index, const char* value, size_t size) {
  access_levels_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Auth.access_levels)
}
::std::string* AttributeContext_Auth::add_access_levels() {
  // @@protoc_insertion_point(field_add_mutable:google.rpc.context.AttributeContext.Auth.access_levels)
  return access_levels_.Add();
}
void AttributeContext_Auth::add_access_levels(const ::std::string& value) {
  access_levels_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.rpc.context.AttributeContext.Auth.access_levels)
}
void AttributeContext_Auth::add_access_levels(const char* value) {
  access_levels_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.rpc.context.AttributeContext.Auth.access_levels)
}
void AttributeContext_Auth::add_access_levels(const char* value, size_t size) {
  access_levels_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.rpc.context.AttributeContext.Auth.access_levels)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AttributeContext_Auth::access_levels() const {
  // @@protoc_insertion_point(field_list:google.rpc.context.AttributeContext.Auth.access_levels)
  return access_levels_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AttributeContext_Auth::mutable_access_levels() {
  // @@protoc_insertion_point(field_mutable_list:google.rpc.context.AttributeContext.Auth.access_levels)
  return &access_levels_;
}

inline const AttributeContext_Auth* AttributeContext_Auth::internal_default_instance() {
  return &AttributeContext_Auth_default_instance_.get();
}
// -------------------------------------------------------------------

// AttributeContext_Request

// optional string id = 1;
void AttributeContext_Request::clear_id() {
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AttributeContext_Request::id() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Request.id)
  return id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeContext_Request::set_id(const ::std::string& value) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Request.id)
}
void AttributeContext_Request::set_id(const char* value) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Request.id)
}
void AttributeContext_Request::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Request.id)
}
::std::string* AttributeContext_Request::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Request.id)
  return id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Request::release_id() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Request.id)
  
  return id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Request::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Request.id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AttributeContext_Request::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Request.id)
}
void AttributeContext_Request::unsafe_arena_set_allocated_id(
    ::std::string* id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (id != NULL) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Request.id)
}

// optional string method = 2;
void AttributeContext_Request::clear_method() {
  method_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AttributeContext_Request::method() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Request.method)
  return method_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeContext_Request::set_method(const ::std::string& value) {
  
  method_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Request.method)
}
void AttributeContext_Request::set_method(const char* value) {
  
  method_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Request.method)
}
void AttributeContext_Request::set_method(const char* value,
    size_t size) {
  
  method_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Request.method)
}
::std::string* AttributeContext_Request::mutable_method() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Request.method)
  return method_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Request::release_method() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Request.method)
  
  return method_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Request::unsafe_arena_release_method() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Request.method)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return method_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AttributeContext_Request::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    
  } else {
    
  }
  method_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Request.method)
}
void AttributeContext_Request::unsafe_arena_set_allocated_method(
    ::std::string* method) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (method != NULL) {
    
  } else {
    
  }
  method_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      method, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Request.method)
}

// map<string, string> headers = 3;
int AttributeContext_Request::headers_size() const {
  return headers_.size();
}
void AttributeContext_Request::clear_headers() {
  headers_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
AttributeContext_Request::headers() const {
  // @@protoc_insertion_point(field_map:google.rpc.context.AttributeContext.Request.headers)
  return headers_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
AttributeContext_Request::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_map:google.rpc.context.AttributeContext.Request.headers)
  return headers_.MutableMap();
}

// optional string path = 4;
void AttributeContext_Request::clear_path() {
  path_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AttributeContext_Request::path() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Request.path)
  return path_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeContext_Request::set_path(const ::std::string& value) {
  
  path_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Request.path)
}
void AttributeContext_Request::set_path(const char* value) {
  
  path_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Request.path)
}
void AttributeContext_Request::set_path(const char* value,
    size_t size) {
  
  path_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Request.path)
}
::std::string* AttributeContext_Request::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Request.path)
  return path_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Request::release_path() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Request.path)
  
  return path_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Request::unsafe_arena_release_path() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Request.path)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return path_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AttributeContext_Request::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Request.path)
}
void AttributeContext_Request::unsafe_arena_set_allocated_path(
    ::std::string* path) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (path != NULL) {
    
  } else {
    
  }
  path_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      path, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Request.path)
}

// optional string host = 5;
void AttributeContext_Request::clear_host() {
  host_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AttributeContext_Request::host() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Request.host)
  return host_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeContext_Request::set_host(const ::std::string& value) {
  
  host_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Request.host)
}
void AttributeContext_Request::set_host(const char* value) {
  
  host_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Request.host)
}
void AttributeContext_Request::set_host(const char* value,
    size_t size) {
  
  host_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Request.host)
}
::std::string* AttributeContext_Request::mutable_host() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Request.host)
  return host_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Request::release_host() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Request.host)
  
  return host_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Request::unsafe_arena_release_host() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Request.host)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return host_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AttributeContext_Request::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    
  } else {
    
  }
  host_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Request.host)
}
void AttributeContext_Request::unsafe_arena_set_allocated_host(
    ::std::string* host) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (host != NULL) {
    
  } else {
    
  }
  host_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      host, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Request.host)
}

// optional string scheme = 6;
void AttributeContext_Request::clear_scheme() {
  scheme_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AttributeContext_Request::scheme() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Request.scheme)
  return scheme_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeContext_Request::set_scheme(const ::std::string& value) {
  
  scheme_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Request.scheme)
}
void AttributeContext_Request::set_scheme(const char* value) {
  
  scheme_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Request.scheme)
}
void AttributeContext_Request::set_scheme(const char* value,
    size_t size) {
  
  scheme_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Request.scheme)
}
::std::string* AttributeContext_Request::mutable_scheme() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Request.scheme)
  return scheme_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Request::release_scheme() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Request.scheme)
  
  return scheme_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Request::unsafe_arena_release_scheme() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Request.scheme)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return scheme_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AttributeContext_Request::set_allocated_scheme(::std::string* scheme) {
  if (scheme != NULL) {
    
  } else {
    
  }
  scheme_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scheme,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Request.scheme)
}
void AttributeContext_Request::unsafe_arena_set_allocated_scheme(
    ::std::string* scheme) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (scheme != NULL) {
    
  } else {
    
  }
  scheme_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      scheme, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Request.scheme)
}

// optional string query = 7;
void AttributeContext_Request::clear_query() {
  query_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AttributeContext_Request::query() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Request.query)
  return query_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeContext_Request::set_query(const ::std::string& value) {
  
  query_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Request.query)
}
void AttributeContext_Request::set_query(const char* value) {
  
  query_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Request.query)
}
void AttributeContext_Request::set_query(const char* value,
    size_t size) {
  
  query_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Request.query)
}
::std::string* AttributeContext_Request::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Request.query)
  return query_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Request::release_query() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Request.query)
  
  return query_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Request::unsafe_arena_release_query() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Request.query)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return query_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AttributeContext_Request::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Request.query)
}
void AttributeContext_Request::unsafe_arena_set_allocated_query(
    ::std::string* query) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (query != NULL) {
    
  } else {
    
  }
  query_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      query, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Request.query)
}

// optional .google.protobuf.Timestamp time = 9;
bool AttributeContext_Request::has_time() const {
  return this != internal_default_instance() && time_ != NULL;
}
void AttributeContext_Request::clear_time() {
  if (GetArenaNoVirtual() == NULL && time_ != NULL) delete time_;
  time_ = NULL;
}
const ::google::protobuf::Timestamp& AttributeContext_Request::time() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Request.time)
  return time_ != NULL ? *time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* AttributeContext_Request::mutable_time() {
  
  if (time_ == NULL) {
    _slow_mutable_time();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Request.time)
  return time_;
}
::google::protobuf::Timestamp* AttributeContext_Request::release_time() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Request.time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_time();
  } else {
    ::google::protobuf::Timestamp* temp = time_;
    time_ = NULL;
    return temp;
  }
}
 void AttributeContext_Request::set_allocated_time(::google::protobuf::Timestamp* time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete time_;
  }
  if (time != NULL) {
    _slow_set_allocated_time(message_arena, &time);
  }
  time_ = time;
  if (time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Request.time)
}

// optional int64 size = 10;
void AttributeContext_Request::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AttributeContext_Request::size() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Request.size)
  return size_;
}
void AttributeContext_Request::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Request.size)
}

// optional string protocol = 11;
void AttributeContext_Request::clear_protocol() {
  protocol_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AttributeContext_Request::protocol() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Request.protocol)
  return protocol_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeContext_Request::set_protocol(const ::std::string& value) {
  
  protocol_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Request.protocol)
}
void AttributeContext_Request::set_protocol(const char* value) {
  
  protocol_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Request.protocol)
}
void AttributeContext_Request::set_protocol(const char* value,
    size_t size) {
  
  protocol_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Request.protocol)
}
::std::string* AttributeContext_Request::mutable_protocol() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Request.protocol)
  return protocol_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Request::release_protocol() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Request.protocol)
  
  return protocol_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Request::unsafe_arena_release_protocol() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Request.protocol)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return protocol_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AttributeContext_Request::set_allocated_protocol(::std::string* protocol) {
  if (protocol != NULL) {
    
  } else {
    
  }
  protocol_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), protocol,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Request.protocol)
}
void AttributeContext_Request::unsafe_arena_set_allocated_protocol(
    ::std::string* protocol) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (protocol != NULL) {
    
  } else {
    
  }
  protocol_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      protocol, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Request.protocol)
}

// optional string reason = 12;
void AttributeContext_Request::clear_reason() {
  reason_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AttributeContext_Request::reason() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Request.reason)
  return reason_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeContext_Request::set_reason(const ::std::string& value) {
  
  reason_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Request.reason)
}
void AttributeContext_Request::set_reason(const char* value) {
  
  reason_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Request.reason)
}
void AttributeContext_Request::set_reason(const char* value,
    size_t size) {
  
  reason_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Request.reason)
}
::std::string* AttributeContext_Request::mutable_reason() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Request.reason)
  return reason_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Request::release_reason() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Request.reason)
  
  return reason_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Request::unsafe_arena_release_reason() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Request.reason)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return reason_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AttributeContext_Request::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    
  } else {
    
  }
  reason_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Request.reason)
}
void AttributeContext_Request::unsafe_arena_set_allocated_reason(
    ::std::string* reason) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reason != NULL) {
    
  } else {
    
  }
  reason_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reason, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Request.reason)
}

// optional .google.rpc.context.AttributeContext.Auth auth = 13;
bool AttributeContext_Request::has_auth() const {
  return this != internal_default_instance() && auth_ != NULL;
}
void AttributeContext_Request::clear_auth() {
  if (GetArenaNoVirtual() == NULL && auth_ != NULL) delete auth_;
  auth_ = NULL;
}
const ::google::rpc::context::AttributeContext_Auth& AttributeContext_Request::auth() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Request.auth)
  return auth_ != NULL ? *auth_
                         : *::google::rpc::context::AttributeContext_Auth::internal_default_instance();
}
::google::rpc::context::AttributeContext_Auth* AttributeContext_Request::mutable_auth() {
  
  if (auth_ == NULL) {
    _slow_mutable_auth();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Request.auth)
  return auth_;
}
::google::rpc::context::AttributeContext_Auth* AttributeContext_Request::release_auth() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Request.auth)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_auth();
  } else {
    ::google::rpc::context::AttributeContext_Auth* temp = auth_;
    auth_ = NULL;
    return temp;
  }
}
 void AttributeContext_Request::set_allocated_auth(::google::rpc::context::AttributeContext_Auth* auth) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete auth_;
  }
  if (auth != NULL) {
    _slow_set_allocated_auth(message_arena, &auth);
  }
  auth_ = auth;
  if (auth) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Request.auth)
}

inline const AttributeContext_Request* AttributeContext_Request::internal_default_instance() {
  return &AttributeContext_Request_default_instance_.get();
}
// -------------------------------------------------------------------

// AttributeContext_Response

// optional int64 code = 1;
void AttributeContext_Response::clear_code() {
  code_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AttributeContext_Response::code() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Response.code)
  return code_;
}
void AttributeContext_Response::set_code(::google::protobuf::int64 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Response.code)
}

// optional int64 size = 2;
void AttributeContext_Response::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AttributeContext_Response::size() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Response.size)
  return size_;
}
void AttributeContext_Response::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Response.size)
}

// map<string, string> headers = 3;
int AttributeContext_Response::headers_size() const {
  return headers_.size();
}
void AttributeContext_Response::clear_headers() {
  headers_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
AttributeContext_Response::headers() const {
  // @@protoc_insertion_point(field_map:google.rpc.context.AttributeContext.Response.headers)
  return headers_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
AttributeContext_Response::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_map:google.rpc.context.AttributeContext.Response.headers)
  return headers_.MutableMap();
}

// optional .google.protobuf.Timestamp time = 4;
bool AttributeContext_Response::has_time() const {
  return this != internal_default_instance() && time_ != NULL;
}
void AttributeContext_Response::clear_time() {
  if (GetArenaNoVirtual() == NULL && time_ != NULL) delete time_;
  time_ = NULL;
}
const ::google::protobuf::Timestamp& AttributeContext_Response::time() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Response.time)
  return time_ != NULL ? *time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* AttributeContext_Response::mutable_time() {
  
  if (time_ == NULL) {
    _slow_mutable_time();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Response.time)
  return time_;
}
::google::protobuf::Timestamp* AttributeContext_Response::release_time() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Response.time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_time();
  } else {
    ::google::protobuf::Timestamp* temp = time_;
    time_ = NULL;
    return temp;
  }
}
 void AttributeContext_Response::set_allocated_time(::google::protobuf::Timestamp* time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete time_;
  }
  if (time != NULL) {
    _slow_set_allocated_time(message_arena, &time);
  }
  time_ = time;
  if (time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Response.time)
}

// optional .google.protobuf.Duration backend_latency = 5;
bool AttributeContext_Response::has_backend_latency() const {
  return this != internal_default_instance() && backend_latency_ != NULL;
}
void AttributeContext_Response::clear_backend_latency() {
  if (GetArenaNoVirtual() == NULL && backend_latency_ != NULL) delete backend_latency_;
  backend_latency_ = NULL;
}
const ::google::protobuf::Duration& AttributeContext_Response::backend_latency() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Response.backend_latency)
  return backend_latency_ != NULL ? *backend_latency_
                         : *::google::protobuf::Duration::internal_default_instance();
}
::google::protobuf::Duration* AttributeContext_Response::mutable_backend_latency() {
  
  if (backend_latency_ == NULL) {
    _slow_mutable_backend_latency();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Response.backend_latency)
  return backend_latency_;
}
::google::protobuf::Duration* AttributeContext_Response::release_backend_latency() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Response.backend_latency)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_backend_latency();
  } else {
    ::google::protobuf::Duration* temp = backend_latency_;
    backend_latency_ = NULL;
    return temp;
  }
}
 void AttributeContext_Response::set_allocated_backend_latency(::google::protobuf::Duration* backend_latency) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete backend_latency_;
  }
  if (backend_latency != NULL) {
    _slow_set_allocated_backend_latency(message_arena, &backend_latency);
  }
  backend_latency_ = backend_latency;
  if (backend_latency) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Response.backend_latency)
}

inline const AttributeContext_Response* AttributeContext_Response::internal_default_instance() {
  return &AttributeContext_Response_default_instance_.get();
}
// -------------------------------------------------------------------

// AttributeContext_Resource

// optional string service = 1;
void AttributeContext_Resource::clear_service() {
  service_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AttributeContext_Resource::service() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Resource.service)
  return service_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeContext_Resource::set_service(const ::std::string& value) {
  
  service_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Resource.service)
}
void AttributeContext_Resource::set_service(const char* value) {
  
  service_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Resource.service)
}
void AttributeContext_Resource::set_service(const char* value,
    size_t size) {
  
  service_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Resource.service)
}
::std::string* AttributeContext_Resource::mutable_service() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Resource.service)
  return service_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Resource::release_service() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Resource.service)
  
  return service_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Resource::unsafe_arena_release_service() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Resource.service)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return service_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AttributeContext_Resource::set_allocated_service(::std::string* service) {
  if (service != NULL) {
    
  } else {
    
  }
  service_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Resource.service)
}
void AttributeContext_Resource::unsafe_arena_set_allocated_service(
    ::std::string* service) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (service != NULL) {
    
  } else {
    
  }
  service_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      service, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Resource.service)
}

// optional string name = 2;
void AttributeContext_Resource::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AttributeContext_Resource::name() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Resource.name)
  return name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeContext_Resource::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Resource.name)
}
void AttributeContext_Resource::set_name(const char* value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Resource.name)
}
void AttributeContext_Resource::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Resource.name)
}
::std::string* AttributeContext_Resource::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Resource.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Resource::release_name() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Resource.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Resource::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Resource.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AttributeContext_Resource::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Resource.name)
}
void AttributeContext_Resource::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Resource.name)
}

// optional string type = 3;
void AttributeContext_Resource::clear_type() {
  type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AttributeContext_Resource::type() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Resource.type)
  return type_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeContext_Resource::set_type(const ::std::string& value) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Resource.type)
}
void AttributeContext_Resource::set_type(const char* value) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Resource.type)
}
void AttributeContext_Resource::set_type(const char* value,
    size_t size) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Resource.type)
}
::std::string* AttributeContext_Resource::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Resource.type)
  return type_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Resource::release_type() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Resource.type)
  
  return type_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Resource::unsafe_arena_release_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Resource.type)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return type_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AttributeContext_Resource::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Resource.type)
}
void AttributeContext_Resource::unsafe_arena_set_allocated_type(
    ::std::string* type) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (type != NULL) {
    
  } else {
    
  }
  type_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      type, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Resource.type)
}

// map<string, string> labels = 4;
int AttributeContext_Resource::labels_size() const {
  return labels_.size();
}
void AttributeContext_Resource::clear_labels() {
  labels_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
AttributeContext_Resource::labels() const {
  // @@protoc_insertion_point(field_map:google.rpc.context.AttributeContext.Resource.labels)
  return labels_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
AttributeContext_Resource::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.rpc.context.AttributeContext.Resource.labels)
  return labels_.MutableMap();
}

// optional string uid = 5;
void AttributeContext_Resource::clear_uid() {
  uid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AttributeContext_Resource::uid() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Resource.uid)
  return uid_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeContext_Resource::set_uid(const ::std::string& value) {
  
  uid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Resource.uid)
}
void AttributeContext_Resource::set_uid(const char* value) {
  
  uid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Resource.uid)
}
void AttributeContext_Resource::set_uid(const char* value,
    size_t size) {
  
  uid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Resource.uid)
}
::std::string* AttributeContext_Resource::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Resource.uid)
  return uid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Resource::release_uid() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Resource.uid)
  
  return uid_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Resource::unsafe_arena_release_uid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Resource.uid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return uid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AttributeContext_Resource::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Resource.uid)
}
void AttributeContext_Resource::unsafe_arena_set_allocated_uid(
    ::std::string* uid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      uid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Resource.uid)
}

// map<string, string> annotations = 6;
int AttributeContext_Resource::annotations_size() const {
  return annotations_.size();
}
void AttributeContext_Resource::clear_annotations() {
  annotations_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
AttributeContext_Resource::annotations() const {
  // @@protoc_insertion_point(field_map:google.rpc.context.AttributeContext.Resource.annotations)
  return annotations_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
AttributeContext_Resource::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_map:google.rpc.context.AttributeContext.Resource.annotations)
  return annotations_.MutableMap();
}

// optional string display_name = 7;
void AttributeContext_Resource::clear_display_name() {
  display_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AttributeContext_Resource::display_name() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Resource.display_name)
  return display_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeContext_Resource::set_display_name(const ::std::string& value) {
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Resource.display_name)
}
void AttributeContext_Resource::set_display_name(const char* value) {
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Resource.display_name)
}
void AttributeContext_Resource::set_display_name(const char* value,
    size_t size) {
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Resource.display_name)
}
::std::string* AttributeContext_Resource::mutable_display_name() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Resource.display_name)
  return display_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Resource::release_display_name() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Resource.display_name)
  
  return display_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Resource::unsafe_arena_release_display_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Resource.display_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return display_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AttributeContext_Resource::set_allocated_display_name(::std::string* display_name) {
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Resource.display_name)
}
void AttributeContext_Resource::unsafe_arena_set_allocated_display_name(
    ::std::string* display_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      display_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Resource.display_name)
}

// optional .google.protobuf.Timestamp create_time = 8;
bool AttributeContext_Resource::has_create_time() const {
  return this != internal_default_instance() && create_time_ != NULL;
}
void AttributeContext_Resource::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) delete create_time_;
  create_time_ = NULL;
}
const ::google::protobuf::Timestamp& AttributeContext_Resource::create_time() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Resource.create_time)
  return create_time_ != NULL ? *create_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* AttributeContext_Resource::mutable_create_time() {
  
  if (create_time_ == NULL) {
    _slow_mutable_create_time();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Resource.create_time)
  return create_time_;
}
::google::protobuf::Timestamp* AttributeContext_Resource::release_create_time() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Resource.create_time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_create_time();
  } else {
    ::google::protobuf::Timestamp* temp = create_time_;
    create_time_ = NULL;
    return temp;
  }
}
 void AttributeContext_Resource::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete create_time_;
  }
  if (create_time != NULL) {
    _slow_set_allocated_create_time(message_arena, &create_time);
  }
  create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Resource.create_time)
}

// optional .google.protobuf.Timestamp update_time = 9;
bool AttributeContext_Resource::has_update_time() const {
  return this != internal_default_instance() && update_time_ != NULL;
}
void AttributeContext_Resource::clear_update_time() {
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) delete update_time_;
  update_time_ = NULL;
}
const ::google::protobuf::Timestamp& AttributeContext_Resource::update_time() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Resource.update_time)
  return update_time_ != NULL ? *update_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* AttributeContext_Resource::mutable_update_time() {
  
  if (update_time_ == NULL) {
    _slow_mutable_update_time();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Resource.update_time)
  return update_time_;
}
::google::protobuf::Timestamp* AttributeContext_Resource::release_update_time() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Resource.update_time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_update_time();
  } else {
    ::google::protobuf::Timestamp* temp = update_time_;
    update_time_ = NULL;
    return temp;
  }
}
 void AttributeContext_Resource::set_allocated_update_time(::google::protobuf::Timestamp* update_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete update_time_;
  }
  if (update_time != NULL) {
    _slow_set_allocated_update_time(message_arena, &update_time);
  }
  update_time_ = update_time;
  if (update_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Resource.update_time)
}

// optional .google.protobuf.Timestamp delete_time = 10;
bool AttributeContext_Resource::has_delete_time() const {
  return this != internal_default_instance() && delete_time_ != NULL;
}
void AttributeContext_Resource::clear_delete_time() {
  if (GetArenaNoVirtual() == NULL && delete_time_ != NULL) delete delete_time_;
  delete_time_ = NULL;
}
const ::google::protobuf::Timestamp& AttributeContext_Resource::delete_time() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Resource.delete_time)
  return delete_time_ != NULL ? *delete_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* AttributeContext_Resource::mutable_delete_time() {
  
  if (delete_time_ == NULL) {
    _slow_mutable_delete_time();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Resource.delete_time)
  return delete_time_;
}
::google::protobuf::Timestamp* AttributeContext_Resource::release_delete_time() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Resource.delete_time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_delete_time();
  } else {
    ::google::protobuf::Timestamp* temp = delete_time_;
    delete_time_ = NULL;
    return temp;
  }
}
 void AttributeContext_Resource::set_allocated_delete_time(::google::protobuf::Timestamp* delete_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete delete_time_;
  }
  if (delete_time != NULL) {
    _slow_set_allocated_delete_time(message_arena, &delete_time);
  }
  delete_time_ = delete_time;
  if (delete_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Resource.delete_time)
}

// optional string etag = 11;
void AttributeContext_Resource::clear_etag() {
  etag_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AttributeContext_Resource::etag() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Resource.etag)
  return etag_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeContext_Resource::set_etag(const ::std::string& value) {
  
  etag_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Resource.etag)
}
void AttributeContext_Resource::set_etag(const char* value) {
  
  etag_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Resource.etag)
}
void AttributeContext_Resource::set_etag(const char* value,
    size_t size) {
  
  etag_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Resource.etag)
}
::std::string* AttributeContext_Resource::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Resource.etag)
  return etag_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Resource::release_etag() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Resource.etag)
  
  return etag_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Resource::unsafe_arena_release_etag() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Resource.etag)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return etag_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AttributeContext_Resource::set_allocated_etag(::std::string* etag) {
  if (etag != NULL) {
    
  } else {
    
  }
  etag_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Resource.etag)
}
void AttributeContext_Resource::unsafe_arena_set_allocated_etag(
    ::std::string* etag) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (etag != NULL) {
    
  } else {
    
  }
  etag_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      etag, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Resource.etag)
}

// optional string location = 12;
void AttributeContext_Resource::clear_location() {
  location_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AttributeContext_Resource::location() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.Resource.location)
  return location_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeContext_Resource::set_location(const ::std::string& value) {
  
  location_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.rpc.context.AttributeContext.Resource.location)
}
void AttributeContext_Resource::set_location(const char* value) {
  
  location_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.rpc.context.AttributeContext.Resource.location)
}
void AttributeContext_Resource::set_location(const char* value,
    size_t size) {
  
  location_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.rpc.context.AttributeContext.Resource.location)
}
::std::string* AttributeContext_Resource::mutable_location() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.Resource.location)
  return location_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Resource::release_location() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.Resource.location)
  
  return location_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AttributeContext_Resource::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.rpc.context.AttributeContext.Resource.location)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return location_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AttributeContext_Resource::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    
  } else {
    
  }
  location_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.Resource.location)
}
void AttributeContext_Resource::unsafe_arena_set_allocated_location(
    ::std::string* location) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (location != NULL) {
    
  } else {
    
  }
  location_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      location, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.rpc.context.AttributeContext.Resource.location)
}

inline const AttributeContext_Resource* AttributeContext_Resource::internal_default_instance() {
  return &AttributeContext_Resource_default_instance_.get();
}
// -------------------------------------------------------------------

// AttributeContext

// optional .google.rpc.context.AttributeContext.Peer origin = 7;
bool AttributeContext::has_origin() const {
  return this != internal_default_instance() && origin_ != NULL;
}
void AttributeContext::clear_origin() {
  if (GetArenaNoVirtual() == NULL && origin_ != NULL) delete origin_;
  origin_ = NULL;
}
const ::google::rpc::context::AttributeContext_Peer& AttributeContext::origin() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.origin)
  return origin_ != NULL ? *origin_
                         : *::google::rpc::context::AttributeContext_Peer::internal_default_instance();
}
::google::rpc::context::AttributeContext_Peer* AttributeContext::mutable_origin() {
  
  if (origin_ == NULL) {
    _slow_mutable_origin();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.origin)
  return origin_;
}
::google::rpc::context::AttributeContext_Peer* AttributeContext::release_origin() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.origin)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_origin();
  } else {
    ::google::rpc::context::AttributeContext_Peer* temp = origin_;
    origin_ = NULL;
    return temp;
  }
}
 void AttributeContext::set_allocated_origin(::google::rpc::context::AttributeContext_Peer* origin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete origin_;
  }
  if (origin != NULL) {
    _slow_set_allocated_origin(message_arena, &origin);
  }
  origin_ = origin;
  if (origin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.origin)
}

// optional .google.rpc.context.AttributeContext.Peer source = 1;
bool AttributeContext::has_source() const {
  return this != internal_default_instance() && source_ != NULL;
}
void AttributeContext::clear_source() {
  if (GetArenaNoVirtual() == NULL && source_ != NULL) delete source_;
  source_ = NULL;
}
const ::google::rpc::context::AttributeContext_Peer& AttributeContext::source() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.source)
  return source_ != NULL ? *source_
                         : *::google::rpc::context::AttributeContext_Peer::internal_default_instance();
}
::google::rpc::context::AttributeContext_Peer* AttributeContext::mutable_source() {
  
  if (source_ == NULL) {
    _slow_mutable_source();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.source)
  return source_;
}
::google::rpc::context::AttributeContext_Peer* AttributeContext::release_source() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.source)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_source();
  } else {
    ::google::rpc::context::AttributeContext_Peer* temp = source_;
    source_ = NULL;
    return temp;
  }
}
 void AttributeContext::set_allocated_source(::google::rpc::context::AttributeContext_Peer* source) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete source_;
  }
  if (source != NULL) {
    _slow_set_allocated_source(message_arena, &source);
  }
  source_ = source;
  if (source) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.source)
}

// optional .google.rpc.context.AttributeContext.Peer destination = 2;
bool AttributeContext::has_destination() const {
  return this != internal_default_instance() && destination_ != NULL;
}
void AttributeContext::clear_destination() {
  if (GetArenaNoVirtual() == NULL && destination_ != NULL) delete destination_;
  destination_ = NULL;
}
const ::google::rpc::context::AttributeContext_Peer& AttributeContext::destination() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.destination)
  return destination_ != NULL ? *destination_
                         : *::google::rpc::context::AttributeContext_Peer::internal_default_instance();
}
::google::rpc::context::AttributeContext_Peer* AttributeContext::mutable_destination() {
  
  if (destination_ == NULL) {
    _slow_mutable_destination();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.destination)
  return destination_;
}
::google::rpc::context::AttributeContext_Peer* AttributeContext::release_destination() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.destination)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_destination();
  } else {
    ::google::rpc::context::AttributeContext_Peer* temp = destination_;
    destination_ = NULL;
    return temp;
  }
}
 void AttributeContext::set_allocated_destination(::google::rpc::context::AttributeContext_Peer* destination) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete destination_;
  }
  if (destination != NULL) {
    _slow_set_allocated_destination(message_arena, &destination);
  }
  destination_ = destination;
  if (destination) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.destination)
}

// optional .google.rpc.context.AttributeContext.Request request = 3;
bool AttributeContext::has_request() const {
  return this != internal_default_instance() && request_ != NULL;
}
void AttributeContext::clear_request() {
  if (GetArenaNoVirtual() == NULL && request_ != NULL) delete request_;
  request_ = NULL;
}
const ::google::rpc::context::AttributeContext_Request& AttributeContext::request() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.request)
  return request_ != NULL ? *request_
                         : *::google::rpc::context::AttributeContext_Request::internal_default_instance();
}
::google::rpc::context::AttributeContext_Request* AttributeContext::mutable_request() {
  
  if (request_ == NULL) {
    _slow_mutable_request();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.request)
  return request_;
}
::google::rpc::context::AttributeContext_Request* AttributeContext::release_request() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.request)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_request();
  } else {
    ::google::rpc::context::AttributeContext_Request* temp = request_;
    request_ = NULL;
    return temp;
  }
}
 void AttributeContext::set_allocated_request(::google::rpc::context::AttributeContext_Request* request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete request_;
  }
  if (request != NULL) {
    _slow_set_allocated_request(message_arena, &request);
  }
  request_ = request;
  if (request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.request)
}

// optional .google.rpc.context.AttributeContext.Response response = 4;
bool AttributeContext::has_response() const {
  return this != internal_default_instance() && response_ != NULL;
}
void AttributeContext::clear_response() {
  if (GetArenaNoVirtual() == NULL && response_ != NULL) delete response_;
  response_ = NULL;
}
const ::google::rpc::context::AttributeContext_Response& AttributeContext::response() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.response)
  return response_ != NULL ? *response_
                         : *::google::rpc::context::AttributeContext_Response::internal_default_instance();
}
::google::rpc::context::AttributeContext_Response* AttributeContext::mutable_response() {
  
  if (response_ == NULL) {
    _slow_mutable_response();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.response)
  return response_;
}
::google::rpc::context::AttributeContext_Response* AttributeContext::release_response() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.response)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_response();
  } else {
    ::google::rpc::context::AttributeContext_Response* temp = response_;
    response_ = NULL;
    return temp;
  }
}
 void AttributeContext::set_allocated_response(::google::rpc::context::AttributeContext_Response* response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete response_;
  }
  if (response != NULL) {
    _slow_set_allocated_response(message_arena, &response);
  }
  response_ = response;
  if (response) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.response)
}

// optional .google.rpc.context.AttributeContext.Resource resource = 5;
bool AttributeContext::has_resource() const {
  return this != internal_default_instance() && resource_ != NULL;
}
void AttributeContext::clear_resource() {
  if (GetArenaNoVirtual() == NULL && resource_ != NULL) delete resource_;
  resource_ = NULL;
}
const ::google::rpc::context::AttributeContext_Resource& AttributeContext::resource() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.resource)
  return resource_ != NULL ? *resource_
                         : *::google::rpc::context::AttributeContext_Resource::internal_default_instance();
}
::google::rpc::context::AttributeContext_Resource* AttributeContext::mutable_resource() {
  
  if (resource_ == NULL) {
    _slow_mutable_resource();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.resource)
  return resource_;
}
::google::rpc::context::AttributeContext_Resource* AttributeContext::release_resource() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.resource)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_resource();
  } else {
    ::google::rpc::context::AttributeContext_Resource* temp = resource_;
    resource_ = NULL;
    return temp;
  }
}
 void AttributeContext::set_allocated_resource(::google::rpc::context::AttributeContext_Resource* resource) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete resource_;
  }
  if (resource != NULL) {
    _slow_set_allocated_resource(message_arena, &resource);
  }
  resource_ = resource;
  if (resource) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.resource)
}

// optional .google.rpc.context.AttributeContext.Api api = 6;
bool AttributeContext::has_api() const {
  return this != internal_default_instance() && api_ != NULL;
}
void AttributeContext::clear_api() {
  if (GetArenaNoVirtual() == NULL && api_ != NULL) delete api_;
  api_ = NULL;
}
const ::google::rpc::context::AttributeContext_Api& AttributeContext::api() const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.api)
  return api_ != NULL ? *api_
                         : *::google::rpc::context::AttributeContext_Api::internal_default_instance();
}
::google::rpc::context::AttributeContext_Api* AttributeContext::mutable_api() {
  
  if (api_ == NULL) {
    _slow_mutable_api();
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.api)
  return api_;
}
::google::rpc::context::AttributeContext_Api* AttributeContext::release_api() {
  // @@protoc_insertion_point(field_release:google.rpc.context.AttributeContext.api)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_api();
  } else {
    ::google::rpc::context::AttributeContext_Api* temp = api_;
    api_ = NULL;
    return temp;
  }
}
 void AttributeContext::set_allocated_api(::google::rpc::context::AttributeContext_Api* api) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete api_;
  }
  if (api != NULL) {
    _slow_set_allocated_api(message_arena, &api);
  }
  api_ = api;
  if (api) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.context.AttributeContext.api)
}

// repeated .google.protobuf.Any extensions = 8;
int AttributeContext::extensions_size() const {
  return extensions_.size();
}
void AttributeContext::clear_extensions() {
  extensions_.Clear();
}
const ::google::protobuf::Any& AttributeContext::extensions(int index) const {
  // @@protoc_insertion_point(field_get:google.rpc.context.AttributeContext.extensions)
  return extensions_.Get(index);
}
::google::protobuf::Any* AttributeContext::mutable_extensions(int index) {
  // @@protoc_insertion_point(field_mutable:google.rpc.context.AttributeContext.extensions)
  return extensions_.Mutable(index);
}
::google::protobuf::Any* AttributeContext::add_extensions() {
  // @@protoc_insertion_point(field_add:google.rpc.context.AttributeContext.extensions)
  return extensions_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
AttributeContext::mutable_extensions() {
  // @@protoc_insertion_point(field_mutable_list:google.rpc.context.AttributeContext.extensions)
  return &extensions_;
}
const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
AttributeContext::extensions() const {
  // @@protoc_insertion_point(field_list:google.rpc.context.AttributeContext.extensions)
  return extensions_;
}

inline const AttributeContext* AttributeContext::internal_default_instance() {
  return &AttributeContext_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace context
}  // namespace rpc
}  // namespace google

// @@protoc_insertion_point(global_scope)
