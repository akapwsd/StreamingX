// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/resource.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/api/resource.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace api {

namespace {

const ::google::protobuf::Descriptor* ResourceDescriptor_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResourceDescriptor_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ResourceDescriptor_History_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ResourceDescriptor_Style_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ResourceReference_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResourceReference_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fapi_2fresource_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fapi_2fresource_2eproto() {
  protobuf_AddDesc_google_2fapi_2fresource_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/api/resource.proto");
  GOOGLE_CHECK(file != NULL);
  ResourceDescriptor_descriptor_ = file->message_type(0);
  static const int ResourceDescriptor_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceDescriptor, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceDescriptor, pattern_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceDescriptor, name_field_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceDescriptor, history_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceDescriptor, plural_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceDescriptor, singular_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceDescriptor, style_),
  };
  ResourceDescriptor_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResourceDescriptor_descriptor_,
      ResourceDescriptor::internal_default_instance(),
      ResourceDescriptor_offsets_,
      -1,
      -1,
      -1,
      sizeof(ResourceDescriptor),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceDescriptor, _internal_metadata_));
  ResourceDescriptor_History_descriptor_ = ResourceDescriptor_descriptor_->enum_type(0);
  ResourceDescriptor_Style_descriptor_ = ResourceDescriptor_descriptor_->enum_type(1);
  ResourceReference_descriptor_ = file->message_type(1);
  static const int ResourceReference_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceReference, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceReference, child_type_),
  };
  ResourceReference_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResourceReference_descriptor_,
      ResourceReference::internal_default_instance(),
      ResourceReference_offsets_,
      -1,
      -1,
      -1,
      sizeof(ResourceReference),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceReference, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fapi_2fresource_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResourceDescriptor_descriptor_, ResourceDescriptor::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResourceReference_descriptor_, ResourceReference::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fapi_2fresource_2eproto() {
  ResourceDescriptor_default_instance_.Shutdown();
  delete ResourceDescriptor_reflection_;
  ResourceReference_default_instance_.Shutdown();
  delete ResourceReference_reflection_;
}

void protobuf_InitDefaults_google_2fapi_2fresource_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fdescriptor_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  ResourceDescriptor_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ResourceReference_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::google::protobuf::FieldOptions::internal_default_instance(),
    1055, 11, false, false,
    ::google::api::ResourceReference::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::google::protobuf::FileOptions::internal_default_instance(),
    1053, 11, true, false,
    ::google::api::ResourceDescriptor::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::google::protobuf::MessageOptions::internal_default_instance(),
    1053, 11, false, false,
    ::google::api::ResourceDescriptor::internal_default_instance());
  ResourceDescriptor_default_instance_.get_mutable()->InitAsDefaultInstance();
  ResourceReference_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fapi_2fresource_2eproto_once_);
void protobuf_InitDefaults_google_2fapi_2fresource_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fapi_2fresource_2eproto_once_,
                 &protobuf_InitDefaults_google_2fapi_2fresource_2eproto_impl);
}
void protobuf_AddDesc_google_2fapi_2fresource_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fapi_2fresource_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031google/api/resource.proto\022\ngoogle.api\032"
    " google/protobuf/descriptor.proto\"\356\002\n\022Re"
    "sourceDescriptor\022\014\n\004type\030\001 \001(\t\022\017\n\007patter"
    "n\030\002 \003(\t\022\022\n\nname_field\030\003 \001(\t\0227\n\007history\030\004"
    " \001(\0162&.google.api.ResourceDescriptor.His"
    "tory\022\016\n\006plural\030\005 \001(\t\022\020\n\010singular\030\006 \001(\t\0223"
    "\n\005style\030\n \003(\0162$.google.api.ResourceDescr"
    "iptor.Style\"[\n\007History\022\027\n\023HISTORY_UNSPEC"
    "IFIED\020\000\022\035\n\031ORIGINALLY_SINGLE_PATTERN\020\001\022\030"
    "\n\024FUTURE_MULTI_PATTERN\020\002\"8\n\005Style\022\025\n\021STY"
    "LE_UNSPECIFIED\020\000\022\030\n\024DECLARATIVE_FRIENDLY"
    "\020\001\"5\n\021ResourceReference\022\014\n\004type\030\001 \001(\t\022\022\n"
    "\nchild_type\030\002 \001(\t:Y\n\022resource_reference\022"
    "\035.google.protobuf.FieldOptions\030\237\010 \001(\0132\035."
    "google.api.ResourceReference:Z\n\023resource"
    "_definition\022\034.google.protobuf.FileOption"
    "s\030\235\010 \003(\0132\036.google.api.ResourceDescriptor"
    ":R\n\010resource\022\037.google.protobuf.MessageOp"
    "tions\030\235\010 \001(\0132\036.google.api.ResourceDescri"
    "ptorBn\n\016com.google.apiB\rResourceProtoP\001Z"
    "Agoogle.golang.org/genproto/googleapis/a"
    "pi/annotations;annotations\370\001\001\242\002\004GAPIb\006pr"
    "oto3", 884);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/resource.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fapi_2fresource_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fapi_2fresource_2eproto_once_);
void protobuf_AddDesc_google_2fapi_2fresource_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fapi_2fresource_2eproto_once_,
                 &protobuf_AddDesc_google_2fapi_2fresource_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fapi_2fresource_2eproto {
  StaticDescriptorInitializer_google_2fapi_2fresource_2eproto() {
    protobuf_AddDesc_google_2fapi_2fresource_2eproto();
  }
} static_descriptor_initializer_google_2fapi_2fresource_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* ResourceDescriptor_History_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResourceDescriptor_History_descriptor_;
}
bool ResourceDescriptor_History_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ResourceDescriptor_History ResourceDescriptor::HISTORY_UNSPECIFIED;
const ResourceDescriptor_History ResourceDescriptor::ORIGINALLY_SINGLE_PATTERN;
const ResourceDescriptor_History ResourceDescriptor::FUTURE_MULTI_PATTERN;
const ResourceDescriptor_History ResourceDescriptor::History_MIN;
const ResourceDescriptor_History ResourceDescriptor::History_MAX;
const int ResourceDescriptor::History_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ResourceDescriptor_Style_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResourceDescriptor_Style_descriptor_;
}
bool ResourceDescriptor_Style_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ResourceDescriptor_Style ResourceDescriptor::STYLE_UNSPECIFIED;
const ResourceDescriptor_Style ResourceDescriptor::DECLARATIVE_FRIENDLY;
const ResourceDescriptor_Style ResourceDescriptor::Style_MIN;
const ResourceDescriptor_Style ResourceDescriptor::Style_MAX;
const int ResourceDescriptor::Style_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceDescriptor::kTypeFieldNumber;
const int ResourceDescriptor::kPatternFieldNumber;
const int ResourceDescriptor::kNameFieldFieldNumber;
const int ResourceDescriptor::kHistoryFieldNumber;
const int ResourceDescriptor::kPluralFieldNumber;
const int ResourceDescriptor::kSingularFieldNumber;
const int ResourceDescriptor::kStyleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceDescriptor::ResourceDescriptor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fresource_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.ResourceDescriptor)
}
ResourceDescriptor::ResourceDescriptor(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  pattern_(arena),
  style_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2fresource_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.ResourceDescriptor)
}

void ResourceDescriptor::InitAsDefaultInstance() {
}

ResourceDescriptor::ResourceDescriptor(const ResourceDescriptor& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.ResourceDescriptor)
}

void ResourceDescriptor::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plural_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  singular_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  history_ = 0;
  _cached_size_ = 0;
}

ResourceDescriptor::~ResourceDescriptor() {
  // @@protoc_insertion_point(destructor:google.api.ResourceDescriptor)
  SharedDtor();
}

void ResourceDescriptor::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  type_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  name_field_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  plural_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  singular_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void ResourceDescriptor::ArenaDtor(void* object) {
  ResourceDescriptor* _this = reinterpret_cast< ResourceDescriptor* >(object);
  (void)_this;
}
void ResourceDescriptor::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ResourceDescriptor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResourceDescriptor::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResourceDescriptor_descriptor_;
}

const ResourceDescriptor& ResourceDescriptor::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fresource_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ResourceDescriptor> ResourceDescriptor_default_instance_;

ResourceDescriptor* ResourceDescriptor::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ResourceDescriptor>(arena);
}

void ResourceDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.ResourceDescriptor)
  type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  name_field_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  history_ = 0;
  plural_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  singular_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  pattern_.Clear();
  style_.Clear();
}

bool ResourceDescriptor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.ResourceDescriptor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.ResourceDescriptor.type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pattern;
        break;
      }

      // repeated string pattern = 2;
      case 2: {
        if (tag == 18) {
         parse_pattern:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_pattern()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pattern(this->pattern_size() - 1).data(),
            this->pattern(this->pattern_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.ResourceDescriptor.pattern"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pattern;
        if (input->ExpectTag(26)) goto parse_name_field;
        break;
      }

      // optional string name_field = 3;
      case 3: {
        if (tag == 26) {
         parse_name_field:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name_field()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name_field().data(), this->name_field().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.ResourceDescriptor.name_field"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_history;
        break;
      }

      // optional .google.api.ResourceDescriptor.History history = 4;
      case 4: {
        if (tag == 32) {
         parse_history:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_history(static_cast< ::google::api::ResourceDescriptor_History >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_plural;
        break;
      }

      // optional string plural = 5;
      case 5: {
        if (tag == 42) {
         parse_plural:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plural()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plural().data(), this->plural().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.ResourceDescriptor.plural"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_singular;
        break;
      }

      // optional string singular = 6;
      case 6: {
        if (tag == 50) {
         parse_singular:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_singular()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->singular().data(), this->singular().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.ResourceDescriptor.singular"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_style;
        break;
      }

      // repeated .google.api.ResourceDescriptor.Style style = 10;
      case 10: {
        if (tag == 82) {
         parse_style:
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(length);
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_style(static_cast< ::google::api::ResourceDescriptor_Style >(value));
          }
          input->PopLimit(limit);
        } else if (tag == 80) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_style(static_cast< ::google::api::ResourceDescriptor_Style >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.ResourceDescriptor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.ResourceDescriptor)
  return false;
#undef DO_
}

void ResourceDescriptor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.ResourceDescriptor)
  // optional string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ResourceDescriptor.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // repeated string pattern = 2;
  for (int i = 0; i < this->pattern_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pattern(i).data(), this->pattern(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ResourceDescriptor.pattern");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->pattern(i), output);
  }

  // optional string name_field = 3;
  if (this->name_field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name_field().data(), this->name_field().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ResourceDescriptor.name_field");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name_field(), output);
  }

  // optional .google.api.ResourceDescriptor.History history = 4;
  if (this->history() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->history(), output);
  }

  // optional string plural = 5;
  if (this->plural().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plural().data(), this->plural().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ResourceDescriptor.plural");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->plural(), output);
  }

  // optional string singular = 6;
  if (this->singular().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->singular().data(), this->singular().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ResourceDescriptor.singular");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->singular(), output);
  }

  // repeated .google.api.ResourceDescriptor.Style style = 10;
  if (this->style_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(_style_cached_byte_size_);
  }
  for (int i = 0; i < this->style_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->style(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.ResourceDescriptor)
}

::google::protobuf::uint8* ResourceDescriptor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.ResourceDescriptor)
  // optional string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ResourceDescriptor.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // repeated string pattern = 2;
  for (int i = 0; i < this->pattern_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pattern(i).data(), this->pattern(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ResourceDescriptor.pattern");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->pattern(i), target);
  }

  // optional string name_field = 3;
  if (this->name_field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name_field().data(), this->name_field().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ResourceDescriptor.name_field");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name_field(), target);
  }

  // optional .google.api.ResourceDescriptor.History history = 4;
  if (this->history() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->history(), target);
  }

  // optional string plural = 5;
  if (this->plural().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plural().data(), this->plural().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ResourceDescriptor.plural");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->plural(), target);
  }

  // optional string singular = 6;
  if (this->singular().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->singular().data(), this->singular().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ResourceDescriptor.singular");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->singular(), target);
  }

  // repeated .google.api.ResourceDescriptor.Style style = 10;
  if (this->style_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(    _style_cached_byte_size_, target);
  }
  for (int i = 0; i < this->style_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->style(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.ResourceDescriptor)
  return target;
}

size_t ResourceDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.ResourceDescriptor)
  size_t total_size = 0;

  // optional string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // optional string name_field = 3;
  if (this->name_field().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name_field());
  }

  // optional .google.api.ResourceDescriptor.History history = 4;
  if (this->history() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->history());
  }

  // optional string plural = 5;
  if (this->plural().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plural());
  }

  // optional string singular = 6;
  if (this->singular().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->singular());
  }

  // repeated string pattern = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pattern_size());
  for (int i = 0; i < this->pattern_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->pattern(i));
  }

  // repeated .google.api.ResourceDescriptor.Style style = 10;
  {
    size_t data_size = 0;
    unsigned int count = this->style_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->style(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _style_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResourceDescriptor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.ResourceDescriptor)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ResourceDescriptor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResourceDescriptor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.ResourceDescriptor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.ResourceDescriptor)
    UnsafeMergeFrom(*source);
  }
}

void ResourceDescriptor::MergeFrom(const ResourceDescriptor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.ResourceDescriptor)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ResourceDescriptor::UnsafeMergeFrom(const ResourceDescriptor& from) {
  GOOGLE_DCHECK(&from != this);
  pattern_.UnsafeMergeFrom(from.pattern_);
  style_.UnsafeMergeFrom(from.style_);
  if (from.type().size() > 0) {
    set_type(from.type());
  }
  if (from.name_field().size() > 0) {
    set_name_field(from.name_field());
  }
  if (from.history() != 0) {
    set_history(from.history());
  }
  if (from.plural().size() > 0) {
    set_plural(from.plural());
  }
  if (from.singular().size() > 0) {
    set_singular(from.singular());
  }
}

void ResourceDescriptor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.ResourceDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceDescriptor::CopyFrom(const ResourceDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.ResourceDescriptor)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ResourceDescriptor::IsInitialized() const {

  return true;
}

void ResourceDescriptor::Swap(ResourceDescriptor* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ResourceDescriptor temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void ResourceDescriptor::UnsafeArenaSwap(ResourceDescriptor* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ResourceDescriptor::InternalSwap(ResourceDescriptor* other) {
  type_.Swap(&other->type_);
  pattern_.UnsafeArenaSwap(&other->pattern_);
  name_field_.Swap(&other->name_field_);
  std::swap(history_, other->history_);
  plural_.Swap(&other->plural_);
  singular_.Swap(&other->singular_);
  style_.UnsafeArenaSwap(&other->style_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResourceDescriptor::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResourceDescriptor_descriptor_;
  metadata.reflection = ResourceDescriptor_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResourceDescriptor

// optional string type = 1;
void ResourceDescriptor::clear_type() {
  type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ResourceDescriptor::type() const {
  // @@protoc_insertion_point(field_get:google.api.ResourceDescriptor.type)
  return type_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResourceDescriptor::set_type(const ::std::string& value) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.ResourceDescriptor.type)
}
void ResourceDescriptor::set_type(const char* value) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.ResourceDescriptor.type)
}
void ResourceDescriptor::set_type(const char* value,
    size_t size) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.ResourceDescriptor.type)
}
::std::string* ResourceDescriptor::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:google.api.ResourceDescriptor.type)
  return type_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ResourceDescriptor::release_type() {
  // @@protoc_insertion_point(field_release:google.api.ResourceDescriptor.type)
  
  return type_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ResourceDescriptor::unsafe_arena_release_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.ResourceDescriptor.type)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return type_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ResourceDescriptor::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.ResourceDescriptor.type)
}
void ResourceDescriptor::unsafe_arena_set_allocated_type(
    ::std::string* type) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (type != NULL) {
    
  } else {
    
  }
  type_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      type, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.ResourceDescriptor.type)
}

// repeated string pattern = 2;
int ResourceDescriptor::pattern_size() const {
  return pattern_.size();
}
void ResourceDescriptor::clear_pattern() {
  pattern_.Clear();
}
const ::std::string& ResourceDescriptor::pattern(int index) const {
  // @@protoc_insertion_point(field_get:google.api.ResourceDescriptor.pattern)
  return pattern_.Get(index);
}
::std::string* ResourceDescriptor::mutable_pattern(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.ResourceDescriptor.pattern)
  return pattern_.Mutable(index);
}
void ResourceDescriptor::set_pattern(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.api.ResourceDescriptor.pattern)
  pattern_.Mutable(index)->assign(value);
}
void ResourceDescriptor::set_pattern(int index, const char* value) {
  pattern_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.api.ResourceDescriptor.pattern)
}
void ResourceDescriptor::set_pattern(int index, const char* value, size_t size) {
  pattern_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.api.ResourceDescriptor.pattern)
}
::std::string* ResourceDescriptor::add_pattern() {
  // @@protoc_insertion_point(field_add_mutable:google.api.ResourceDescriptor.pattern)
  return pattern_.Add();
}
void ResourceDescriptor::add_pattern(const ::std::string& value) {
  pattern_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.api.ResourceDescriptor.pattern)
}
void ResourceDescriptor::add_pattern(const char* value) {
  pattern_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.api.ResourceDescriptor.pattern)
}
void ResourceDescriptor::add_pattern(const char* value, size_t size) {
  pattern_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.api.ResourceDescriptor.pattern)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ResourceDescriptor::pattern() const {
  // @@protoc_insertion_point(field_list:google.api.ResourceDescriptor.pattern)
  return pattern_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ResourceDescriptor::mutable_pattern() {
  // @@protoc_insertion_point(field_mutable_list:google.api.ResourceDescriptor.pattern)
  return &pattern_;
}

// optional string name_field = 3;
void ResourceDescriptor::clear_name_field() {
  name_field_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ResourceDescriptor::name_field() const {
  // @@protoc_insertion_point(field_get:google.api.ResourceDescriptor.name_field)
  return name_field_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResourceDescriptor::set_name_field(const ::std::string& value) {
  
  name_field_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.ResourceDescriptor.name_field)
}
void ResourceDescriptor::set_name_field(const char* value) {
  
  name_field_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.ResourceDescriptor.name_field)
}
void ResourceDescriptor::set_name_field(const char* value,
    size_t size) {
  
  name_field_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.ResourceDescriptor.name_field)
}
::std::string* ResourceDescriptor::mutable_name_field() {
  
  // @@protoc_insertion_point(field_mutable:google.api.ResourceDescriptor.name_field)
  return name_field_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ResourceDescriptor::release_name_field() {
  // @@protoc_insertion_point(field_release:google.api.ResourceDescriptor.name_field)
  
  return name_field_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ResourceDescriptor::unsafe_arena_release_name_field() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.ResourceDescriptor.name_field)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_field_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ResourceDescriptor::set_allocated_name_field(::std::string* name_field) {
  if (name_field != NULL) {
    
  } else {
    
  }
  name_field_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name_field,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.ResourceDescriptor.name_field)
}
void ResourceDescriptor::unsafe_arena_set_allocated_name_field(
    ::std::string* name_field) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name_field != NULL) {
    
  } else {
    
  }
  name_field_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name_field, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.ResourceDescriptor.name_field)
}

// optional .google.api.ResourceDescriptor.History history = 4;
void ResourceDescriptor::clear_history() {
  history_ = 0;
}
::google::api::ResourceDescriptor_History ResourceDescriptor::history() const {
  // @@protoc_insertion_point(field_get:google.api.ResourceDescriptor.history)
  return static_cast< ::google::api::ResourceDescriptor_History >(history_);
}
void ResourceDescriptor::set_history(::google::api::ResourceDescriptor_History value) {
  
  history_ = value;
  // @@protoc_insertion_point(field_set:google.api.ResourceDescriptor.history)
}

// optional string plural = 5;
void ResourceDescriptor::clear_plural() {
  plural_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ResourceDescriptor::plural() const {
  // @@protoc_insertion_point(field_get:google.api.ResourceDescriptor.plural)
  return plural_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResourceDescriptor::set_plural(const ::std::string& value) {
  
  plural_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.ResourceDescriptor.plural)
}
void ResourceDescriptor::set_plural(const char* value) {
  
  plural_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.ResourceDescriptor.plural)
}
void ResourceDescriptor::set_plural(const char* value,
    size_t size) {
  
  plural_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.ResourceDescriptor.plural)
}
::std::string* ResourceDescriptor::mutable_plural() {
  
  // @@protoc_insertion_point(field_mutable:google.api.ResourceDescriptor.plural)
  return plural_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ResourceDescriptor::release_plural() {
  // @@protoc_insertion_point(field_release:google.api.ResourceDescriptor.plural)
  
  return plural_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ResourceDescriptor::unsafe_arena_release_plural() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.ResourceDescriptor.plural)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return plural_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ResourceDescriptor::set_allocated_plural(::std::string* plural) {
  if (plural != NULL) {
    
  } else {
    
  }
  plural_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plural,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.ResourceDescriptor.plural)
}
void ResourceDescriptor::unsafe_arena_set_allocated_plural(
    ::std::string* plural) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (plural != NULL) {
    
  } else {
    
  }
  plural_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      plural, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.ResourceDescriptor.plural)
}

// optional string singular = 6;
void ResourceDescriptor::clear_singular() {
  singular_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ResourceDescriptor::singular() const {
  // @@protoc_insertion_point(field_get:google.api.ResourceDescriptor.singular)
  return singular_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResourceDescriptor::set_singular(const ::std::string& value) {
  
  singular_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.ResourceDescriptor.singular)
}
void ResourceDescriptor::set_singular(const char* value) {
  
  singular_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.ResourceDescriptor.singular)
}
void ResourceDescriptor::set_singular(const char* value,
    size_t size) {
  
  singular_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.ResourceDescriptor.singular)
}
::std::string* ResourceDescriptor::mutable_singular() {
  
  // @@protoc_insertion_point(field_mutable:google.api.ResourceDescriptor.singular)
  return singular_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ResourceDescriptor::release_singular() {
  // @@protoc_insertion_point(field_release:google.api.ResourceDescriptor.singular)
  
  return singular_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ResourceDescriptor::unsafe_arena_release_singular() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.ResourceDescriptor.singular)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return singular_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ResourceDescriptor::set_allocated_singular(::std::string* singular) {
  if (singular != NULL) {
    
  } else {
    
  }
  singular_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), singular,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.ResourceDescriptor.singular)
}
void ResourceDescriptor::unsafe_arena_set_allocated_singular(
    ::std::string* singular) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (singular != NULL) {
    
  } else {
    
  }
  singular_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      singular, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.ResourceDescriptor.singular)
}

// repeated .google.api.ResourceDescriptor.Style style = 10;
int ResourceDescriptor::style_size() const {
  return style_.size();
}
void ResourceDescriptor::clear_style() {
  style_.Clear();
}
::google::api::ResourceDescriptor_Style ResourceDescriptor::style(int index) const {
  // @@protoc_insertion_point(field_get:google.api.ResourceDescriptor.style)
  return static_cast< ::google::api::ResourceDescriptor_Style >(style_.Get(index));
}
void ResourceDescriptor::set_style(int index, ::google::api::ResourceDescriptor_Style value) {
  style_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.api.ResourceDescriptor.style)
}
void ResourceDescriptor::add_style(::google::api::ResourceDescriptor_Style value) {
  style_.Add(value);
  // @@protoc_insertion_point(field_add:google.api.ResourceDescriptor.style)
}
const ::google::protobuf::RepeatedField<int>&
ResourceDescriptor::style() const {
  // @@protoc_insertion_point(field_list:google.api.ResourceDescriptor.style)
  return style_;
}
::google::protobuf::RepeatedField<int>*
ResourceDescriptor::mutable_style() {
  // @@protoc_insertion_point(field_mutable_list:google.api.ResourceDescriptor.style)
  return &style_;
}

inline const ResourceDescriptor* ResourceDescriptor::internal_default_instance() {
  return &ResourceDescriptor_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceReference::kTypeFieldNumber;
const int ResourceReference::kChildTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceReference::ResourceReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fresource_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.ResourceReference)
}
ResourceReference::ResourceReference(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2fresource_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.ResourceReference)
}

void ResourceReference::InitAsDefaultInstance() {
}

ResourceReference::ResourceReference(const ResourceReference& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.ResourceReference)
}

void ResourceReference::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  child_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ResourceReference::~ResourceReference() {
  // @@protoc_insertion_point(destructor:google.api.ResourceReference)
  SharedDtor();
}

void ResourceReference::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  type_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  child_type_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void ResourceReference::ArenaDtor(void* object) {
  ResourceReference* _this = reinterpret_cast< ResourceReference* >(object);
  (void)_this;
}
void ResourceReference::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ResourceReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResourceReference::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResourceReference_descriptor_;
}

const ResourceReference& ResourceReference::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fresource_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ResourceReference> ResourceReference_default_instance_;

ResourceReference* ResourceReference::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ResourceReference>(arena);
}

void ResourceReference::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.ResourceReference)
  type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  child_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}

bool ResourceReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.ResourceReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.ResourceReference.type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_child_type;
        break;
      }

      // optional string child_type = 2;
      case 2: {
        if (tag == 18) {
         parse_child_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_child_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->child_type().data(), this->child_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.ResourceReference.child_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.ResourceReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.ResourceReference)
  return false;
#undef DO_
}

void ResourceReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.ResourceReference)
  // optional string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ResourceReference.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // optional string child_type = 2;
  if (this->child_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->child_type().data(), this->child_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ResourceReference.child_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->child_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.ResourceReference)
}

::google::protobuf::uint8* ResourceReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.ResourceReference)
  // optional string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ResourceReference.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // optional string child_type = 2;
  if (this->child_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->child_type().data(), this->child_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ResourceReference.child_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->child_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.ResourceReference)
  return target;
}

size_t ResourceReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.ResourceReference)
  size_t total_size = 0;

  // optional string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // optional string child_type = 2;
  if (this->child_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->child_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResourceReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.ResourceReference)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ResourceReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResourceReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.ResourceReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.ResourceReference)
    UnsafeMergeFrom(*source);
  }
}

void ResourceReference::MergeFrom(const ResourceReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.ResourceReference)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ResourceReference::UnsafeMergeFrom(const ResourceReference& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.type().size() > 0) {
    set_type(from.type());
  }
  if (from.child_type().size() > 0) {
    set_child_type(from.child_type());
  }
}

void ResourceReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.ResourceReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceReference::CopyFrom(const ResourceReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.ResourceReference)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ResourceReference::IsInitialized() const {

  return true;
}

void ResourceReference::Swap(ResourceReference* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ResourceReference temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void ResourceReference::UnsafeArenaSwap(ResourceReference* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ResourceReference::InternalSwap(ResourceReference* other) {
  type_.Swap(&other->type_);
  child_type_.Swap(&other->child_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResourceReference::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResourceReference_descriptor_;
  metadata.reflection = ResourceReference_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResourceReference

// optional string type = 1;
void ResourceReference::clear_type() {
  type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ResourceReference::type() const {
  // @@protoc_insertion_point(field_get:google.api.ResourceReference.type)
  return type_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResourceReference::set_type(const ::std::string& value) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.ResourceReference.type)
}
void ResourceReference::set_type(const char* value) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.ResourceReference.type)
}
void ResourceReference::set_type(const char* value,
    size_t size) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.ResourceReference.type)
}
::std::string* ResourceReference::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:google.api.ResourceReference.type)
  return type_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ResourceReference::release_type() {
  // @@protoc_insertion_point(field_release:google.api.ResourceReference.type)
  
  return type_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ResourceReference::unsafe_arena_release_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.ResourceReference.type)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return type_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ResourceReference::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.ResourceReference.type)
}
void ResourceReference::unsafe_arena_set_allocated_type(
    ::std::string* type) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (type != NULL) {
    
  } else {
    
  }
  type_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      type, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.ResourceReference.type)
}

// optional string child_type = 2;
void ResourceReference::clear_child_type() {
  child_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ResourceReference::child_type() const {
  // @@protoc_insertion_point(field_get:google.api.ResourceReference.child_type)
  return child_type_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResourceReference::set_child_type(const ::std::string& value) {
  
  child_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.ResourceReference.child_type)
}
void ResourceReference::set_child_type(const char* value) {
  
  child_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.ResourceReference.child_type)
}
void ResourceReference::set_child_type(const char* value,
    size_t size) {
  
  child_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.ResourceReference.child_type)
}
::std::string* ResourceReference::mutable_child_type() {
  
  // @@protoc_insertion_point(field_mutable:google.api.ResourceReference.child_type)
  return child_type_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ResourceReference::release_child_type() {
  // @@protoc_insertion_point(field_release:google.api.ResourceReference.child_type)
  
  return child_type_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ResourceReference::unsafe_arena_release_child_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.ResourceReference.child_type)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return child_type_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ResourceReference::set_allocated_child_type(::std::string* child_type) {
  if (child_type != NULL) {
    
  } else {
    
  }
  child_type_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), child_type,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.ResourceReference.child_type)
}
void ResourceReference::unsafe_arena_set_allocated_child_type(
    ::std::string* child_type) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (child_type != NULL) {
    
  } else {
    
  }
  child_type_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      child_type, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.ResourceReference.child_type)
}

inline const ResourceReference* ResourceReference::internal_default_instance() {
  return &ResourceReference_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::MessageTypeTraits< ::google::api::ResourceReference >, 11, false >
  resource_reference(kResourceReferenceFieldNumber, *::google::api::ResourceReference::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FileOptions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::google::api::ResourceDescriptor >, 11, false >
  resource_definition(kResourceDefinitionFieldNumber, *::google::api::ResourceDescriptor::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::MessageTypeTraits< ::google::api::ResourceDescriptor >, 11, false >
  resource(kResourceFieldNumber, *::google::api::ResourceDescriptor::internal_default_instance());

// @@protoc_insertion_point(namespace_scope)

}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)
