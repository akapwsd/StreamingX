// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/source_info.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/api/source_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace api {

namespace {

const ::google::protobuf::Descriptor* SourceInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SourceInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fapi_2fsource_5finfo_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fapi_2fsource_5finfo_2eproto() {
  protobuf_AddDesc_google_2fapi_2fsource_5finfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/api/source_info.proto");
  GOOGLE_CHECK(file != NULL);
  SourceInfo_descriptor_ = file->message_type(0);
  static const int SourceInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceInfo, source_files_),
  };
  SourceInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SourceInfo_descriptor_,
      SourceInfo::internal_default_instance(),
      SourceInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(SourceInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceInfo, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fapi_2fsource_5finfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SourceInfo_descriptor_, SourceInfo::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fapi_2fsource_5finfo_2eproto() {
  SourceInfo_default_instance_.Shutdown();
  delete SourceInfo_reflection_;
}

void protobuf_InitDefaults_google_2fapi_2fsource_5finfo_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fany_2eproto();
  SourceInfo_default_instance_.DefaultConstruct();
  SourceInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fapi_2fsource_5finfo_2eproto_once_);
void protobuf_InitDefaults_google_2fapi_2fsource_5finfo_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fapi_2fsource_5finfo_2eproto_once_,
                 &protobuf_InitDefaults_google_2fapi_2fsource_5finfo_2eproto_impl);
}
void protobuf_AddDesc_google_2fapi_2fsource_5finfo_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fapi_2fsource_5finfo_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\034google/api/source_info.proto\022\ngoogle.a"
    "pi\032\031google/protobuf/any.proto\"8\n\nSourceI"
    "nfo\022*\n\014source_files\030\001 \003(\0132\024.google.proto"
    "buf.AnyBq\n\016com.google.apiB\017SourceInfoPro"
    "toP\001ZEgoogle.golang.org/genproto/googlea"
    "pis/api/serviceconfig;serviceconfig\242\002\004GA"
    "PIb\006proto3", 250);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/source_info.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fapi_2fsource_5finfo_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fapi_2fsource_5finfo_2eproto_once_);
void protobuf_AddDesc_google_2fapi_2fsource_5finfo_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fapi_2fsource_5finfo_2eproto_once_,
                 &protobuf_AddDesc_google_2fapi_2fsource_5finfo_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fapi_2fsource_5finfo_2eproto {
  StaticDescriptorInitializer_google_2fapi_2fsource_5finfo_2eproto() {
    protobuf_AddDesc_google_2fapi_2fsource_5finfo_2eproto();
  }
} static_descriptor_initializer_google_2fapi_2fsource_5finfo_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SourceInfo::kSourceFilesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SourceInfo::SourceInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fsource_5finfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.SourceInfo)
}

void SourceInfo::InitAsDefaultInstance() {
}

SourceInfo::SourceInfo(const SourceInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.SourceInfo)
}

void SourceInfo::SharedCtor() {
  _cached_size_ = 0;
}

SourceInfo::~SourceInfo() {
  // @@protoc_insertion_point(destructor:google.api.SourceInfo)
  SharedDtor();
}

void SourceInfo::SharedDtor() {
}

void SourceInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SourceInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SourceInfo_descriptor_;
}

const SourceInfo& SourceInfo::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fsource_5finfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SourceInfo> SourceInfo_default_instance_;

SourceInfo* SourceInfo::New(::google::protobuf::Arena* arena) const {
  SourceInfo* n = new SourceInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SourceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.SourceInfo)
  source_files_.Clear();
}

bool SourceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.SourceInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.protobuf.Any source_files = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_source_files:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_source_files()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_source_files;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.SourceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.SourceInfo)
  return false;
#undef DO_
}

void SourceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.SourceInfo)
  // repeated .google.protobuf.Any source_files = 1;
  for (unsigned int i = 0, n = this->source_files_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->source_files(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.SourceInfo)
}

::google::protobuf::uint8* SourceInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.SourceInfo)
  // repeated .google.protobuf.Any source_files = 1;
  for (unsigned int i = 0, n = this->source_files_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->source_files(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.SourceInfo)
  return target;
}

size_t SourceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.SourceInfo)
  size_t total_size = 0;

  // repeated .google.protobuf.Any source_files = 1;
  {
    unsigned int count = this->source_files_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->source_files(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SourceInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.SourceInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SourceInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SourceInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.SourceInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.SourceInfo)
    UnsafeMergeFrom(*source);
  }
}

void SourceInfo::MergeFrom(const SourceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.SourceInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SourceInfo::UnsafeMergeFrom(const SourceInfo& from) {
  GOOGLE_DCHECK(&from != this);
  source_files_.MergeFrom(from.source_files_);
}

void SourceInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.SourceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceInfo::CopyFrom(const SourceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.SourceInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SourceInfo::IsInitialized() const {

  return true;
}

void SourceInfo::Swap(SourceInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SourceInfo::InternalSwap(SourceInfo* other) {
  source_files_.UnsafeArenaSwap(&other->source_files_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SourceInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SourceInfo_descriptor_;
  metadata.reflection = SourceInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SourceInfo

// repeated .google.protobuf.Any source_files = 1;
int SourceInfo::source_files_size() const {
  return source_files_.size();
}
void SourceInfo::clear_source_files() {
  source_files_.Clear();
}
const ::google::protobuf::Any& SourceInfo::source_files(int index) const {
  // @@protoc_insertion_point(field_get:google.api.SourceInfo.source_files)
  return source_files_.Get(index);
}
::google::protobuf::Any* SourceInfo::mutable_source_files(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.SourceInfo.source_files)
  return source_files_.Mutable(index);
}
::google::protobuf::Any* SourceInfo::add_source_files() {
  // @@protoc_insertion_point(field_add:google.api.SourceInfo.source_files)
  return source_files_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
SourceInfo::mutable_source_files() {
  // @@protoc_insertion_point(field_mutable_list:google.api.SourceInfo.source_files)
  return &source_files_;
}
const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
SourceInfo::source_files() const {
  // @@protoc_insertion_point(field_list:google.api.SourceInfo.source_files)
  return source_files_;
}

inline const SourceInfo* SourceInfo::internal_default_instance() {
  return &SourceInfo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)
