// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/backend.proto

#ifndef PROTOBUF_google_2fapi_2fbackend_2eproto__INCLUDED
#define PROTOBUF_google_2fapi_2fbackend_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace api {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2fapi_2fbackend_2eproto();
void protobuf_InitDefaults_google_2fapi_2fbackend_2eproto();
void protobuf_AssignDesc_google_2fapi_2fbackend_2eproto();
void protobuf_ShutdownFile_google_2fapi_2fbackend_2eproto();

class Backend;
class BackendRule;

enum BackendRule_PathTranslation {
  BackendRule_PathTranslation_PATH_TRANSLATION_UNSPECIFIED = 0,
  BackendRule_PathTranslation_CONSTANT_ADDRESS = 1,
  BackendRule_PathTranslation_APPEND_PATH_TO_ADDRESS = 2,
  BackendRule_PathTranslation_BackendRule_PathTranslation_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BackendRule_PathTranslation_BackendRule_PathTranslation_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BackendRule_PathTranslation_IsValid(int value);
const BackendRule_PathTranslation BackendRule_PathTranslation_PathTranslation_MIN = BackendRule_PathTranslation_PATH_TRANSLATION_UNSPECIFIED;
const BackendRule_PathTranslation BackendRule_PathTranslation_PathTranslation_MAX = BackendRule_PathTranslation_APPEND_PATH_TO_ADDRESS;
const int BackendRule_PathTranslation_PathTranslation_ARRAYSIZE = BackendRule_PathTranslation_PathTranslation_MAX + 1;

const ::google::protobuf::EnumDescriptor* BackendRule_PathTranslation_descriptor();
inline const ::std::string& BackendRule_PathTranslation_Name(BackendRule_PathTranslation value) {
  return ::google::protobuf::internal::NameOfEnum(
    BackendRule_PathTranslation_descriptor(), value);
}
inline bool BackendRule_PathTranslation_Parse(
    const ::std::string& name, BackendRule_PathTranslation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BackendRule_PathTranslation>(
    BackendRule_PathTranslation_descriptor(), name, value);
}
// ===================================================================

class Backend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.Backend) */ {
 public:
  Backend();
  virtual ~Backend();

  Backend(const Backend& from);

  inline Backend& operator=(const Backend& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Backend& default_instance();

  static const Backend* internal_default_instance();

  void Swap(Backend* other);

  // implements Message ----------------------------------------------

  inline Backend* New() const { return New(NULL); }

  Backend* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Backend& from);
  void MergeFrom(const Backend& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Backend* other);
  void UnsafeMergeFrom(const Backend& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.api.BackendRule rules = 1;
  int rules_size() const;
  void clear_rules();
  static const int kRulesFieldNumber = 1;
  const ::google::api::BackendRule& rules(int index) const;
  ::google::api::BackendRule* mutable_rules(int index);
  ::google::api::BackendRule* add_rules();
  ::google::protobuf::RepeatedPtrField< ::google::api::BackendRule >*
      mutable_rules();
  const ::google::protobuf::RepeatedPtrField< ::google::api::BackendRule >&
      rules() const;

  // @@protoc_insertion_point(class_scope:google.api.Backend)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::api::BackendRule > rules_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fbackend_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fbackend_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fbackend_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fbackend_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Backend> Backend_default_instance_;

// -------------------------------------------------------------------

class BackendRule : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.BackendRule) */ {
 public:
  BackendRule();
  virtual ~BackendRule();

  BackendRule(const BackendRule& from);

  inline BackendRule& operator=(const BackendRule& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BackendRule& default_instance();

  enum AuthenticationCase {
    kJwtAudience = 7,
    kDisableAuth = 8,
    AUTHENTICATION_NOT_SET = 0,
  };

  static const BackendRule* internal_default_instance();

  void Swap(BackendRule* other);

  // implements Message ----------------------------------------------

  inline BackendRule* New() const { return New(NULL); }

  BackendRule* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BackendRule& from);
  void MergeFrom(const BackendRule& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BackendRule* other);
  void UnsafeMergeFrom(const BackendRule& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  typedef BackendRule_PathTranslation PathTranslation;
  static const PathTranslation PATH_TRANSLATION_UNSPECIFIED =
    BackendRule_PathTranslation_PATH_TRANSLATION_UNSPECIFIED;
  static const PathTranslation CONSTANT_ADDRESS =
    BackendRule_PathTranslation_CONSTANT_ADDRESS;
  static const PathTranslation APPEND_PATH_TO_ADDRESS =
    BackendRule_PathTranslation_APPEND_PATH_TO_ADDRESS;
  static inline bool PathTranslation_IsValid(int value) {
    return BackendRule_PathTranslation_IsValid(value);
  }
  static const PathTranslation PathTranslation_MIN =
    BackendRule_PathTranslation_PathTranslation_MIN;
  static const PathTranslation PathTranslation_MAX =
    BackendRule_PathTranslation_PathTranslation_MAX;
  static const int PathTranslation_ARRAYSIZE =
    BackendRule_PathTranslation_PathTranslation_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PathTranslation_descriptor() {
    return BackendRule_PathTranslation_descriptor();
  }
  static inline const ::std::string& PathTranslation_Name(PathTranslation value) {
    return BackendRule_PathTranslation_Name(value);
  }
  static inline bool PathTranslation_Parse(const ::std::string& name,
      PathTranslation* value) {
    return BackendRule_PathTranslation_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string selector = 1;
  void clear_selector();
  static const int kSelectorFieldNumber = 1;
  const ::std::string& selector() const;
  void set_selector(const ::std::string& value);
  void set_selector(const char* value);
  void set_selector(const char* value, size_t size);
  ::std::string* mutable_selector();
  ::std::string* release_selector();
  void set_allocated_selector(::std::string* selector);

  // optional string address = 2;
  void clear_address();
  static const int kAddressFieldNumber = 2;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // optional double deadline = 3;
  void clear_deadline();
  static const int kDeadlineFieldNumber = 3;
  double deadline() const;
  void set_deadline(double value);

  // optional double min_deadline = 4 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_min_deadline();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kMinDeadlineFieldNumber = 4;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR double min_deadline() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_min_deadline(double value);

  // optional double operation_deadline = 5;
  void clear_operation_deadline();
  static const int kOperationDeadlineFieldNumber = 5;
  double operation_deadline() const;
  void set_operation_deadline(double value);

  // optional .google.api.BackendRule.PathTranslation path_translation = 6;
  void clear_path_translation();
  static const int kPathTranslationFieldNumber = 6;
  ::google::api::BackendRule_PathTranslation path_translation() const;
  void set_path_translation(::google::api::BackendRule_PathTranslation value);

  // optional string jwt_audience = 7;
  private:
  bool has_jwt_audience() const;
  public:
  void clear_jwt_audience();
  static const int kJwtAudienceFieldNumber = 7;
  const ::std::string& jwt_audience() const;
  void set_jwt_audience(const ::std::string& value);
  void set_jwt_audience(const char* value);
  void set_jwt_audience(const char* value, size_t size);
  ::std::string* mutable_jwt_audience();
  ::std::string* release_jwt_audience();
  void set_allocated_jwt_audience(::std::string* jwt_audience);

  // optional bool disable_auth = 8;
  private:
  bool has_disable_auth() const;
  public:
  void clear_disable_auth();
  static const int kDisableAuthFieldNumber = 8;
  bool disable_auth() const;
  void set_disable_auth(bool value);

  // optional string protocol = 9;
  void clear_protocol();
  static const int kProtocolFieldNumber = 9;
  const ::std::string& protocol() const;
  void set_protocol(const ::std::string& value);
  void set_protocol(const char* value);
  void set_protocol(const char* value, size_t size);
  ::std::string* mutable_protocol();
  ::std::string* release_protocol();
  void set_allocated_protocol(::std::string* protocol);

  // map<string, .google.api.BackendRule> overrides_by_request_protocol = 10;
  int overrides_by_request_protocol_size() const;
  void clear_overrides_by_request_protocol();
  static const int kOverridesByRequestProtocolFieldNumber = 10;
  const ::google::protobuf::Map< ::std::string, ::google::api::BackendRule >&
      overrides_by_request_protocol() const;
  ::google::protobuf::Map< ::std::string, ::google::api::BackendRule >*
      mutable_overrides_by_request_protocol();

  AuthenticationCase authentication_case() const;
  // @@protoc_insertion_point(class_scope:google.api.BackendRule)
 private:
  inline void set_has_jwt_audience();
  inline void set_has_disable_auth();

  inline bool has_authentication() const;
  void clear_authentication();
  inline void clear_has_authentication();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::google::api::BackendRule,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      BackendRule_OverridesByRequestProtocolEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::google::api::BackendRule,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > overrides_by_request_protocol_;
  ::google::protobuf::internal::ArenaStringPtr selector_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::internal::ArenaStringPtr protocol_;
  double deadline_;
  double min_deadline_;
  double operation_deadline_;
  int path_translation_;
  union AuthenticationUnion {
    AuthenticationUnion() {}
    ::google::protobuf::internal::ArenaStringPtr jwt_audience_;
    bool disable_auth_;
  } authentication_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_InitDefaults_google_2fapi_2fbackend_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fbackend_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fbackend_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fbackend_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BackendRule> BackendRule_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Backend

// repeated .google.api.BackendRule rules = 1;
inline int Backend::rules_size() const {
  return rules_.size();
}
inline void Backend::clear_rules() {
  rules_.Clear();
}
inline const ::google::api::BackendRule& Backend::rules(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Backend.rules)
  return rules_.Get(index);
}
inline ::google::api::BackendRule* Backend::mutable_rules(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Backend.rules)
  return rules_.Mutable(index);
}
inline ::google::api::BackendRule* Backend::add_rules() {
  // @@protoc_insertion_point(field_add:google.api.Backend.rules)
  return rules_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::BackendRule >*
Backend::mutable_rules() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Backend.rules)
  return &rules_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::BackendRule >&
Backend::rules() const {
  // @@protoc_insertion_point(field_list:google.api.Backend.rules)
  return rules_;
}

inline const Backend* Backend::internal_default_instance() {
  return &Backend_default_instance_.get();
}
// -------------------------------------------------------------------

// BackendRule

// optional string selector = 1;
inline void BackendRule::clear_selector() {
  selector_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BackendRule::selector() const {
  // @@protoc_insertion_point(field_get:google.api.BackendRule.selector)
  return selector_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BackendRule::set_selector(const ::std::string& value) {
  
  selector_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.BackendRule.selector)
}
inline void BackendRule::set_selector(const char* value) {
  
  selector_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.BackendRule.selector)
}
inline void BackendRule::set_selector(const char* value, size_t size) {
  
  selector_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.BackendRule.selector)
}
inline ::std::string* BackendRule::mutable_selector() {
  
  // @@protoc_insertion_point(field_mutable:google.api.BackendRule.selector)
  return selector_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BackendRule::release_selector() {
  // @@protoc_insertion_point(field_release:google.api.BackendRule.selector)
  
  return selector_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BackendRule::set_allocated_selector(::std::string* selector) {
  if (selector != NULL) {
    
  } else {
    
  }
  selector_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), selector);
  // @@protoc_insertion_point(field_set_allocated:google.api.BackendRule.selector)
}

// optional string address = 2;
inline void BackendRule::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BackendRule::address() const {
  // @@protoc_insertion_point(field_get:google.api.BackendRule.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BackendRule::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.BackendRule.address)
}
inline void BackendRule::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.BackendRule.address)
}
inline void BackendRule::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.BackendRule.address)
}
inline ::std::string* BackendRule::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:google.api.BackendRule.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BackendRule::release_address() {
  // @@protoc_insertion_point(field_release:google.api.BackendRule.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BackendRule::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:google.api.BackendRule.address)
}

// optional double deadline = 3;
inline void BackendRule::clear_deadline() {
  deadline_ = 0;
}
inline double BackendRule::deadline() const {
  // @@protoc_insertion_point(field_get:google.api.BackendRule.deadline)
  return deadline_;
}
inline void BackendRule::set_deadline(double value) {
  
  deadline_ = value;
  // @@protoc_insertion_point(field_set:google.api.BackendRule.deadline)
}

// optional double min_deadline = 4 [deprecated = true];
inline void BackendRule::clear_min_deadline() {
  min_deadline_ = 0;
}
inline double BackendRule::min_deadline() const {
  // @@protoc_insertion_point(field_get:google.api.BackendRule.min_deadline)
  return min_deadline_;
}
inline void BackendRule::set_min_deadline(double value) {
  
  min_deadline_ = value;
  // @@protoc_insertion_point(field_set:google.api.BackendRule.min_deadline)
}

// optional double operation_deadline = 5;
inline void BackendRule::clear_operation_deadline() {
  operation_deadline_ = 0;
}
inline double BackendRule::operation_deadline() const {
  // @@protoc_insertion_point(field_get:google.api.BackendRule.operation_deadline)
  return operation_deadline_;
}
inline void BackendRule::set_operation_deadline(double value) {
  
  operation_deadline_ = value;
  // @@protoc_insertion_point(field_set:google.api.BackendRule.operation_deadline)
}

// optional .google.api.BackendRule.PathTranslation path_translation = 6;
inline void BackendRule::clear_path_translation() {
  path_translation_ = 0;
}
inline ::google::api::BackendRule_PathTranslation BackendRule::path_translation() const {
  // @@protoc_insertion_point(field_get:google.api.BackendRule.path_translation)
  return static_cast< ::google::api::BackendRule_PathTranslation >(path_translation_);
}
inline void BackendRule::set_path_translation(::google::api::BackendRule_PathTranslation value) {
  
  path_translation_ = value;
  // @@protoc_insertion_point(field_set:google.api.BackendRule.path_translation)
}

// optional string jwt_audience = 7;
inline bool BackendRule::has_jwt_audience() const {
  return authentication_case() == kJwtAudience;
}
inline void BackendRule::set_has_jwt_audience() {
  _oneof_case_[0] = kJwtAudience;
}
inline void BackendRule::clear_jwt_audience() {
  if (has_jwt_audience()) {
    authentication_.jwt_audience_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_authentication();
  }
}
inline const ::std::string& BackendRule::jwt_audience() const {
  // @@protoc_insertion_point(field_get:google.api.BackendRule.jwt_audience)
  if (has_jwt_audience()) {
    return authentication_.jwt_audience_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void BackendRule::set_jwt_audience(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.api.BackendRule.jwt_audience)
  if (!has_jwt_audience()) {
    clear_authentication();
    set_has_jwt_audience();
    authentication_.jwt_audience_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  authentication_.jwt_audience_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.BackendRule.jwt_audience)
}
inline void BackendRule::set_jwt_audience(const char* value) {
  if (!has_jwt_audience()) {
    clear_authentication();
    set_has_jwt_audience();
    authentication_.jwt_audience_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  authentication_.jwt_audience_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.BackendRule.jwt_audience)
}
inline void BackendRule::set_jwt_audience(const char* value, size_t size) {
  if (!has_jwt_audience()) {
    clear_authentication();
    set_has_jwt_audience();
    authentication_.jwt_audience_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  authentication_.jwt_audience_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.BackendRule.jwt_audience)
}
inline ::std::string* BackendRule::mutable_jwt_audience() {
  if (!has_jwt_audience()) {
    clear_authentication();
    set_has_jwt_audience();
    authentication_.jwt_audience_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.api.BackendRule.jwt_audience)
  return authentication_.jwt_audience_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BackendRule::release_jwt_audience() {
  // @@protoc_insertion_point(field_release:google.api.BackendRule.jwt_audience)
  if (has_jwt_audience()) {
    clear_has_authentication();
    return authentication_.jwt_audience_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void BackendRule::set_allocated_jwt_audience(::std::string* jwt_audience) {
  if (!has_jwt_audience()) {
    authentication_.jwt_audience_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_authentication();
  if (jwt_audience != NULL) {
    set_has_jwt_audience();
    authentication_.jwt_audience_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        jwt_audience);
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.BackendRule.jwt_audience)
}

// optional bool disable_auth = 8;
inline bool BackendRule::has_disable_auth() const {
  return authentication_case() == kDisableAuth;
}
inline void BackendRule::set_has_disable_auth() {
  _oneof_case_[0] = kDisableAuth;
}
inline void BackendRule::clear_disable_auth() {
  if (has_disable_auth()) {
    authentication_.disable_auth_ = false;
    clear_has_authentication();
  }
}
inline bool BackendRule::disable_auth() const {
  // @@protoc_insertion_point(field_get:google.api.BackendRule.disable_auth)
  if (has_disable_auth()) {
    return authentication_.disable_auth_;
  }
  return false;
}
inline void BackendRule::set_disable_auth(bool value) {
  if (!has_disable_auth()) {
    clear_authentication();
    set_has_disable_auth();
  }
  authentication_.disable_auth_ = value;
  // @@protoc_insertion_point(field_set:google.api.BackendRule.disable_auth)
}

// optional string protocol = 9;
inline void BackendRule::clear_protocol() {
  protocol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BackendRule::protocol() const {
  // @@protoc_insertion_point(field_get:google.api.BackendRule.protocol)
  return protocol_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BackendRule::set_protocol(const ::std::string& value) {
  
  protocol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.BackendRule.protocol)
}
inline void BackendRule::set_protocol(const char* value) {
  
  protocol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.BackendRule.protocol)
}
inline void BackendRule::set_protocol(const char* value, size_t size) {
  
  protocol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.BackendRule.protocol)
}
inline ::std::string* BackendRule::mutable_protocol() {
  
  // @@protoc_insertion_point(field_mutable:google.api.BackendRule.protocol)
  return protocol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BackendRule::release_protocol() {
  // @@protoc_insertion_point(field_release:google.api.BackendRule.protocol)
  
  return protocol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BackendRule::set_allocated_protocol(::std::string* protocol) {
  if (protocol != NULL) {
    
  } else {
    
  }
  protocol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), protocol);
  // @@protoc_insertion_point(field_set_allocated:google.api.BackendRule.protocol)
}

// map<string, .google.api.BackendRule> overrides_by_request_protocol = 10;
inline int BackendRule::overrides_by_request_protocol_size() const {
  return overrides_by_request_protocol_.size();
}
inline void BackendRule::clear_overrides_by_request_protocol() {
  overrides_by_request_protocol_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::api::BackendRule >&
BackendRule::overrides_by_request_protocol() const {
  // @@protoc_insertion_point(field_map:google.api.BackendRule.overrides_by_request_protocol)
  return overrides_by_request_protocol_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::api::BackendRule >*
BackendRule::mutable_overrides_by_request_protocol() {
  // @@protoc_insertion_point(field_mutable_map:google.api.BackendRule.overrides_by_request_protocol)
  return overrides_by_request_protocol_.MutableMap();
}

inline bool BackendRule::has_authentication() const {
  return authentication_case() != AUTHENTICATION_NOT_SET;
}
inline void BackendRule::clear_has_authentication() {
  _oneof_case_[0] = AUTHENTICATION_NOT_SET;
}
inline BackendRule::AuthenticationCase BackendRule::authentication_case() const {
  return BackendRule::AuthenticationCase(_oneof_case_[0]);
}
inline const BackendRule* BackendRule::internal_default_instance() {
  return &BackendRule_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace api
}  // namespace google

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::api::BackendRule_PathTranslation> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::api::BackendRule_PathTranslation>() {
  return ::google::api::BackendRule_PathTranslation_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fapi_2fbackend_2eproto__INCLUDED
