// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/auth.proto

#ifndef PROTOBUF_google_2fapi_2fauth_2eproto__INCLUDED
#define PROTOBUF_google_2fapi_2fauth_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace api {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2fapi_2fauth_2eproto();
void protobuf_InitDefaults_google_2fapi_2fauth_2eproto();
void protobuf_AssignDesc_google_2fapi_2fauth_2eproto();
void protobuf_ShutdownFile_google_2fapi_2fauth_2eproto();

class AuthProvider;
class AuthRequirement;
class Authentication;
class AuthenticationRule;
class JwtLocation;
class OAuthRequirements;

// ===================================================================

class Authentication : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.Authentication) */ {
 public:
  Authentication();
  virtual ~Authentication();

  Authentication(const Authentication& from);

  inline Authentication& operator=(const Authentication& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Authentication& default_instance();

  static const Authentication* internal_default_instance();

  void Swap(Authentication* other);

  // implements Message ----------------------------------------------

  inline Authentication* New() const { return New(NULL); }

  Authentication* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Authentication& from);
  void MergeFrom(const Authentication& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Authentication* other);
  void UnsafeMergeFrom(const Authentication& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.api.AuthenticationRule rules = 3;
  int rules_size() const;
  void clear_rules();
  static const int kRulesFieldNumber = 3;
  const ::google::api::AuthenticationRule& rules(int index) const;
  ::google::api::AuthenticationRule* mutable_rules(int index);
  ::google::api::AuthenticationRule* add_rules();
  ::google::protobuf::RepeatedPtrField< ::google::api::AuthenticationRule >*
      mutable_rules();
  const ::google::protobuf::RepeatedPtrField< ::google::api::AuthenticationRule >&
      rules() const;

  // repeated .google.api.AuthProvider providers = 4;
  int providers_size() const;
  void clear_providers();
  static const int kProvidersFieldNumber = 4;
  const ::google::api::AuthProvider& providers(int index) const;
  ::google::api::AuthProvider* mutable_providers(int index);
  ::google::api::AuthProvider* add_providers();
  ::google::protobuf::RepeatedPtrField< ::google::api::AuthProvider >*
      mutable_providers();
  const ::google::protobuf::RepeatedPtrField< ::google::api::AuthProvider >&
      providers() const;

  // @@protoc_insertion_point(class_scope:google.api.Authentication)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::api::AuthenticationRule > rules_;
  ::google::protobuf::RepeatedPtrField< ::google::api::AuthProvider > providers_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fauth_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fauth_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fauth_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fauth_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Authentication> Authentication_default_instance_;

// -------------------------------------------------------------------

class AuthenticationRule : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.AuthenticationRule) */ {
 public:
  AuthenticationRule();
  virtual ~AuthenticationRule();

  AuthenticationRule(const AuthenticationRule& from);

  inline AuthenticationRule& operator=(const AuthenticationRule& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthenticationRule& default_instance();

  static const AuthenticationRule* internal_default_instance();

  void Swap(AuthenticationRule* other);

  // implements Message ----------------------------------------------

  inline AuthenticationRule* New() const { return New(NULL); }

  AuthenticationRule* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthenticationRule& from);
  void MergeFrom(const AuthenticationRule& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthenticationRule* other);
  void UnsafeMergeFrom(const AuthenticationRule& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string selector = 1;
  void clear_selector();
  static const int kSelectorFieldNumber = 1;
  const ::std::string& selector() const;
  void set_selector(const ::std::string& value);
  void set_selector(const char* value);
  void set_selector(const char* value, size_t size);
  ::std::string* mutable_selector();
  ::std::string* release_selector();
  void set_allocated_selector(::std::string* selector);

  // optional .google.api.OAuthRequirements oauth = 2;
  bool has_oauth() const;
  void clear_oauth();
  static const int kOauthFieldNumber = 2;
  const ::google::api::OAuthRequirements& oauth() const;
  ::google::api::OAuthRequirements* mutable_oauth();
  ::google::api::OAuthRequirements* release_oauth();
  void set_allocated_oauth(::google::api::OAuthRequirements* oauth);

  // optional bool allow_without_credential = 5;
  void clear_allow_without_credential();
  static const int kAllowWithoutCredentialFieldNumber = 5;
  bool allow_without_credential() const;
  void set_allow_without_credential(bool value);

  // repeated .google.api.AuthRequirement requirements = 7;
  int requirements_size() const;
  void clear_requirements();
  static const int kRequirementsFieldNumber = 7;
  const ::google::api::AuthRequirement& requirements(int index) const;
  ::google::api::AuthRequirement* mutable_requirements(int index);
  ::google::api::AuthRequirement* add_requirements();
  ::google::protobuf::RepeatedPtrField< ::google::api::AuthRequirement >*
      mutable_requirements();
  const ::google::protobuf::RepeatedPtrField< ::google::api::AuthRequirement >&
      requirements() const;

  // @@protoc_insertion_point(class_scope:google.api.AuthenticationRule)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::api::AuthRequirement > requirements_;
  ::google::protobuf::internal::ArenaStringPtr selector_;
  ::google::api::OAuthRequirements* oauth_;
  bool allow_without_credential_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fauth_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fauth_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fauth_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fauth_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AuthenticationRule> AuthenticationRule_default_instance_;

// -------------------------------------------------------------------

class JwtLocation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.JwtLocation) */ {
 public:
  JwtLocation();
  virtual ~JwtLocation();

  JwtLocation(const JwtLocation& from);

  inline JwtLocation& operator=(const JwtLocation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JwtLocation& default_instance();

  enum InCase {
    kHeader = 1,
    kQuery = 2,
    kCookie = 4,
    IN_NOT_SET = 0,
  };

  static const JwtLocation* internal_default_instance();

  void Swap(JwtLocation* other);

  // implements Message ----------------------------------------------

  inline JwtLocation* New() const { return New(NULL); }

  JwtLocation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JwtLocation& from);
  void MergeFrom(const JwtLocation& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JwtLocation* other);
  void UnsafeMergeFrom(const JwtLocation& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string header = 1;
  private:
  bool has_header() const;
  public:
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::std::string& header() const;
  void set_header(const ::std::string& value);
  void set_header(const char* value);
  void set_header(const char* value, size_t size);
  ::std::string* mutable_header();
  ::std::string* release_header();
  void set_allocated_header(::std::string* header);

  // optional string query = 2;
  private:
  bool has_query() const;
  public:
  void clear_query();
  static const int kQueryFieldNumber = 2;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // optional string cookie = 4;
  private:
  bool has_cookie() const;
  public:
  void clear_cookie();
  static const int kCookieFieldNumber = 4;
  const ::std::string& cookie() const;
  void set_cookie(const ::std::string& value);
  void set_cookie(const char* value);
  void set_cookie(const char* value, size_t size);
  ::std::string* mutable_cookie();
  ::std::string* release_cookie();
  void set_allocated_cookie(::std::string* cookie);

  // optional string value_prefix = 3;
  void clear_value_prefix();
  static const int kValuePrefixFieldNumber = 3;
  const ::std::string& value_prefix() const;
  void set_value_prefix(const ::std::string& value);
  void set_value_prefix(const char* value);
  void set_value_prefix(const char* value, size_t size);
  ::std::string* mutable_value_prefix();
  ::std::string* release_value_prefix();
  void set_allocated_value_prefix(::std::string* value_prefix);

  InCase in_case() const;
  // @@protoc_insertion_point(class_scope:google.api.JwtLocation)
 private:
  inline void set_has_header();
  inline void set_has_query();
  inline void set_has_cookie();

  inline bool has_in() const;
  void clear_in();
  inline void clear_has_in();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_prefix_;
  union InUnion {
    InUnion() {}
    ::google::protobuf::internal::ArenaStringPtr header_;
    ::google::protobuf::internal::ArenaStringPtr query_;
    ::google::protobuf::internal::ArenaStringPtr cookie_;
  } in_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_InitDefaults_google_2fapi_2fauth_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fauth_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fauth_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fauth_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<JwtLocation> JwtLocation_default_instance_;

// -------------------------------------------------------------------

class AuthProvider : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.AuthProvider) */ {
 public:
  AuthProvider();
  virtual ~AuthProvider();

  AuthProvider(const AuthProvider& from);

  inline AuthProvider& operator=(const AuthProvider& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthProvider& default_instance();

  static const AuthProvider* internal_default_instance();

  void Swap(AuthProvider* other);

  // implements Message ----------------------------------------------

  inline AuthProvider* New() const { return New(NULL); }

  AuthProvider* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthProvider& from);
  void MergeFrom(const AuthProvider& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthProvider* other);
  void UnsafeMergeFrom(const AuthProvider& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional string issuer = 2;
  void clear_issuer();
  static const int kIssuerFieldNumber = 2;
  const ::std::string& issuer() const;
  void set_issuer(const ::std::string& value);
  void set_issuer(const char* value);
  void set_issuer(const char* value, size_t size);
  ::std::string* mutable_issuer();
  ::std::string* release_issuer();
  void set_allocated_issuer(::std::string* issuer);

  // optional string jwks_uri = 3;
  void clear_jwks_uri();
  static const int kJwksUriFieldNumber = 3;
  const ::std::string& jwks_uri() const;
  void set_jwks_uri(const ::std::string& value);
  void set_jwks_uri(const char* value);
  void set_jwks_uri(const char* value, size_t size);
  ::std::string* mutable_jwks_uri();
  ::std::string* release_jwks_uri();
  void set_allocated_jwks_uri(::std::string* jwks_uri);

  // optional string audiences = 4;
  void clear_audiences();
  static const int kAudiencesFieldNumber = 4;
  const ::std::string& audiences() const;
  void set_audiences(const ::std::string& value);
  void set_audiences(const char* value);
  void set_audiences(const char* value, size_t size);
  ::std::string* mutable_audiences();
  ::std::string* release_audiences();
  void set_allocated_audiences(::std::string* audiences);

  // optional string authorization_url = 5;
  void clear_authorization_url();
  static const int kAuthorizationUrlFieldNumber = 5;
  const ::std::string& authorization_url() const;
  void set_authorization_url(const ::std::string& value);
  void set_authorization_url(const char* value);
  void set_authorization_url(const char* value, size_t size);
  ::std::string* mutable_authorization_url();
  ::std::string* release_authorization_url();
  void set_allocated_authorization_url(::std::string* authorization_url);

  // repeated .google.api.JwtLocation jwt_locations = 6;
  int jwt_locations_size() const;
  void clear_jwt_locations();
  static const int kJwtLocationsFieldNumber = 6;
  const ::google::api::JwtLocation& jwt_locations(int index) const;
  ::google::api::JwtLocation* mutable_jwt_locations(int index);
  ::google::api::JwtLocation* add_jwt_locations();
  ::google::protobuf::RepeatedPtrField< ::google::api::JwtLocation >*
      mutable_jwt_locations();
  const ::google::protobuf::RepeatedPtrField< ::google::api::JwtLocation >&
      jwt_locations() const;

  // @@protoc_insertion_point(class_scope:google.api.AuthProvider)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::api::JwtLocation > jwt_locations_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr issuer_;
  ::google::protobuf::internal::ArenaStringPtr jwks_uri_;
  ::google::protobuf::internal::ArenaStringPtr audiences_;
  ::google::protobuf::internal::ArenaStringPtr authorization_url_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fauth_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fauth_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fauth_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fauth_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AuthProvider> AuthProvider_default_instance_;

// -------------------------------------------------------------------

class OAuthRequirements : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.OAuthRequirements) */ {
 public:
  OAuthRequirements();
  virtual ~OAuthRequirements();

  OAuthRequirements(const OAuthRequirements& from);

  inline OAuthRequirements& operator=(const OAuthRequirements& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OAuthRequirements& default_instance();

  static const OAuthRequirements* internal_default_instance();

  void Swap(OAuthRequirements* other);

  // implements Message ----------------------------------------------

  inline OAuthRequirements* New() const { return New(NULL); }

  OAuthRequirements* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OAuthRequirements& from);
  void MergeFrom(const OAuthRequirements& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OAuthRequirements* other);
  void UnsafeMergeFrom(const OAuthRequirements& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string canonical_scopes = 1;
  void clear_canonical_scopes();
  static const int kCanonicalScopesFieldNumber = 1;
  const ::std::string& canonical_scopes() const;
  void set_canonical_scopes(const ::std::string& value);
  void set_canonical_scopes(const char* value);
  void set_canonical_scopes(const char* value, size_t size);
  ::std::string* mutable_canonical_scopes();
  ::std::string* release_canonical_scopes();
  void set_allocated_canonical_scopes(::std::string* canonical_scopes);

  // @@protoc_insertion_point(class_scope:google.api.OAuthRequirements)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr canonical_scopes_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fauth_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fauth_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fauth_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fauth_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<OAuthRequirements> OAuthRequirements_default_instance_;

// -------------------------------------------------------------------

class AuthRequirement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.AuthRequirement) */ {
 public:
  AuthRequirement();
  virtual ~AuthRequirement();

  AuthRequirement(const AuthRequirement& from);

  inline AuthRequirement& operator=(const AuthRequirement& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthRequirement& default_instance();

  static const AuthRequirement* internal_default_instance();

  void Swap(AuthRequirement* other);

  // implements Message ----------------------------------------------

  inline AuthRequirement* New() const { return New(NULL); }

  AuthRequirement* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthRequirement& from);
  void MergeFrom(const AuthRequirement& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthRequirement* other);
  void UnsafeMergeFrom(const AuthRequirement& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string provider_id = 1;
  void clear_provider_id();
  static const int kProviderIdFieldNumber = 1;
  const ::std::string& provider_id() const;
  void set_provider_id(const ::std::string& value);
  void set_provider_id(const char* value);
  void set_provider_id(const char* value, size_t size);
  ::std::string* mutable_provider_id();
  ::std::string* release_provider_id();
  void set_allocated_provider_id(::std::string* provider_id);

  // optional string audiences = 2;
  void clear_audiences();
  static const int kAudiencesFieldNumber = 2;
  const ::std::string& audiences() const;
  void set_audiences(const ::std::string& value);
  void set_audiences(const char* value);
  void set_audiences(const char* value, size_t size);
  ::std::string* mutable_audiences();
  ::std::string* release_audiences();
  void set_allocated_audiences(::std::string* audiences);

  // @@protoc_insertion_point(class_scope:google.api.AuthRequirement)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr provider_id_;
  ::google::protobuf::internal::ArenaStringPtr audiences_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fauth_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fauth_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fauth_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fauth_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AuthRequirement> AuthRequirement_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Authentication

// repeated .google.api.AuthenticationRule rules = 3;
inline int Authentication::rules_size() const {
  return rules_.size();
}
inline void Authentication::clear_rules() {
  rules_.Clear();
}
inline const ::google::api::AuthenticationRule& Authentication::rules(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Authentication.rules)
  return rules_.Get(index);
}
inline ::google::api::AuthenticationRule* Authentication::mutable_rules(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Authentication.rules)
  return rules_.Mutable(index);
}
inline ::google::api::AuthenticationRule* Authentication::add_rules() {
  // @@protoc_insertion_point(field_add:google.api.Authentication.rules)
  return rules_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::AuthenticationRule >*
Authentication::mutable_rules() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Authentication.rules)
  return &rules_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::AuthenticationRule >&
Authentication::rules() const {
  // @@protoc_insertion_point(field_list:google.api.Authentication.rules)
  return rules_;
}

// repeated .google.api.AuthProvider providers = 4;
inline int Authentication::providers_size() const {
  return providers_.size();
}
inline void Authentication::clear_providers() {
  providers_.Clear();
}
inline const ::google::api::AuthProvider& Authentication::providers(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Authentication.providers)
  return providers_.Get(index);
}
inline ::google::api::AuthProvider* Authentication::mutable_providers(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Authentication.providers)
  return providers_.Mutable(index);
}
inline ::google::api::AuthProvider* Authentication::add_providers() {
  // @@protoc_insertion_point(field_add:google.api.Authentication.providers)
  return providers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::AuthProvider >*
Authentication::mutable_providers() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Authentication.providers)
  return &providers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::AuthProvider >&
Authentication::providers() const {
  // @@protoc_insertion_point(field_list:google.api.Authentication.providers)
  return providers_;
}

inline const Authentication* Authentication::internal_default_instance() {
  return &Authentication_default_instance_.get();
}
// -------------------------------------------------------------------

// AuthenticationRule

// optional string selector = 1;
inline void AuthenticationRule::clear_selector() {
  selector_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthenticationRule::selector() const {
  // @@protoc_insertion_point(field_get:google.api.AuthenticationRule.selector)
  return selector_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthenticationRule::set_selector(const ::std::string& value) {
  
  selector_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.AuthenticationRule.selector)
}
inline void AuthenticationRule::set_selector(const char* value) {
  
  selector_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.AuthenticationRule.selector)
}
inline void AuthenticationRule::set_selector(const char* value, size_t size) {
  
  selector_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.AuthenticationRule.selector)
}
inline ::std::string* AuthenticationRule::mutable_selector() {
  
  // @@protoc_insertion_point(field_mutable:google.api.AuthenticationRule.selector)
  return selector_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthenticationRule::release_selector() {
  // @@protoc_insertion_point(field_release:google.api.AuthenticationRule.selector)
  
  return selector_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthenticationRule::set_allocated_selector(::std::string* selector) {
  if (selector != NULL) {
    
  } else {
    
  }
  selector_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), selector);
  // @@protoc_insertion_point(field_set_allocated:google.api.AuthenticationRule.selector)
}

// optional .google.api.OAuthRequirements oauth = 2;
inline bool AuthenticationRule::has_oauth() const {
  return this != internal_default_instance() && oauth_ != NULL;
}
inline void AuthenticationRule::clear_oauth() {
  if (GetArenaNoVirtual() == NULL && oauth_ != NULL) delete oauth_;
  oauth_ = NULL;
}
inline const ::google::api::OAuthRequirements& AuthenticationRule::oauth() const {
  // @@protoc_insertion_point(field_get:google.api.AuthenticationRule.oauth)
  return oauth_ != NULL ? *oauth_
                         : *::google::api::OAuthRequirements::internal_default_instance();
}
inline ::google::api::OAuthRequirements* AuthenticationRule::mutable_oauth() {
  
  if (oauth_ == NULL) {
    oauth_ = new ::google::api::OAuthRequirements;
  }
  // @@protoc_insertion_point(field_mutable:google.api.AuthenticationRule.oauth)
  return oauth_;
}
inline ::google::api::OAuthRequirements* AuthenticationRule::release_oauth() {
  // @@protoc_insertion_point(field_release:google.api.AuthenticationRule.oauth)
  
  ::google::api::OAuthRequirements* temp = oauth_;
  oauth_ = NULL;
  return temp;
}
inline void AuthenticationRule::set_allocated_oauth(::google::api::OAuthRequirements* oauth) {
  delete oauth_;
  oauth_ = oauth;
  if (oauth) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.AuthenticationRule.oauth)
}

// optional bool allow_without_credential = 5;
inline void AuthenticationRule::clear_allow_without_credential() {
  allow_without_credential_ = false;
}
inline bool AuthenticationRule::allow_without_credential() const {
  // @@protoc_insertion_point(field_get:google.api.AuthenticationRule.allow_without_credential)
  return allow_without_credential_;
}
inline void AuthenticationRule::set_allow_without_credential(bool value) {
  
  allow_without_credential_ = value;
  // @@protoc_insertion_point(field_set:google.api.AuthenticationRule.allow_without_credential)
}

// repeated .google.api.AuthRequirement requirements = 7;
inline int AuthenticationRule::requirements_size() const {
  return requirements_.size();
}
inline void AuthenticationRule::clear_requirements() {
  requirements_.Clear();
}
inline const ::google::api::AuthRequirement& AuthenticationRule::requirements(int index) const {
  // @@protoc_insertion_point(field_get:google.api.AuthenticationRule.requirements)
  return requirements_.Get(index);
}
inline ::google::api::AuthRequirement* AuthenticationRule::mutable_requirements(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.AuthenticationRule.requirements)
  return requirements_.Mutable(index);
}
inline ::google::api::AuthRequirement* AuthenticationRule::add_requirements() {
  // @@protoc_insertion_point(field_add:google.api.AuthenticationRule.requirements)
  return requirements_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::AuthRequirement >*
AuthenticationRule::mutable_requirements() {
  // @@protoc_insertion_point(field_mutable_list:google.api.AuthenticationRule.requirements)
  return &requirements_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::AuthRequirement >&
AuthenticationRule::requirements() const {
  // @@protoc_insertion_point(field_list:google.api.AuthenticationRule.requirements)
  return requirements_;
}

inline const AuthenticationRule* AuthenticationRule::internal_default_instance() {
  return &AuthenticationRule_default_instance_.get();
}
// -------------------------------------------------------------------

// JwtLocation

// optional string header = 1;
inline bool JwtLocation::has_header() const {
  return in_case() == kHeader;
}
inline void JwtLocation::set_has_header() {
  _oneof_case_[0] = kHeader;
}
inline void JwtLocation::clear_header() {
  if (has_header()) {
    in_.header_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_in();
  }
}
inline const ::std::string& JwtLocation::header() const {
  // @@protoc_insertion_point(field_get:google.api.JwtLocation.header)
  if (has_header()) {
    return in_.header_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void JwtLocation::set_header(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.api.JwtLocation.header)
  if (!has_header()) {
    clear_in();
    set_has_header();
    in_.header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  in_.header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.JwtLocation.header)
}
inline void JwtLocation::set_header(const char* value) {
  if (!has_header()) {
    clear_in();
    set_has_header();
    in_.header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  in_.header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.JwtLocation.header)
}
inline void JwtLocation::set_header(const char* value, size_t size) {
  if (!has_header()) {
    clear_in();
    set_has_header();
    in_.header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  in_.header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.JwtLocation.header)
}
inline ::std::string* JwtLocation::mutable_header() {
  if (!has_header()) {
    clear_in();
    set_has_header();
    in_.header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.api.JwtLocation.header)
  return in_.header_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JwtLocation::release_header() {
  // @@protoc_insertion_point(field_release:google.api.JwtLocation.header)
  if (has_header()) {
    clear_has_in();
    return in_.header_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void JwtLocation::set_allocated_header(::std::string* header) {
  if (!has_header()) {
    in_.header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_in();
  if (header != NULL) {
    set_has_header();
    in_.header_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        header);
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.JwtLocation.header)
}

// optional string query = 2;
inline bool JwtLocation::has_query() const {
  return in_case() == kQuery;
}
inline void JwtLocation::set_has_query() {
  _oneof_case_[0] = kQuery;
}
inline void JwtLocation::clear_query() {
  if (has_query()) {
    in_.query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_in();
  }
}
inline const ::std::string& JwtLocation::query() const {
  // @@protoc_insertion_point(field_get:google.api.JwtLocation.query)
  if (has_query()) {
    return in_.query_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void JwtLocation::set_query(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.api.JwtLocation.query)
  if (!has_query()) {
    clear_in();
    set_has_query();
    in_.query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  in_.query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.JwtLocation.query)
}
inline void JwtLocation::set_query(const char* value) {
  if (!has_query()) {
    clear_in();
    set_has_query();
    in_.query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  in_.query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.JwtLocation.query)
}
inline void JwtLocation::set_query(const char* value, size_t size) {
  if (!has_query()) {
    clear_in();
    set_has_query();
    in_.query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  in_.query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.JwtLocation.query)
}
inline ::std::string* JwtLocation::mutable_query() {
  if (!has_query()) {
    clear_in();
    set_has_query();
    in_.query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.api.JwtLocation.query)
  return in_.query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JwtLocation::release_query() {
  // @@protoc_insertion_point(field_release:google.api.JwtLocation.query)
  if (has_query()) {
    clear_has_in();
    return in_.query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void JwtLocation::set_allocated_query(::std::string* query) {
  if (!has_query()) {
    in_.query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_in();
  if (query != NULL) {
    set_has_query();
    in_.query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        query);
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.JwtLocation.query)
}

// optional string cookie = 4;
inline bool JwtLocation::has_cookie() const {
  return in_case() == kCookie;
}
inline void JwtLocation::set_has_cookie() {
  _oneof_case_[0] = kCookie;
}
inline void JwtLocation::clear_cookie() {
  if (has_cookie()) {
    in_.cookie_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_in();
  }
}
inline const ::std::string& JwtLocation::cookie() const {
  // @@protoc_insertion_point(field_get:google.api.JwtLocation.cookie)
  if (has_cookie()) {
    return in_.cookie_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void JwtLocation::set_cookie(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.api.JwtLocation.cookie)
  if (!has_cookie()) {
    clear_in();
    set_has_cookie();
    in_.cookie_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  in_.cookie_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.JwtLocation.cookie)
}
inline void JwtLocation::set_cookie(const char* value) {
  if (!has_cookie()) {
    clear_in();
    set_has_cookie();
    in_.cookie_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  in_.cookie_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.JwtLocation.cookie)
}
inline void JwtLocation::set_cookie(const char* value, size_t size) {
  if (!has_cookie()) {
    clear_in();
    set_has_cookie();
    in_.cookie_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  in_.cookie_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.JwtLocation.cookie)
}
inline ::std::string* JwtLocation::mutable_cookie() {
  if (!has_cookie()) {
    clear_in();
    set_has_cookie();
    in_.cookie_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.api.JwtLocation.cookie)
  return in_.cookie_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JwtLocation::release_cookie() {
  // @@protoc_insertion_point(field_release:google.api.JwtLocation.cookie)
  if (has_cookie()) {
    clear_has_in();
    return in_.cookie_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void JwtLocation::set_allocated_cookie(::std::string* cookie) {
  if (!has_cookie()) {
    in_.cookie_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_in();
  if (cookie != NULL) {
    set_has_cookie();
    in_.cookie_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        cookie);
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.JwtLocation.cookie)
}

// optional string value_prefix = 3;
inline void JwtLocation::clear_value_prefix() {
  value_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JwtLocation::value_prefix() const {
  // @@protoc_insertion_point(field_get:google.api.JwtLocation.value_prefix)
  return value_prefix_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JwtLocation::set_value_prefix(const ::std::string& value) {
  
  value_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.JwtLocation.value_prefix)
}
inline void JwtLocation::set_value_prefix(const char* value) {
  
  value_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.JwtLocation.value_prefix)
}
inline void JwtLocation::set_value_prefix(const char* value, size_t size) {
  
  value_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.JwtLocation.value_prefix)
}
inline ::std::string* JwtLocation::mutable_value_prefix() {
  
  // @@protoc_insertion_point(field_mutable:google.api.JwtLocation.value_prefix)
  return value_prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JwtLocation::release_value_prefix() {
  // @@protoc_insertion_point(field_release:google.api.JwtLocation.value_prefix)
  
  return value_prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JwtLocation::set_allocated_value_prefix(::std::string* value_prefix) {
  if (value_prefix != NULL) {
    
  } else {
    
  }
  value_prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value_prefix);
  // @@protoc_insertion_point(field_set_allocated:google.api.JwtLocation.value_prefix)
}

inline bool JwtLocation::has_in() const {
  return in_case() != IN_NOT_SET;
}
inline void JwtLocation::clear_has_in() {
  _oneof_case_[0] = IN_NOT_SET;
}
inline JwtLocation::InCase JwtLocation::in_case() const {
  return JwtLocation::InCase(_oneof_case_[0]);
}
inline const JwtLocation* JwtLocation::internal_default_instance() {
  return &JwtLocation_default_instance_.get();
}
// -------------------------------------------------------------------

// AuthProvider

// optional string id = 1;
inline void AuthProvider::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthProvider::id() const {
  // @@protoc_insertion_point(field_get:google.api.AuthProvider.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthProvider::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.AuthProvider.id)
}
inline void AuthProvider::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.AuthProvider.id)
}
inline void AuthProvider::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.AuthProvider.id)
}
inline ::std::string* AuthProvider::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.AuthProvider.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthProvider::release_id() {
  // @@protoc_insertion_point(field_release:google.api.AuthProvider.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthProvider::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.api.AuthProvider.id)
}

// optional string issuer = 2;
inline void AuthProvider::clear_issuer() {
  issuer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthProvider::issuer() const {
  // @@protoc_insertion_point(field_get:google.api.AuthProvider.issuer)
  return issuer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthProvider::set_issuer(const ::std::string& value) {
  
  issuer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.AuthProvider.issuer)
}
inline void AuthProvider::set_issuer(const char* value) {
  
  issuer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.AuthProvider.issuer)
}
inline void AuthProvider::set_issuer(const char* value, size_t size) {
  
  issuer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.AuthProvider.issuer)
}
inline ::std::string* AuthProvider::mutable_issuer() {
  
  // @@protoc_insertion_point(field_mutable:google.api.AuthProvider.issuer)
  return issuer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthProvider::release_issuer() {
  // @@protoc_insertion_point(field_release:google.api.AuthProvider.issuer)
  
  return issuer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthProvider::set_allocated_issuer(::std::string* issuer) {
  if (issuer != NULL) {
    
  } else {
    
  }
  issuer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), issuer);
  // @@protoc_insertion_point(field_set_allocated:google.api.AuthProvider.issuer)
}

// optional string jwks_uri = 3;
inline void AuthProvider::clear_jwks_uri() {
  jwks_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthProvider::jwks_uri() const {
  // @@protoc_insertion_point(field_get:google.api.AuthProvider.jwks_uri)
  return jwks_uri_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthProvider::set_jwks_uri(const ::std::string& value) {
  
  jwks_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.AuthProvider.jwks_uri)
}
inline void AuthProvider::set_jwks_uri(const char* value) {
  
  jwks_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.AuthProvider.jwks_uri)
}
inline void AuthProvider::set_jwks_uri(const char* value, size_t size) {
  
  jwks_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.AuthProvider.jwks_uri)
}
inline ::std::string* AuthProvider::mutable_jwks_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.api.AuthProvider.jwks_uri)
  return jwks_uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthProvider::release_jwks_uri() {
  // @@protoc_insertion_point(field_release:google.api.AuthProvider.jwks_uri)
  
  return jwks_uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthProvider::set_allocated_jwks_uri(::std::string* jwks_uri) {
  if (jwks_uri != NULL) {
    
  } else {
    
  }
  jwks_uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), jwks_uri);
  // @@protoc_insertion_point(field_set_allocated:google.api.AuthProvider.jwks_uri)
}

// optional string audiences = 4;
inline void AuthProvider::clear_audiences() {
  audiences_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthProvider::audiences() const {
  // @@protoc_insertion_point(field_get:google.api.AuthProvider.audiences)
  return audiences_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthProvider::set_audiences(const ::std::string& value) {
  
  audiences_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.AuthProvider.audiences)
}
inline void AuthProvider::set_audiences(const char* value) {
  
  audiences_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.AuthProvider.audiences)
}
inline void AuthProvider::set_audiences(const char* value, size_t size) {
  
  audiences_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.AuthProvider.audiences)
}
inline ::std::string* AuthProvider::mutable_audiences() {
  
  // @@protoc_insertion_point(field_mutable:google.api.AuthProvider.audiences)
  return audiences_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthProvider::release_audiences() {
  // @@protoc_insertion_point(field_release:google.api.AuthProvider.audiences)
  
  return audiences_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthProvider::set_allocated_audiences(::std::string* audiences) {
  if (audiences != NULL) {
    
  } else {
    
  }
  audiences_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), audiences);
  // @@protoc_insertion_point(field_set_allocated:google.api.AuthProvider.audiences)
}

// optional string authorization_url = 5;
inline void AuthProvider::clear_authorization_url() {
  authorization_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthProvider::authorization_url() const {
  // @@protoc_insertion_point(field_get:google.api.AuthProvider.authorization_url)
  return authorization_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthProvider::set_authorization_url(const ::std::string& value) {
  
  authorization_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.AuthProvider.authorization_url)
}
inline void AuthProvider::set_authorization_url(const char* value) {
  
  authorization_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.AuthProvider.authorization_url)
}
inline void AuthProvider::set_authorization_url(const char* value, size_t size) {
  
  authorization_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.AuthProvider.authorization_url)
}
inline ::std::string* AuthProvider::mutable_authorization_url() {
  
  // @@protoc_insertion_point(field_mutable:google.api.AuthProvider.authorization_url)
  return authorization_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthProvider::release_authorization_url() {
  // @@protoc_insertion_point(field_release:google.api.AuthProvider.authorization_url)
  
  return authorization_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthProvider::set_allocated_authorization_url(::std::string* authorization_url) {
  if (authorization_url != NULL) {
    
  } else {
    
  }
  authorization_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authorization_url);
  // @@protoc_insertion_point(field_set_allocated:google.api.AuthProvider.authorization_url)
}

// repeated .google.api.JwtLocation jwt_locations = 6;
inline int AuthProvider::jwt_locations_size() const {
  return jwt_locations_.size();
}
inline void AuthProvider::clear_jwt_locations() {
  jwt_locations_.Clear();
}
inline const ::google::api::JwtLocation& AuthProvider::jwt_locations(int index) const {
  // @@protoc_insertion_point(field_get:google.api.AuthProvider.jwt_locations)
  return jwt_locations_.Get(index);
}
inline ::google::api::JwtLocation* AuthProvider::mutable_jwt_locations(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.AuthProvider.jwt_locations)
  return jwt_locations_.Mutable(index);
}
inline ::google::api::JwtLocation* AuthProvider::add_jwt_locations() {
  // @@protoc_insertion_point(field_add:google.api.AuthProvider.jwt_locations)
  return jwt_locations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::JwtLocation >*
AuthProvider::mutable_jwt_locations() {
  // @@protoc_insertion_point(field_mutable_list:google.api.AuthProvider.jwt_locations)
  return &jwt_locations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::JwtLocation >&
AuthProvider::jwt_locations() const {
  // @@protoc_insertion_point(field_list:google.api.AuthProvider.jwt_locations)
  return jwt_locations_;
}

inline const AuthProvider* AuthProvider::internal_default_instance() {
  return &AuthProvider_default_instance_.get();
}
// -------------------------------------------------------------------

// OAuthRequirements

// optional string canonical_scopes = 1;
inline void OAuthRequirements::clear_canonical_scopes() {
  canonical_scopes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OAuthRequirements::canonical_scopes() const {
  // @@protoc_insertion_point(field_get:google.api.OAuthRequirements.canonical_scopes)
  return canonical_scopes_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OAuthRequirements::set_canonical_scopes(const ::std::string& value) {
  
  canonical_scopes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.OAuthRequirements.canonical_scopes)
}
inline void OAuthRequirements::set_canonical_scopes(const char* value) {
  
  canonical_scopes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.OAuthRequirements.canonical_scopes)
}
inline void OAuthRequirements::set_canonical_scopes(const char* value, size_t size) {
  
  canonical_scopes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.OAuthRequirements.canonical_scopes)
}
inline ::std::string* OAuthRequirements::mutable_canonical_scopes() {
  
  // @@protoc_insertion_point(field_mutable:google.api.OAuthRequirements.canonical_scopes)
  return canonical_scopes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OAuthRequirements::release_canonical_scopes() {
  // @@protoc_insertion_point(field_release:google.api.OAuthRequirements.canonical_scopes)
  
  return canonical_scopes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OAuthRequirements::set_allocated_canonical_scopes(::std::string* canonical_scopes) {
  if (canonical_scopes != NULL) {
    
  } else {
    
  }
  canonical_scopes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), canonical_scopes);
  // @@protoc_insertion_point(field_set_allocated:google.api.OAuthRequirements.canonical_scopes)
}

inline const OAuthRequirements* OAuthRequirements::internal_default_instance() {
  return &OAuthRequirements_default_instance_.get();
}
// -------------------------------------------------------------------

// AuthRequirement

// optional string provider_id = 1;
inline void AuthRequirement::clear_provider_id() {
  provider_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthRequirement::provider_id() const {
  // @@protoc_insertion_point(field_get:google.api.AuthRequirement.provider_id)
  return provider_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthRequirement::set_provider_id(const ::std::string& value) {
  
  provider_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.AuthRequirement.provider_id)
}
inline void AuthRequirement::set_provider_id(const char* value) {
  
  provider_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.AuthRequirement.provider_id)
}
inline void AuthRequirement::set_provider_id(const char* value, size_t size) {
  
  provider_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.AuthRequirement.provider_id)
}
inline ::std::string* AuthRequirement::mutable_provider_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.AuthRequirement.provider_id)
  return provider_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthRequirement::release_provider_id() {
  // @@protoc_insertion_point(field_release:google.api.AuthRequirement.provider_id)
  
  return provider_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthRequirement::set_allocated_provider_id(::std::string* provider_id) {
  if (provider_id != NULL) {
    
  } else {
    
  }
  provider_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), provider_id);
  // @@protoc_insertion_point(field_set_allocated:google.api.AuthRequirement.provider_id)
}

// optional string audiences = 2;
inline void AuthRequirement::clear_audiences() {
  audiences_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthRequirement::audiences() const {
  // @@protoc_insertion_point(field_get:google.api.AuthRequirement.audiences)
  return audiences_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthRequirement::set_audiences(const ::std::string& value) {
  
  audiences_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.AuthRequirement.audiences)
}
inline void AuthRequirement::set_audiences(const char* value) {
  
  audiences_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.AuthRequirement.audiences)
}
inline void AuthRequirement::set_audiences(const char* value, size_t size) {
  
  audiences_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.AuthRequirement.audiences)
}
inline ::std::string* AuthRequirement::mutable_audiences() {
  
  // @@protoc_insertion_point(field_mutable:google.api.AuthRequirement.audiences)
  return audiences_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthRequirement::release_audiences() {
  // @@protoc_insertion_point(field_release:google.api.AuthRequirement.audiences)
  
  return audiences_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthRequirement::set_allocated_audiences(::std::string* audiences) {
  if (audiences != NULL) {
    
  } else {
    
  }
  audiences_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), audiences);
  // @@protoc_insertion_point(field_set_allocated:google.api.AuthRequirement.audiences)
}

inline const AuthRequirement* AuthRequirement::internal_default_instance() {
  return &AuthRequirement_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fapi_2fauth_2eproto__INCLUDED
