// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/resource.proto

#ifndef PROTOBUF_google_2fapi_2fresource_2eproto__INCLUDED
#define PROTOBUF_google_2fapi_2fresource_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/descriptor.pb.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace api {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2fapi_2fresource_2eproto();
void protobuf_InitDefaults_google_2fapi_2fresource_2eproto();
void protobuf_AssignDesc_google_2fapi_2fresource_2eproto();
void protobuf_ShutdownFile_google_2fapi_2fresource_2eproto();

class ResourceDescriptor;
class ResourceReference;

enum ResourceDescriptor_History {
  ResourceDescriptor_History_HISTORY_UNSPECIFIED = 0,
  ResourceDescriptor_History_ORIGINALLY_SINGLE_PATTERN = 1,
  ResourceDescriptor_History_FUTURE_MULTI_PATTERN = 2,
  ResourceDescriptor_History_ResourceDescriptor_History_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ResourceDescriptor_History_ResourceDescriptor_History_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ResourceDescriptor_History_IsValid(int value);
const ResourceDescriptor_History ResourceDescriptor_History_History_MIN = ResourceDescriptor_History_HISTORY_UNSPECIFIED;
const ResourceDescriptor_History ResourceDescriptor_History_History_MAX = ResourceDescriptor_History_FUTURE_MULTI_PATTERN;
const int ResourceDescriptor_History_History_ARRAYSIZE = ResourceDescriptor_History_History_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResourceDescriptor_History_descriptor();
inline const ::std::string& ResourceDescriptor_History_Name(ResourceDescriptor_History value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResourceDescriptor_History_descriptor(), value);
}
inline bool ResourceDescriptor_History_Parse(
    const ::std::string& name, ResourceDescriptor_History* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResourceDescriptor_History>(
    ResourceDescriptor_History_descriptor(), name, value);
}
enum ResourceDescriptor_Style {
  ResourceDescriptor_Style_STYLE_UNSPECIFIED = 0,
  ResourceDescriptor_Style_DECLARATIVE_FRIENDLY = 1,
  ResourceDescriptor_Style_ResourceDescriptor_Style_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ResourceDescriptor_Style_ResourceDescriptor_Style_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ResourceDescriptor_Style_IsValid(int value);
const ResourceDescriptor_Style ResourceDescriptor_Style_Style_MIN = ResourceDescriptor_Style_STYLE_UNSPECIFIED;
const ResourceDescriptor_Style ResourceDescriptor_Style_Style_MAX = ResourceDescriptor_Style_DECLARATIVE_FRIENDLY;
const int ResourceDescriptor_Style_Style_ARRAYSIZE = ResourceDescriptor_Style_Style_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResourceDescriptor_Style_descriptor();
inline const ::std::string& ResourceDescriptor_Style_Name(ResourceDescriptor_Style value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResourceDescriptor_Style_descriptor(), value);
}
inline bool ResourceDescriptor_Style_Parse(
    const ::std::string& name, ResourceDescriptor_Style* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResourceDescriptor_Style>(
    ResourceDescriptor_Style_descriptor(), name, value);
}
// ===================================================================

class ResourceDescriptor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.ResourceDescriptor) */ {
 public:
  ResourceDescriptor();
  virtual ~ResourceDescriptor();

  ResourceDescriptor(const ResourceDescriptor& from);

  inline ResourceDescriptor& operator=(const ResourceDescriptor& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceDescriptor& default_instance();

  static const ResourceDescriptor* internal_default_instance();

  void UnsafeArenaSwap(ResourceDescriptor* other);
  void Swap(ResourceDescriptor* other);

  // implements Message ----------------------------------------------

  inline ResourceDescriptor* New() const { return New(NULL); }

  ResourceDescriptor* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResourceDescriptor& from);
  void MergeFrom(const ResourceDescriptor& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResourceDescriptor* other);
  void UnsafeMergeFrom(const ResourceDescriptor& from);
  protected:
  explicit ResourceDescriptor(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ResourceDescriptor_History History;
  static const History HISTORY_UNSPECIFIED =
    ResourceDescriptor_History_HISTORY_UNSPECIFIED;
  static const History ORIGINALLY_SINGLE_PATTERN =
    ResourceDescriptor_History_ORIGINALLY_SINGLE_PATTERN;
  static const History FUTURE_MULTI_PATTERN =
    ResourceDescriptor_History_FUTURE_MULTI_PATTERN;
  static inline bool History_IsValid(int value) {
    return ResourceDescriptor_History_IsValid(value);
  }
  static const History History_MIN =
    ResourceDescriptor_History_History_MIN;
  static const History History_MAX =
    ResourceDescriptor_History_History_MAX;
  static const int History_ARRAYSIZE =
    ResourceDescriptor_History_History_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  History_descriptor() {
    return ResourceDescriptor_History_descriptor();
  }
  static inline const ::std::string& History_Name(History value) {
    return ResourceDescriptor_History_Name(value);
  }
  static inline bool History_Parse(const ::std::string& name,
      History* value) {
    return ResourceDescriptor_History_Parse(name, value);
  }

  typedef ResourceDescriptor_Style Style;
  static const Style STYLE_UNSPECIFIED =
    ResourceDescriptor_Style_STYLE_UNSPECIFIED;
  static const Style DECLARATIVE_FRIENDLY =
    ResourceDescriptor_Style_DECLARATIVE_FRIENDLY;
  static inline bool Style_IsValid(int value) {
    return ResourceDescriptor_Style_IsValid(value);
  }
  static const Style Style_MIN =
    ResourceDescriptor_Style_Style_MIN;
  static const Style Style_MAX =
    ResourceDescriptor_Style_Style_MAX;
  static const int Style_ARRAYSIZE =
    ResourceDescriptor_Style_Style_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Style_descriptor() {
    return ResourceDescriptor_Style_descriptor();
  }
  static inline const ::std::string& Style_Name(Style value) {
    return ResourceDescriptor_Style_Name(value);
  }
  static inline bool Style_Parse(const ::std::string& name,
      Style* value) {
    return ResourceDescriptor_Style_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);
  ::std::string* unsafe_arena_release_type();
  void unsafe_arena_set_allocated_type(
      ::std::string* type);

  // repeated string pattern = 2;
  int pattern_size() const;
  void clear_pattern();
  static const int kPatternFieldNumber = 2;
  const ::std::string& pattern(int index) const;
  ::std::string* mutable_pattern(int index);
  void set_pattern(int index, const ::std::string& value);
  void set_pattern(int index, const char* value);
  void set_pattern(int index, const char* value, size_t size);
  ::std::string* add_pattern();
  void add_pattern(const ::std::string& value);
  void add_pattern(const char* value);
  void add_pattern(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& pattern() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_pattern();

  // optional string name_field = 3;
  void clear_name_field();
  static const int kNameFieldFieldNumber = 3;
  const ::std::string& name_field() const;
  void set_name_field(const ::std::string& value);
  void set_name_field(const char* value);
  void set_name_field(const char* value, size_t size);
  ::std::string* mutable_name_field();
  ::std::string* release_name_field();
  void set_allocated_name_field(::std::string* name_field);
  ::std::string* unsafe_arena_release_name_field();
  void unsafe_arena_set_allocated_name_field(
      ::std::string* name_field);

  // optional .google.api.ResourceDescriptor.History history = 4;
  void clear_history();
  static const int kHistoryFieldNumber = 4;
  ::google::api::ResourceDescriptor_History history() const;
  void set_history(::google::api::ResourceDescriptor_History value);

  // optional string plural = 5;
  void clear_plural();
  static const int kPluralFieldNumber = 5;
  const ::std::string& plural() const;
  void set_plural(const ::std::string& value);
  void set_plural(const char* value);
  void set_plural(const char* value, size_t size);
  ::std::string* mutable_plural();
  ::std::string* release_plural();
  void set_allocated_plural(::std::string* plural);
  ::std::string* unsafe_arena_release_plural();
  void unsafe_arena_set_allocated_plural(
      ::std::string* plural);

  // optional string singular = 6;
  void clear_singular();
  static const int kSingularFieldNumber = 6;
  const ::std::string& singular() const;
  void set_singular(const ::std::string& value);
  void set_singular(const char* value);
  void set_singular(const char* value, size_t size);
  ::std::string* mutable_singular();
  ::std::string* release_singular();
  void set_allocated_singular(::std::string* singular);
  ::std::string* unsafe_arena_release_singular();
  void unsafe_arena_set_allocated_singular(
      ::std::string* singular);

  // repeated .google.api.ResourceDescriptor.Style style = 10;
  int style_size() const;
  void clear_style();
  static const int kStyleFieldNumber = 10;
  ::google::api::ResourceDescriptor_Style style(int index) const;
  void set_style(int index, ::google::api::ResourceDescriptor_Style value);
  void add_style(::google::api::ResourceDescriptor_Style value);
  const ::google::protobuf::RepeatedField<int>& style() const;
  ::google::protobuf::RepeatedField<int>* mutable_style();

  // @@protoc_insertion_point(class_scope:google.api.ResourceDescriptor)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> pattern_;
  ::google::protobuf::RepeatedField<int> style_;
  mutable int _style_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr name_field_;
  ::google::protobuf::internal::ArenaStringPtr plural_;
  ::google::protobuf::internal::ArenaStringPtr singular_;
  int history_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fresource_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fresource_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fresource_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fresource_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ResourceDescriptor> ResourceDescriptor_default_instance_;

// -------------------------------------------------------------------

class ResourceReference : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.ResourceReference) */ {
 public:
  ResourceReference();
  virtual ~ResourceReference();

  ResourceReference(const ResourceReference& from);

  inline ResourceReference& operator=(const ResourceReference& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceReference& default_instance();

  static const ResourceReference* internal_default_instance();

  void UnsafeArenaSwap(ResourceReference* other);
  void Swap(ResourceReference* other);

  // implements Message ----------------------------------------------

  inline ResourceReference* New() const { return New(NULL); }

  ResourceReference* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResourceReference& from);
  void MergeFrom(const ResourceReference& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResourceReference* other);
  void UnsafeMergeFrom(const ResourceReference& from);
  protected:
  explicit ResourceReference(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);
  ::std::string* unsafe_arena_release_type();
  void unsafe_arena_set_allocated_type(
      ::std::string* type);

  // optional string child_type = 2;
  void clear_child_type();
  static const int kChildTypeFieldNumber = 2;
  const ::std::string& child_type() const;
  void set_child_type(const ::std::string& value);
  void set_child_type(const char* value);
  void set_child_type(const char* value, size_t size);
  ::std::string* mutable_child_type();
  ::std::string* release_child_type();
  void set_allocated_child_type(::std::string* child_type);
  ::std::string* unsafe_arena_release_child_type();
  void unsafe_arena_set_allocated_child_type(
      ::std::string* child_type);

  // @@protoc_insertion_point(class_scope:google.api.ResourceReference)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr child_type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fresource_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fresource_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fresource_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fresource_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ResourceReference> ResourceReference_default_instance_;

// ===================================================================

static const int kResourceReferenceFieldNumber = 1055;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::MessageTypeTraits< ::google::api::ResourceReference >, 11, false >
  resource_reference;
static const int kResourceDefinitionFieldNumber = 1053;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FileOptions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::google::api::ResourceDescriptor >, 11, false >
  resource_definition;
static const int kResourceFieldNumber = 1053;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::MessageTypeTraits< ::google::api::ResourceDescriptor >, 11, false >
  resource;

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ResourceDescriptor

// optional string type = 1;
inline void ResourceDescriptor::clear_type() {
  type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ResourceDescriptor::type() const {
  // @@protoc_insertion_point(field_get:google.api.ResourceDescriptor.type)
  return type_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResourceDescriptor::set_type(const ::std::string& value) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.ResourceDescriptor.type)
}
inline void ResourceDescriptor::set_type(const char* value) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.ResourceDescriptor.type)
}
inline void ResourceDescriptor::set_type(const char* value,
    size_t size) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.ResourceDescriptor.type)
}
inline ::std::string* ResourceDescriptor::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:google.api.ResourceDescriptor.type)
  return type_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ResourceDescriptor::release_type() {
  // @@protoc_insertion_point(field_release:google.api.ResourceDescriptor.type)
  
  return type_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ResourceDescriptor::unsafe_arena_release_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.ResourceDescriptor.type)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return type_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ResourceDescriptor::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.ResourceDescriptor.type)
}
inline void ResourceDescriptor::unsafe_arena_set_allocated_type(
    ::std::string* type) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (type != NULL) {
    
  } else {
    
  }
  type_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      type, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.ResourceDescriptor.type)
}

// repeated string pattern = 2;
inline int ResourceDescriptor::pattern_size() const {
  return pattern_.size();
}
inline void ResourceDescriptor::clear_pattern() {
  pattern_.Clear();
}
inline const ::std::string& ResourceDescriptor::pattern(int index) const {
  // @@protoc_insertion_point(field_get:google.api.ResourceDescriptor.pattern)
  return pattern_.Get(index);
}
inline ::std::string* ResourceDescriptor::mutable_pattern(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.ResourceDescriptor.pattern)
  return pattern_.Mutable(index);
}
inline void ResourceDescriptor::set_pattern(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.api.ResourceDescriptor.pattern)
  pattern_.Mutable(index)->assign(value);
}
inline void ResourceDescriptor::set_pattern(int index, const char* value) {
  pattern_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.api.ResourceDescriptor.pattern)
}
inline void ResourceDescriptor::set_pattern(int index, const char* value, size_t size) {
  pattern_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.api.ResourceDescriptor.pattern)
}
inline ::std::string* ResourceDescriptor::add_pattern() {
  // @@protoc_insertion_point(field_add_mutable:google.api.ResourceDescriptor.pattern)
  return pattern_.Add();
}
inline void ResourceDescriptor::add_pattern(const ::std::string& value) {
  pattern_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.api.ResourceDescriptor.pattern)
}
inline void ResourceDescriptor::add_pattern(const char* value) {
  pattern_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.api.ResourceDescriptor.pattern)
}
inline void ResourceDescriptor::add_pattern(const char* value, size_t size) {
  pattern_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.api.ResourceDescriptor.pattern)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ResourceDescriptor::pattern() const {
  // @@protoc_insertion_point(field_list:google.api.ResourceDescriptor.pattern)
  return pattern_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ResourceDescriptor::mutable_pattern() {
  // @@protoc_insertion_point(field_mutable_list:google.api.ResourceDescriptor.pattern)
  return &pattern_;
}

// optional string name_field = 3;
inline void ResourceDescriptor::clear_name_field() {
  name_field_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ResourceDescriptor::name_field() const {
  // @@protoc_insertion_point(field_get:google.api.ResourceDescriptor.name_field)
  return name_field_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResourceDescriptor::set_name_field(const ::std::string& value) {
  
  name_field_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.ResourceDescriptor.name_field)
}
inline void ResourceDescriptor::set_name_field(const char* value) {
  
  name_field_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.ResourceDescriptor.name_field)
}
inline void ResourceDescriptor::set_name_field(const char* value,
    size_t size) {
  
  name_field_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.ResourceDescriptor.name_field)
}
inline ::std::string* ResourceDescriptor::mutable_name_field() {
  
  // @@protoc_insertion_point(field_mutable:google.api.ResourceDescriptor.name_field)
  return name_field_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ResourceDescriptor::release_name_field() {
  // @@protoc_insertion_point(field_release:google.api.ResourceDescriptor.name_field)
  
  return name_field_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ResourceDescriptor::unsafe_arena_release_name_field() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.ResourceDescriptor.name_field)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_field_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ResourceDescriptor::set_allocated_name_field(::std::string* name_field) {
  if (name_field != NULL) {
    
  } else {
    
  }
  name_field_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name_field,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.ResourceDescriptor.name_field)
}
inline void ResourceDescriptor::unsafe_arena_set_allocated_name_field(
    ::std::string* name_field) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name_field != NULL) {
    
  } else {
    
  }
  name_field_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name_field, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.ResourceDescriptor.name_field)
}

// optional .google.api.ResourceDescriptor.History history = 4;
inline void ResourceDescriptor::clear_history() {
  history_ = 0;
}
inline ::google::api::ResourceDescriptor_History ResourceDescriptor::history() const {
  // @@protoc_insertion_point(field_get:google.api.ResourceDescriptor.history)
  return static_cast< ::google::api::ResourceDescriptor_History >(history_);
}
inline void ResourceDescriptor::set_history(::google::api::ResourceDescriptor_History value) {
  
  history_ = value;
  // @@protoc_insertion_point(field_set:google.api.ResourceDescriptor.history)
}

// optional string plural = 5;
inline void ResourceDescriptor::clear_plural() {
  plural_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ResourceDescriptor::plural() const {
  // @@protoc_insertion_point(field_get:google.api.ResourceDescriptor.plural)
  return plural_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResourceDescriptor::set_plural(const ::std::string& value) {
  
  plural_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.ResourceDescriptor.plural)
}
inline void ResourceDescriptor::set_plural(const char* value) {
  
  plural_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.ResourceDescriptor.plural)
}
inline void ResourceDescriptor::set_plural(const char* value,
    size_t size) {
  
  plural_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.ResourceDescriptor.plural)
}
inline ::std::string* ResourceDescriptor::mutable_plural() {
  
  // @@protoc_insertion_point(field_mutable:google.api.ResourceDescriptor.plural)
  return plural_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ResourceDescriptor::release_plural() {
  // @@protoc_insertion_point(field_release:google.api.ResourceDescriptor.plural)
  
  return plural_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ResourceDescriptor::unsafe_arena_release_plural() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.ResourceDescriptor.plural)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return plural_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ResourceDescriptor::set_allocated_plural(::std::string* plural) {
  if (plural != NULL) {
    
  } else {
    
  }
  plural_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plural,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.ResourceDescriptor.plural)
}
inline void ResourceDescriptor::unsafe_arena_set_allocated_plural(
    ::std::string* plural) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (plural != NULL) {
    
  } else {
    
  }
  plural_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      plural, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.ResourceDescriptor.plural)
}

// optional string singular = 6;
inline void ResourceDescriptor::clear_singular() {
  singular_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ResourceDescriptor::singular() const {
  // @@protoc_insertion_point(field_get:google.api.ResourceDescriptor.singular)
  return singular_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResourceDescriptor::set_singular(const ::std::string& value) {
  
  singular_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.ResourceDescriptor.singular)
}
inline void ResourceDescriptor::set_singular(const char* value) {
  
  singular_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.ResourceDescriptor.singular)
}
inline void ResourceDescriptor::set_singular(const char* value,
    size_t size) {
  
  singular_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.ResourceDescriptor.singular)
}
inline ::std::string* ResourceDescriptor::mutable_singular() {
  
  // @@protoc_insertion_point(field_mutable:google.api.ResourceDescriptor.singular)
  return singular_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ResourceDescriptor::release_singular() {
  // @@protoc_insertion_point(field_release:google.api.ResourceDescriptor.singular)
  
  return singular_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ResourceDescriptor::unsafe_arena_release_singular() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.ResourceDescriptor.singular)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return singular_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ResourceDescriptor::set_allocated_singular(::std::string* singular) {
  if (singular != NULL) {
    
  } else {
    
  }
  singular_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), singular,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.ResourceDescriptor.singular)
}
inline void ResourceDescriptor::unsafe_arena_set_allocated_singular(
    ::std::string* singular) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (singular != NULL) {
    
  } else {
    
  }
  singular_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      singular, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.ResourceDescriptor.singular)
}

// repeated .google.api.ResourceDescriptor.Style style = 10;
inline int ResourceDescriptor::style_size() const {
  return style_.size();
}
inline void ResourceDescriptor::clear_style() {
  style_.Clear();
}
inline ::google::api::ResourceDescriptor_Style ResourceDescriptor::style(int index) const {
  // @@protoc_insertion_point(field_get:google.api.ResourceDescriptor.style)
  return static_cast< ::google::api::ResourceDescriptor_Style >(style_.Get(index));
}
inline void ResourceDescriptor::set_style(int index, ::google::api::ResourceDescriptor_Style value) {
  style_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.api.ResourceDescriptor.style)
}
inline void ResourceDescriptor::add_style(::google::api::ResourceDescriptor_Style value) {
  style_.Add(value);
  // @@protoc_insertion_point(field_add:google.api.ResourceDescriptor.style)
}
inline const ::google::protobuf::RepeatedField<int>&
ResourceDescriptor::style() const {
  // @@protoc_insertion_point(field_list:google.api.ResourceDescriptor.style)
  return style_;
}
inline ::google::protobuf::RepeatedField<int>*
ResourceDescriptor::mutable_style() {
  // @@protoc_insertion_point(field_mutable_list:google.api.ResourceDescriptor.style)
  return &style_;
}

inline const ResourceDescriptor* ResourceDescriptor::internal_default_instance() {
  return &ResourceDescriptor_default_instance_.get();
}
// -------------------------------------------------------------------

// ResourceReference

// optional string type = 1;
inline void ResourceReference::clear_type() {
  type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ResourceReference::type() const {
  // @@protoc_insertion_point(field_get:google.api.ResourceReference.type)
  return type_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResourceReference::set_type(const ::std::string& value) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.ResourceReference.type)
}
inline void ResourceReference::set_type(const char* value) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.ResourceReference.type)
}
inline void ResourceReference::set_type(const char* value,
    size_t size) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.ResourceReference.type)
}
inline ::std::string* ResourceReference::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:google.api.ResourceReference.type)
  return type_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ResourceReference::release_type() {
  // @@protoc_insertion_point(field_release:google.api.ResourceReference.type)
  
  return type_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ResourceReference::unsafe_arena_release_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.ResourceReference.type)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return type_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ResourceReference::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.ResourceReference.type)
}
inline void ResourceReference::unsafe_arena_set_allocated_type(
    ::std::string* type) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (type != NULL) {
    
  } else {
    
  }
  type_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      type, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.ResourceReference.type)
}

// optional string child_type = 2;
inline void ResourceReference::clear_child_type() {
  child_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ResourceReference::child_type() const {
  // @@protoc_insertion_point(field_get:google.api.ResourceReference.child_type)
  return child_type_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResourceReference::set_child_type(const ::std::string& value) {
  
  child_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.ResourceReference.child_type)
}
inline void ResourceReference::set_child_type(const char* value) {
  
  child_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.ResourceReference.child_type)
}
inline void ResourceReference::set_child_type(const char* value,
    size_t size) {
  
  child_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.ResourceReference.child_type)
}
inline ::std::string* ResourceReference::mutable_child_type() {
  
  // @@protoc_insertion_point(field_mutable:google.api.ResourceReference.child_type)
  return child_type_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ResourceReference::release_child_type() {
  // @@protoc_insertion_point(field_release:google.api.ResourceReference.child_type)
  
  return child_type_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ResourceReference::unsafe_arena_release_child_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.ResourceReference.child_type)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return child_type_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ResourceReference::set_allocated_child_type(::std::string* child_type) {
  if (child_type != NULL) {
    
  } else {
    
  }
  child_type_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), child_type,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.ResourceReference.child_type)
}
inline void ResourceReference::unsafe_arena_set_allocated_child_type(
    ::std::string* child_type) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (child_type != NULL) {
    
  } else {
    
  }
  child_type_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      child_type, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.ResourceReference.child_type)
}

inline const ResourceReference* ResourceReference::internal_default_instance() {
  return &ResourceReference_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace api
}  // namespace google

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::api::ResourceDescriptor_History> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::api::ResourceDescriptor_History>() {
  return ::google::api::ResourceDescriptor_History_descriptor();
}
template <> struct is_proto_enum< ::google::api::ResourceDescriptor_Style> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::api::ResourceDescriptor_Style>() {
  return ::google::api::ResourceDescriptor_Style_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fapi_2fresource_2eproto__INCLUDED
