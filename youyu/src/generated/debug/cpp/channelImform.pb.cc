// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: channelImform.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "channelImform.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace uyujoy {
namespace com {
namespace api {
namespace channel {
namespace frontend {

namespace {

const ::google::protobuf::Descriptor* channelStateChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  channelStateChange_reflection_ = NULL;
const ::google::protobuf::Descriptor* channelUserStateChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  channelUserStateChange_reflection_ = NULL;
const ::google::protobuf::Descriptor* channelMatched_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  channelMatched_reflection_ = NULL;
const ::google::protobuf::Descriptor* channelSkipped_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  channelSkipped_reflection_ = NULL;
const ::google::protobuf::Descriptor* matchAttr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  matchAttr_reflection_ = NULL;
const ::google::protobuf::Descriptor* deviceUpdated_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  deviceUpdated_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_channelImform_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_channelImform_2eproto() {
  protobuf_AddDesc_channelImform_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "channelImform.proto");
  GOOGLE_CHECK(file != NULL);
  channelStateChange_descriptor_ = file->message_type(0);
  static const int channelStateChange_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(channelStateChange, ch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(channelStateChange, reason_),
  };
  channelStateChange_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      channelStateChange_descriptor_,
      channelStateChange::internal_default_instance(),
      channelStateChange_offsets_,
      -1,
      -1,
      -1,
      sizeof(channelStateChange),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(channelStateChange, _internal_metadata_));
  channelUserStateChange_descriptor_ = file->message_type(1);
  static const int channelUserStateChange_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(channelUserStateChange, chu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(channelUserStateChange, reason_),
  };
  channelUserStateChange_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      channelUserStateChange_descriptor_,
      channelUserStateChange::internal_default_instance(),
      channelUserStateChange_offsets_,
      -1,
      -1,
      -1,
      sizeof(channelUserStateChange),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(channelUserStateChange, _internal_metadata_));
  channelMatched_descriptor_ = file->message_type(2);
  static const int channelMatched_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(channelMatched, ch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(channelMatched, token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(channelMatched, selfuniqid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(channelMatched, peeruniqid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(channelMatched, matcheduserattr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(channelMatched, ts_),
  };
  channelMatched_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      channelMatched_descriptor_,
      channelMatched::internal_default_instance(),
      channelMatched_offsets_,
      -1,
      -1,
      -1,
      sizeof(channelMatched),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(channelMatched, _internal_metadata_));
  channelSkipped_descriptor_ = file->message_type(3);
  static const int channelSkipped_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(channelSkipped, channelid_),
  };
  channelSkipped_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      channelSkipped_descriptor_,
      channelSkipped::internal_default_instance(),
      channelSkipped_offsets_,
      -1,
      -1,
      -1,
      sizeof(channelSkipped),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(channelSkipped, _internal_metadata_));
  matchAttr_descriptor_ = file->message_type(4);
  static const int matchAttr_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(matchAttr, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(matchAttr, photourl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(matchAttr, gender_),
  };
  matchAttr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      matchAttr_descriptor_,
      matchAttr::internal_default_instance(),
      matchAttr_offsets_,
      -1,
      -1,
      -1,
      sizeof(matchAttr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(matchAttr, _internal_metadata_));
  deviceUpdated_descriptor_ = file->message_type(5);
  static const int deviceUpdated_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(deviceUpdated, ip_),
  };
  deviceUpdated_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      deviceUpdated_descriptor_,
      deviceUpdated::internal_default_instance(),
      deviceUpdated_offsets_,
      -1,
      -1,
      -1,
      sizeof(deviceUpdated),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(deviceUpdated, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_channelImform_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      channelStateChange_descriptor_, channelStateChange::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      channelUserStateChange_descriptor_, channelUserStateChange::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      channelMatched_descriptor_, channelMatched::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      channelSkipped_descriptor_, channelSkipped::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      matchAttr_descriptor_, matchAttr::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      deviceUpdated_descriptor_, deviceUpdated::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_channelImform_2eproto() {
  channelStateChange_default_instance_.Shutdown();
  delete channelStateChange_reflection_;
  channelUserStateChange_default_instance_.Shutdown();
  delete channelUserStateChange_reflection_;
  channelMatched_default_instance_.Shutdown();
  delete channelMatched_reflection_;
  channelSkipped_default_instance_.Shutdown();
  delete channelSkipped_reflection_;
  matchAttr_default_instance_.Shutdown();
  delete matchAttr_reflection_;
  deviceUpdated_default_instance_.Shutdown();
  delete deviceUpdated_reflection_;
}

void protobuf_InitDefaults_channelImform_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::uyujoy::com::api::channel::frontend::protobuf_InitDefaults_channelBase_2eproto();
  channelStateChange_default_instance_.DefaultConstruct();
  channelUserStateChange_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  channelMatched_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  channelSkipped_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  matchAttr_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  deviceUpdated_default_instance_.DefaultConstruct();
  channelStateChange_default_instance_.get_mutable()->InitAsDefaultInstance();
  channelUserStateChange_default_instance_.get_mutable()->InitAsDefaultInstance();
  channelMatched_default_instance_.get_mutable()->InitAsDefaultInstance();
  channelSkipped_default_instance_.get_mutable()->InitAsDefaultInstance();
  matchAttr_default_instance_.get_mutable()->InitAsDefaultInstance();
  deviceUpdated_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_channelImform_2eproto_once_);
void protobuf_InitDefaults_channelImform_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_channelImform_2eproto_once_,
                 &protobuf_InitDefaults_channelImform_2eproto_impl);
}
void protobuf_AddDesc_channelImform_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_channelImform_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023channelImform.proto\022\037uyujoy.com.api.ch"
    "annel.frontend\032\021channelBase.proto\"Z\n\022cha"
    "nnelStateChange\0224\n\002ch\030\001 \001(\0132(.uyujoy.com"
    ".api.channel.frontend.channel\022\016\n\006reason\030"
    "\002 \001(\r\"c\n\026channelUserStateChange\0229\n\003chu\030\001"
    " \001(\0132,.uyujoy.com.api.channel.frontend.c"
    "hannelUser\022\016\n\006reason\030\002 \001(\r\"\316\001\n\016channelMa"
    "tched\0224\n\002ch\030\001 \001(\0132(.uyujoy.com.api.chann"
    "el.frontend.channel\022\r\n\005token\030\002 \001(\t\022\022\n\nse"
    "lfUniqId\030\003 \001(\t\022\022\n\npeerUniqId\030\004 \001(\t\022C\n\017ma"
    "tchedUserAttr\030\005 \001(\0132*.uyujoy.com.api.cha"
    "nnel.frontend.matchAttr\022\n\n\002ts\030\006 \001(\003\"#\n\016c"
    "hannelSkipped\022\021\n\tchannelId\030\001 \001(\t\";\n\tmatc"
    "hAttr\022\014\n\004name\030\001 \001(\t\022\020\n\010photoUrl\030\002 \001(\t\022\016\n"
    "\006gender\030\003 \001(\r\"\033\n\rdeviceUpdated\022\n\n\002ip\030\001 \001"
    "(\tB*Z(uyujoy.com/pass/protogen/channel;c"
    "hannelb\006proto3", 654);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "channelImform.proto", &protobuf_RegisterTypes);
  ::uyujoy::com::api::channel::frontend::protobuf_AddDesc_channelBase_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_channelImform_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_channelImform_2eproto_once_);
void protobuf_AddDesc_channelImform_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_channelImform_2eproto_once_,
                 &protobuf_AddDesc_channelImform_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_channelImform_2eproto {
  StaticDescriptorInitializer_channelImform_2eproto() {
    protobuf_AddDesc_channelImform_2eproto();
  }
} static_descriptor_initializer_channelImform_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int channelStateChange::kChFieldNumber;
const int channelStateChange::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

channelStateChange::channelStateChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_channelImform_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:uyujoy.com.api.channel.frontend.channelStateChange)
}

void channelStateChange::InitAsDefaultInstance() {
  ch_ = const_cast< ::uyujoy::com::api::channel::frontend::channel*>(
      ::uyujoy::com::api::channel::frontend::channel::internal_default_instance());
}

channelStateChange::channelStateChange(const channelStateChange& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:uyujoy.com.api.channel.frontend.channelStateChange)
}

void channelStateChange::SharedCtor() {
  ch_ = NULL;
  reason_ = 0u;
  _cached_size_ = 0;
}

channelStateChange::~channelStateChange() {
  // @@protoc_insertion_point(destructor:uyujoy.com.api.channel.frontend.channelStateChange)
  SharedDtor();
}

void channelStateChange::SharedDtor() {
  if (this != &channelStateChange_default_instance_.get()) {
    delete ch_;
  }
}

void channelStateChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* channelStateChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return channelStateChange_descriptor_;
}

const channelStateChange& channelStateChange::default_instance() {
  protobuf_InitDefaults_channelImform_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<channelStateChange> channelStateChange_default_instance_;

channelStateChange* channelStateChange::New(::google::protobuf::Arena* arena) const {
  channelStateChange* n = new channelStateChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void channelStateChange::Clear() {
// @@protoc_insertion_point(message_clear_start:uyujoy.com.api.channel.frontend.channelStateChange)
  if (GetArenaNoVirtual() == NULL && ch_ != NULL) delete ch_;
  ch_ = NULL;
  reason_ = 0u;
}

bool channelStateChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:uyujoy.com.api.channel.frontend.channelStateChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .uyujoy.com.api.channel.frontend.channel ch = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ch()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_reason;
        break;
      }

      // optional uint32 reason = 2;
      case 2: {
        if (tag == 16) {
         parse_reason:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:uyujoy.com.api.channel.frontend.channelStateChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:uyujoy.com.api.channel.frontend.channelStateChange)
  return false;
#undef DO_
}

void channelStateChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:uyujoy.com.api.channel.frontend.channelStateChange)
  // optional .uyujoy.com.api.channel.frontend.channel ch = 1;
  if (this->has_ch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->ch_, output);
  }

  // optional uint32 reason = 2;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->reason(), output);
  }

  // @@protoc_insertion_point(serialize_end:uyujoy.com.api.channel.frontend.channelStateChange)
}

::google::protobuf::uint8* channelStateChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:uyujoy.com.api.channel.frontend.channelStateChange)
  // optional .uyujoy.com.api.channel.frontend.channel ch = 1;
  if (this->has_ch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->ch_, false, target);
  }

  // optional uint32 reason = 2;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->reason(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:uyujoy.com.api.channel.frontend.channelStateChange)
  return target;
}

size_t channelStateChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uyujoy.com.api.channel.frontend.channelStateChange)
  size_t total_size = 0;

  // optional .uyujoy.com.api.channel.frontend.channel ch = 1;
  if (this->has_ch()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ch_);
  }

  // optional uint32 reason = 2;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void channelStateChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:uyujoy.com.api.channel.frontend.channelStateChange)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const channelStateChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const channelStateChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:uyujoy.com.api.channel.frontend.channelStateChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:uyujoy.com.api.channel.frontend.channelStateChange)
    UnsafeMergeFrom(*source);
  }
}

void channelStateChange::MergeFrom(const channelStateChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:uyujoy.com.api.channel.frontend.channelStateChange)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void channelStateChange::UnsafeMergeFrom(const channelStateChange& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_ch()) {
    mutable_ch()->::uyujoy::com::api::channel::frontend::channel::MergeFrom(from.ch());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void channelStateChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:uyujoy.com.api.channel.frontend.channelStateChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void channelStateChange::CopyFrom(const channelStateChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uyujoy.com.api.channel.frontend.channelStateChange)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool channelStateChange::IsInitialized() const {

  return true;
}

void channelStateChange::Swap(channelStateChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void channelStateChange::InternalSwap(channelStateChange* other) {
  std::swap(ch_, other->ch_);
  std::swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata channelStateChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = channelStateChange_descriptor_;
  metadata.reflection = channelStateChange_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// channelStateChange

// optional .uyujoy.com.api.channel.frontend.channel ch = 1;
bool channelStateChange::has_ch() const {
  return this != internal_default_instance() && ch_ != NULL;
}
void channelStateChange::clear_ch() {
  if (GetArenaNoVirtual() == NULL && ch_ != NULL) delete ch_;
  ch_ = NULL;
}
const ::uyujoy::com::api::channel::frontend::channel& channelStateChange::ch() const {
  // @@protoc_insertion_point(field_get:uyujoy.com.api.channel.frontend.channelStateChange.ch)
  return ch_ != NULL ? *ch_
                         : *::uyujoy::com::api::channel::frontend::channel::internal_default_instance();
}
::uyujoy::com::api::channel::frontend::channel* channelStateChange::mutable_ch() {
  
  if (ch_ == NULL) {
    ch_ = new ::uyujoy::com::api::channel::frontend::channel;
  }
  // @@protoc_insertion_point(field_mutable:uyujoy.com.api.channel.frontend.channelStateChange.ch)
  return ch_;
}
::uyujoy::com::api::channel::frontend::channel* channelStateChange::release_ch() {
  // @@protoc_insertion_point(field_release:uyujoy.com.api.channel.frontend.channelStateChange.ch)
  
  ::uyujoy::com::api::channel::frontend::channel* temp = ch_;
  ch_ = NULL;
  return temp;
}
void channelStateChange::set_allocated_ch(::uyujoy::com::api::channel::frontend::channel* ch) {
  delete ch_;
  ch_ = ch;
  if (ch) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:uyujoy.com.api.channel.frontend.channelStateChange.ch)
}

// optional uint32 reason = 2;
void channelStateChange::clear_reason() {
  reason_ = 0u;
}
::google::protobuf::uint32 channelStateChange::reason() const {
  // @@protoc_insertion_point(field_get:uyujoy.com.api.channel.frontend.channelStateChange.reason)
  return reason_;
}
void channelStateChange::set_reason(::google::protobuf::uint32 value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.com.api.channel.frontend.channelStateChange.reason)
}

inline const channelStateChange* channelStateChange::internal_default_instance() {
  return &channelStateChange_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int channelUserStateChange::kChuFieldNumber;
const int channelUserStateChange::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

channelUserStateChange::channelUserStateChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_channelImform_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:uyujoy.com.api.channel.frontend.channelUserStateChange)
}

void channelUserStateChange::InitAsDefaultInstance() {
  chu_ = const_cast< ::uyujoy::com::api::channel::frontend::channelUser*>(
      ::uyujoy::com::api::channel::frontend::channelUser::internal_default_instance());
}

channelUserStateChange::channelUserStateChange(const channelUserStateChange& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:uyujoy.com.api.channel.frontend.channelUserStateChange)
}

void channelUserStateChange::SharedCtor() {
  chu_ = NULL;
  reason_ = 0u;
  _cached_size_ = 0;
}

channelUserStateChange::~channelUserStateChange() {
  // @@protoc_insertion_point(destructor:uyujoy.com.api.channel.frontend.channelUserStateChange)
  SharedDtor();
}

void channelUserStateChange::SharedDtor() {
  if (this != &channelUserStateChange_default_instance_.get()) {
    delete chu_;
  }
}

void channelUserStateChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* channelUserStateChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return channelUserStateChange_descriptor_;
}

const channelUserStateChange& channelUserStateChange::default_instance() {
  protobuf_InitDefaults_channelImform_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<channelUserStateChange> channelUserStateChange_default_instance_;

channelUserStateChange* channelUserStateChange::New(::google::protobuf::Arena* arena) const {
  channelUserStateChange* n = new channelUserStateChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void channelUserStateChange::Clear() {
// @@protoc_insertion_point(message_clear_start:uyujoy.com.api.channel.frontend.channelUserStateChange)
  if (GetArenaNoVirtual() == NULL && chu_ != NULL) delete chu_;
  chu_ = NULL;
  reason_ = 0u;
}

bool channelUserStateChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:uyujoy.com.api.channel.frontend.channelUserStateChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .uyujoy.com.api.channel.frontend.channelUser chu = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_chu()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_reason;
        break;
      }

      // optional uint32 reason = 2;
      case 2: {
        if (tag == 16) {
         parse_reason:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:uyujoy.com.api.channel.frontend.channelUserStateChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:uyujoy.com.api.channel.frontend.channelUserStateChange)
  return false;
#undef DO_
}

void channelUserStateChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:uyujoy.com.api.channel.frontend.channelUserStateChange)
  // optional .uyujoy.com.api.channel.frontend.channelUser chu = 1;
  if (this->has_chu()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->chu_, output);
  }

  // optional uint32 reason = 2;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->reason(), output);
  }

  // @@protoc_insertion_point(serialize_end:uyujoy.com.api.channel.frontend.channelUserStateChange)
}

::google::protobuf::uint8* channelUserStateChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:uyujoy.com.api.channel.frontend.channelUserStateChange)
  // optional .uyujoy.com.api.channel.frontend.channelUser chu = 1;
  if (this->has_chu()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->chu_, false, target);
  }

  // optional uint32 reason = 2;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->reason(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:uyujoy.com.api.channel.frontend.channelUserStateChange)
  return target;
}

size_t channelUserStateChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uyujoy.com.api.channel.frontend.channelUserStateChange)
  size_t total_size = 0;

  // optional .uyujoy.com.api.channel.frontend.channelUser chu = 1;
  if (this->has_chu()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->chu_);
  }

  // optional uint32 reason = 2;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void channelUserStateChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:uyujoy.com.api.channel.frontend.channelUserStateChange)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const channelUserStateChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const channelUserStateChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:uyujoy.com.api.channel.frontend.channelUserStateChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:uyujoy.com.api.channel.frontend.channelUserStateChange)
    UnsafeMergeFrom(*source);
  }
}

void channelUserStateChange::MergeFrom(const channelUserStateChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:uyujoy.com.api.channel.frontend.channelUserStateChange)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void channelUserStateChange::UnsafeMergeFrom(const channelUserStateChange& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_chu()) {
    mutable_chu()->::uyujoy::com::api::channel::frontend::channelUser::MergeFrom(from.chu());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void channelUserStateChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:uyujoy.com.api.channel.frontend.channelUserStateChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void channelUserStateChange::CopyFrom(const channelUserStateChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uyujoy.com.api.channel.frontend.channelUserStateChange)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool channelUserStateChange::IsInitialized() const {

  return true;
}

void channelUserStateChange::Swap(channelUserStateChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void channelUserStateChange::InternalSwap(channelUserStateChange* other) {
  std::swap(chu_, other->chu_);
  std::swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata channelUserStateChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = channelUserStateChange_descriptor_;
  metadata.reflection = channelUserStateChange_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// channelUserStateChange

// optional .uyujoy.com.api.channel.frontend.channelUser chu = 1;
bool channelUserStateChange::has_chu() const {
  return this != internal_default_instance() && chu_ != NULL;
}
void channelUserStateChange::clear_chu() {
  if (GetArenaNoVirtual() == NULL && chu_ != NULL) delete chu_;
  chu_ = NULL;
}
const ::uyujoy::com::api::channel::frontend::channelUser& channelUserStateChange::chu() const {
  // @@protoc_insertion_point(field_get:uyujoy.com.api.channel.frontend.channelUserStateChange.chu)
  return chu_ != NULL ? *chu_
                         : *::uyujoy::com::api::channel::frontend::channelUser::internal_default_instance();
}
::uyujoy::com::api::channel::frontend::channelUser* channelUserStateChange::mutable_chu() {
  
  if (chu_ == NULL) {
    chu_ = new ::uyujoy::com::api::channel::frontend::channelUser;
  }
  // @@protoc_insertion_point(field_mutable:uyujoy.com.api.channel.frontend.channelUserStateChange.chu)
  return chu_;
}
::uyujoy::com::api::channel::frontend::channelUser* channelUserStateChange::release_chu() {
  // @@protoc_insertion_point(field_release:uyujoy.com.api.channel.frontend.channelUserStateChange.chu)
  
  ::uyujoy::com::api::channel::frontend::channelUser* temp = chu_;
  chu_ = NULL;
  return temp;
}
void channelUserStateChange::set_allocated_chu(::uyujoy::com::api::channel::frontend::channelUser* chu) {
  delete chu_;
  chu_ = chu;
  if (chu) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:uyujoy.com.api.channel.frontend.channelUserStateChange.chu)
}

// optional uint32 reason = 2;
void channelUserStateChange::clear_reason() {
  reason_ = 0u;
}
::google::protobuf::uint32 channelUserStateChange::reason() const {
  // @@protoc_insertion_point(field_get:uyujoy.com.api.channel.frontend.channelUserStateChange.reason)
  return reason_;
}
void channelUserStateChange::set_reason(::google::protobuf::uint32 value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.com.api.channel.frontend.channelUserStateChange.reason)
}

inline const channelUserStateChange* channelUserStateChange::internal_default_instance() {
  return &channelUserStateChange_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int channelMatched::kChFieldNumber;
const int channelMatched::kTokenFieldNumber;
const int channelMatched::kSelfUniqIdFieldNumber;
const int channelMatched::kPeerUniqIdFieldNumber;
const int channelMatched::kMatchedUserAttrFieldNumber;
const int channelMatched::kTsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

channelMatched::channelMatched()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_channelImform_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:uyujoy.com.api.channel.frontend.channelMatched)
}

void channelMatched::InitAsDefaultInstance() {
  ch_ = const_cast< ::uyujoy::com::api::channel::frontend::channel*>(
      ::uyujoy::com::api::channel::frontend::channel::internal_default_instance());
  matcheduserattr_ = const_cast< ::uyujoy::com::api::channel::frontend::matchAttr*>(
      ::uyujoy::com::api::channel::frontend::matchAttr::internal_default_instance());
}

channelMatched::channelMatched(const channelMatched& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:uyujoy.com.api.channel.frontend.channelMatched)
}

void channelMatched::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  selfuniqid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  peeruniqid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ch_ = NULL;
  matcheduserattr_ = NULL;
  ts_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

channelMatched::~channelMatched() {
  // @@protoc_insertion_point(destructor:uyujoy.com.api.channel.frontend.channelMatched)
  SharedDtor();
}

void channelMatched::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  selfuniqid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  peeruniqid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &channelMatched_default_instance_.get()) {
    delete ch_;
    delete matcheduserattr_;
  }
}

void channelMatched::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* channelMatched::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return channelMatched_descriptor_;
}

const channelMatched& channelMatched::default_instance() {
  protobuf_InitDefaults_channelImform_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<channelMatched> channelMatched_default_instance_;

channelMatched* channelMatched::New(::google::protobuf::Arena* arena) const {
  channelMatched* n = new channelMatched;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void channelMatched::Clear() {
// @@protoc_insertion_point(message_clear_start:uyujoy.com.api.channel.frontend.channelMatched)
  if (GetArenaNoVirtual() == NULL && ch_ != NULL) delete ch_;
  ch_ = NULL;
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  selfuniqid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  peeruniqid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && matcheduserattr_ != NULL) delete matcheduserattr_;
  matcheduserattr_ = NULL;
  ts_ = GOOGLE_LONGLONG(0);
}

bool channelMatched::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:uyujoy.com.api.channel.frontend.channelMatched)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .uyujoy.com.api.channel.frontend.channel ch = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ch()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_token;
        break;
      }

      // optional string token = 2;
      case 2: {
        if (tag == 18) {
         parse_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "uyujoy.com.api.channel.frontend.channelMatched.token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_selfUniqId;
        break;
      }

      // optional string selfUniqId = 3;
      case 3: {
        if (tag == 26) {
         parse_selfUniqId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_selfuniqid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->selfuniqid().data(), this->selfuniqid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "uyujoy.com.api.channel.frontend.channelMatched.selfUniqId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_peerUniqId;
        break;
      }

      // optional string peerUniqId = 4;
      case 4: {
        if (tag == 34) {
         parse_peerUniqId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_peeruniqid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->peeruniqid().data(), this->peeruniqid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "uyujoy.com.api.channel.frontend.channelMatched.peerUniqId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_matchedUserAttr;
        break;
      }

      // optional .uyujoy.com.api.channel.frontend.matchAttr matchedUserAttr = 5;
      case 5: {
        if (tag == 42) {
         parse_matchedUserAttr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_matcheduserattr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_ts;
        break;
      }

      // optional int64 ts = 6;
      case 6: {
        if (tag == 48) {
         parse_ts:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:uyujoy.com.api.channel.frontend.channelMatched)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:uyujoy.com.api.channel.frontend.channelMatched)
  return false;
#undef DO_
}

void channelMatched::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:uyujoy.com.api.channel.frontend.channelMatched)
  // optional .uyujoy.com.api.channel.frontend.channel ch = 1;
  if (this->has_ch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->ch_, output);
  }

  // optional string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "uyujoy.com.api.channel.frontend.channelMatched.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->token(), output);
  }

  // optional string selfUniqId = 3;
  if (this->selfuniqid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selfuniqid().data(), this->selfuniqid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "uyujoy.com.api.channel.frontend.channelMatched.selfUniqId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->selfuniqid(), output);
  }

  // optional string peerUniqId = 4;
  if (this->peeruniqid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->peeruniqid().data(), this->peeruniqid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "uyujoy.com.api.channel.frontend.channelMatched.peerUniqId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->peeruniqid(), output);
  }

  // optional .uyujoy.com.api.channel.frontend.matchAttr matchedUserAttr = 5;
  if (this->has_matcheduserattr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->matcheduserattr_, output);
  }

  // optional int64 ts = 6;
  if (this->ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->ts(), output);
  }

  // @@protoc_insertion_point(serialize_end:uyujoy.com.api.channel.frontend.channelMatched)
}

::google::protobuf::uint8* channelMatched::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:uyujoy.com.api.channel.frontend.channelMatched)
  // optional .uyujoy.com.api.channel.frontend.channel ch = 1;
  if (this->has_ch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->ch_, false, target);
  }

  // optional string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "uyujoy.com.api.channel.frontend.channelMatched.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->token(), target);
  }

  // optional string selfUniqId = 3;
  if (this->selfuniqid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selfuniqid().data(), this->selfuniqid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "uyujoy.com.api.channel.frontend.channelMatched.selfUniqId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->selfuniqid(), target);
  }

  // optional string peerUniqId = 4;
  if (this->peeruniqid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->peeruniqid().data(), this->peeruniqid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "uyujoy.com.api.channel.frontend.channelMatched.peerUniqId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->peeruniqid(), target);
  }

  // optional .uyujoy.com.api.channel.frontend.matchAttr matchedUserAttr = 5;
  if (this->has_matcheduserattr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->matcheduserattr_, false, target);
  }

  // optional int64 ts = 6;
  if (this->ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->ts(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:uyujoy.com.api.channel.frontend.channelMatched)
  return target;
}

size_t channelMatched::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uyujoy.com.api.channel.frontend.channelMatched)
  size_t total_size = 0;

  // optional .uyujoy.com.api.channel.frontend.channel ch = 1;
  if (this->has_ch()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ch_);
  }

  // optional string token = 2;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // optional string selfUniqId = 3;
  if (this->selfuniqid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->selfuniqid());
  }

  // optional string peerUniqId = 4;
  if (this->peeruniqid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->peeruniqid());
  }

  // optional .uyujoy.com.api.channel.frontend.matchAttr matchedUserAttr = 5;
  if (this->has_matcheduserattr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->matcheduserattr_);
  }

  // optional int64 ts = 6;
  if (this->ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void channelMatched::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:uyujoy.com.api.channel.frontend.channelMatched)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const channelMatched* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const channelMatched>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:uyujoy.com.api.channel.frontend.channelMatched)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:uyujoy.com.api.channel.frontend.channelMatched)
    UnsafeMergeFrom(*source);
  }
}

void channelMatched::MergeFrom(const channelMatched& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:uyujoy.com.api.channel.frontend.channelMatched)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void channelMatched::UnsafeMergeFrom(const channelMatched& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_ch()) {
    mutable_ch()->::uyujoy::com::api::channel::frontend::channel::MergeFrom(from.ch());
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.selfuniqid().size() > 0) {

    selfuniqid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.selfuniqid_);
  }
  if (from.peeruniqid().size() > 0) {

    peeruniqid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peeruniqid_);
  }
  if (from.has_matcheduserattr()) {
    mutable_matcheduserattr()->::uyujoy::com::api::channel::frontend::matchAttr::MergeFrom(from.matcheduserattr());
  }
  if (from.ts() != 0) {
    set_ts(from.ts());
  }
}

void channelMatched::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:uyujoy.com.api.channel.frontend.channelMatched)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void channelMatched::CopyFrom(const channelMatched& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uyujoy.com.api.channel.frontend.channelMatched)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool channelMatched::IsInitialized() const {

  return true;
}

void channelMatched::Swap(channelMatched* other) {
  if (other == this) return;
  InternalSwap(other);
}
void channelMatched::InternalSwap(channelMatched* other) {
  std::swap(ch_, other->ch_);
  token_.Swap(&other->token_);
  selfuniqid_.Swap(&other->selfuniqid_);
  peeruniqid_.Swap(&other->peeruniqid_);
  std::swap(matcheduserattr_, other->matcheduserattr_);
  std::swap(ts_, other->ts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata channelMatched::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = channelMatched_descriptor_;
  metadata.reflection = channelMatched_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// channelMatched

// optional .uyujoy.com.api.channel.frontend.channel ch = 1;
bool channelMatched::has_ch() const {
  return this != internal_default_instance() && ch_ != NULL;
}
void channelMatched::clear_ch() {
  if (GetArenaNoVirtual() == NULL && ch_ != NULL) delete ch_;
  ch_ = NULL;
}
const ::uyujoy::com::api::channel::frontend::channel& channelMatched::ch() const {
  // @@protoc_insertion_point(field_get:uyujoy.com.api.channel.frontend.channelMatched.ch)
  return ch_ != NULL ? *ch_
                         : *::uyujoy::com::api::channel::frontend::channel::internal_default_instance();
}
::uyujoy::com::api::channel::frontend::channel* channelMatched::mutable_ch() {
  
  if (ch_ == NULL) {
    ch_ = new ::uyujoy::com::api::channel::frontend::channel;
  }
  // @@protoc_insertion_point(field_mutable:uyujoy.com.api.channel.frontend.channelMatched.ch)
  return ch_;
}
::uyujoy::com::api::channel::frontend::channel* channelMatched::release_ch() {
  // @@protoc_insertion_point(field_release:uyujoy.com.api.channel.frontend.channelMatched.ch)
  
  ::uyujoy::com::api::channel::frontend::channel* temp = ch_;
  ch_ = NULL;
  return temp;
}
void channelMatched::set_allocated_ch(::uyujoy::com::api::channel::frontend::channel* ch) {
  delete ch_;
  ch_ = ch;
  if (ch) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:uyujoy.com.api.channel.frontend.channelMatched.ch)
}

// optional string token = 2;
void channelMatched::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& channelMatched::token() const {
  // @@protoc_insertion_point(field_get:uyujoy.com.api.channel.frontend.channelMatched.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void channelMatched::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.com.api.channel.frontend.channelMatched.token)
}
void channelMatched::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.com.api.channel.frontend.channelMatched.token)
}
void channelMatched::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.com.api.channel.frontend.channelMatched.token)
}
::std::string* channelMatched::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.com.api.channel.frontend.channelMatched.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* channelMatched::release_token() {
  // @@protoc_insertion_point(field_release:uyujoy.com.api.channel.frontend.channelMatched.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void channelMatched::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.com.api.channel.frontend.channelMatched.token)
}

// optional string selfUniqId = 3;
void channelMatched::clear_selfuniqid() {
  selfuniqid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& channelMatched::selfuniqid() const {
  // @@protoc_insertion_point(field_get:uyujoy.com.api.channel.frontend.channelMatched.selfUniqId)
  return selfuniqid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void channelMatched::set_selfuniqid(const ::std::string& value) {
  
  selfuniqid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.com.api.channel.frontend.channelMatched.selfUniqId)
}
void channelMatched::set_selfuniqid(const char* value) {
  
  selfuniqid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.com.api.channel.frontend.channelMatched.selfUniqId)
}
void channelMatched::set_selfuniqid(const char* value, size_t size) {
  
  selfuniqid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.com.api.channel.frontend.channelMatched.selfUniqId)
}
::std::string* channelMatched::mutable_selfuniqid() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.com.api.channel.frontend.channelMatched.selfUniqId)
  return selfuniqid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* channelMatched::release_selfuniqid() {
  // @@protoc_insertion_point(field_release:uyujoy.com.api.channel.frontend.channelMatched.selfUniqId)
  
  return selfuniqid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void channelMatched::set_allocated_selfuniqid(::std::string* selfuniqid) {
  if (selfuniqid != NULL) {
    
  } else {
    
  }
  selfuniqid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), selfuniqid);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.com.api.channel.frontend.channelMatched.selfUniqId)
}

// optional string peerUniqId = 4;
void channelMatched::clear_peeruniqid() {
  peeruniqid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& channelMatched::peeruniqid() const {
  // @@protoc_insertion_point(field_get:uyujoy.com.api.channel.frontend.channelMatched.peerUniqId)
  return peeruniqid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void channelMatched::set_peeruniqid(const ::std::string& value) {
  
  peeruniqid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.com.api.channel.frontend.channelMatched.peerUniqId)
}
void channelMatched::set_peeruniqid(const char* value) {
  
  peeruniqid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.com.api.channel.frontend.channelMatched.peerUniqId)
}
void channelMatched::set_peeruniqid(const char* value, size_t size) {
  
  peeruniqid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.com.api.channel.frontend.channelMatched.peerUniqId)
}
::std::string* channelMatched::mutable_peeruniqid() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.com.api.channel.frontend.channelMatched.peerUniqId)
  return peeruniqid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* channelMatched::release_peeruniqid() {
  // @@protoc_insertion_point(field_release:uyujoy.com.api.channel.frontend.channelMatched.peerUniqId)
  
  return peeruniqid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void channelMatched::set_allocated_peeruniqid(::std::string* peeruniqid) {
  if (peeruniqid != NULL) {
    
  } else {
    
  }
  peeruniqid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), peeruniqid);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.com.api.channel.frontend.channelMatched.peerUniqId)
}

// optional .uyujoy.com.api.channel.frontend.matchAttr matchedUserAttr = 5;
bool channelMatched::has_matcheduserattr() const {
  return this != internal_default_instance() && matcheduserattr_ != NULL;
}
void channelMatched::clear_matcheduserattr() {
  if (GetArenaNoVirtual() == NULL && matcheduserattr_ != NULL) delete matcheduserattr_;
  matcheduserattr_ = NULL;
}
const ::uyujoy::com::api::channel::frontend::matchAttr& channelMatched::matcheduserattr() const {
  // @@protoc_insertion_point(field_get:uyujoy.com.api.channel.frontend.channelMatched.matchedUserAttr)
  return matcheduserattr_ != NULL ? *matcheduserattr_
                         : *::uyujoy::com::api::channel::frontend::matchAttr::internal_default_instance();
}
::uyujoy::com::api::channel::frontend::matchAttr* channelMatched::mutable_matcheduserattr() {
  
  if (matcheduserattr_ == NULL) {
    matcheduserattr_ = new ::uyujoy::com::api::channel::frontend::matchAttr;
  }
  // @@protoc_insertion_point(field_mutable:uyujoy.com.api.channel.frontend.channelMatched.matchedUserAttr)
  return matcheduserattr_;
}
::uyujoy::com::api::channel::frontend::matchAttr* channelMatched::release_matcheduserattr() {
  // @@protoc_insertion_point(field_release:uyujoy.com.api.channel.frontend.channelMatched.matchedUserAttr)
  
  ::uyujoy::com::api::channel::frontend::matchAttr* temp = matcheduserattr_;
  matcheduserattr_ = NULL;
  return temp;
}
void channelMatched::set_allocated_matcheduserattr(::uyujoy::com::api::channel::frontend::matchAttr* matcheduserattr) {
  delete matcheduserattr_;
  matcheduserattr_ = matcheduserattr;
  if (matcheduserattr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:uyujoy.com.api.channel.frontend.channelMatched.matchedUserAttr)
}

// optional int64 ts = 6;
void channelMatched::clear_ts() {
  ts_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 channelMatched::ts() const {
  // @@protoc_insertion_point(field_get:uyujoy.com.api.channel.frontend.channelMatched.ts)
  return ts_;
}
void channelMatched::set_ts(::google::protobuf::int64 value) {
  
  ts_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.com.api.channel.frontend.channelMatched.ts)
}

inline const channelMatched* channelMatched::internal_default_instance() {
  return &channelMatched_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int channelSkipped::kChannelIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

channelSkipped::channelSkipped()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_channelImform_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:uyujoy.com.api.channel.frontend.channelSkipped)
}

void channelSkipped::InitAsDefaultInstance() {
}

channelSkipped::channelSkipped(const channelSkipped& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:uyujoy.com.api.channel.frontend.channelSkipped)
}

void channelSkipped::SharedCtor() {
  channelid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

channelSkipped::~channelSkipped() {
  // @@protoc_insertion_point(destructor:uyujoy.com.api.channel.frontend.channelSkipped)
  SharedDtor();
}

void channelSkipped::SharedDtor() {
  channelid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void channelSkipped::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* channelSkipped::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return channelSkipped_descriptor_;
}

const channelSkipped& channelSkipped::default_instance() {
  protobuf_InitDefaults_channelImform_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<channelSkipped> channelSkipped_default_instance_;

channelSkipped* channelSkipped::New(::google::protobuf::Arena* arena) const {
  channelSkipped* n = new channelSkipped;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void channelSkipped::Clear() {
// @@protoc_insertion_point(message_clear_start:uyujoy.com.api.channel.frontend.channelSkipped)
  channelid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool channelSkipped::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:uyujoy.com.api.channel.frontend.channelSkipped)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string channelId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channelid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->channelid().data(), this->channelid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "uyujoy.com.api.channel.frontend.channelSkipped.channelId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:uyujoy.com.api.channel.frontend.channelSkipped)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:uyujoy.com.api.channel.frontend.channelSkipped)
  return false;
#undef DO_
}

void channelSkipped::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:uyujoy.com.api.channel.frontend.channelSkipped)
  // optional string channelId = 1;
  if (this->channelid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channelid().data(), this->channelid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "uyujoy.com.api.channel.frontend.channelSkipped.channelId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->channelid(), output);
  }

  // @@protoc_insertion_point(serialize_end:uyujoy.com.api.channel.frontend.channelSkipped)
}

::google::protobuf::uint8* channelSkipped::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:uyujoy.com.api.channel.frontend.channelSkipped)
  // optional string channelId = 1;
  if (this->channelid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channelid().data(), this->channelid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "uyujoy.com.api.channel.frontend.channelSkipped.channelId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->channelid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:uyujoy.com.api.channel.frontend.channelSkipped)
  return target;
}

size_t channelSkipped::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uyujoy.com.api.channel.frontend.channelSkipped)
  size_t total_size = 0;

  // optional string channelId = 1;
  if (this->channelid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->channelid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void channelSkipped::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:uyujoy.com.api.channel.frontend.channelSkipped)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const channelSkipped* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const channelSkipped>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:uyujoy.com.api.channel.frontend.channelSkipped)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:uyujoy.com.api.channel.frontend.channelSkipped)
    UnsafeMergeFrom(*source);
  }
}

void channelSkipped::MergeFrom(const channelSkipped& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:uyujoy.com.api.channel.frontend.channelSkipped)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void channelSkipped::UnsafeMergeFrom(const channelSkipped& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.channelid().size() > 0) {

    channelid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channelid_);
  }
}

void channelSkipped::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:uyujoy.com.api.channel.frontend.channelSkipped)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void channelSkipped::CopyFrom(const channelSkipped& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uyujoy.com.api.channel.frontend.channelSkipped)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool channelSkipped::IsInitialized() const {

  return true;
}

void channelSkipped::Swap(channelSkipped* other) {
  if (other == this) return;
  InternalSwap(other);
}
void channelSkipped::InternalSwap(channelSkipped* other) {
  channelid_.Swap(&other->channelid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata channelSkipped::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = channelSkipped_descriptor_;
  metadata.reflection = channelSkipped_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// channelSkipped

// optional string channelId = 1;
void channelSkipped::clear_channelid() {
  channelid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& channelSkipped::channelid() const {
  // @@protoc_insertion_point(field_get:uyujoy.com.api.channel.frontend.channelSkipped.channelId)
  return channelid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void channelSkipped::set_channelid(const ::std::string& value) {
  
  channelid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.com.api.channel.frontend.channelSkipped.channelId)
}
void channelSkipped::set_channelid(const char* value) {
  
  channelid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.com.api.channel.frontend.channelSkipped.channelId)
}
void channelSkipped::set_channelid(const char* value, size_t size) {
  
  channelid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.com.api.channel.frontend.channelSkipped.channelId)
}
::std::string* channelSkipped::mutable_channelid() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.com.api.channel.frontend.channelSkipped.channelId)
  return channelid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* channelSkipped::release_channelid() {
  // @@protoc_insertion_point(field_release:uyujoy.com.api.channel.frontend.channelSkipped.channelId)
  
  return channelid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void channelSkipped::set_allocated_channelid(::std::string* channelid) {
  if (channelid != NULL) {
    
  } else {
    
  }
  channelid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channelid);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.com.api.channel.frontend.channelSkipped.channelId)
}

inline const channelSkipped* channelSkipped::internal_default_instance() {
  return &channelSkipped_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int matchAttr::kNameFieldNumber;
const int matchAttr::kPhotoUrlFieldNumber;
const int matchAttr::kGenderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

matchAttr::matchAttr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_channelImform_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:uyujoy.com.api.channel.frontend.matchAttr)
}

void matchAttr::InitAsDefaultInstance() {
}

matchAttr::matchAttr(const matchAttr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:uyujoy.com.api.channel.frontend.matchAttr)
}

void matchAttr::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  photourl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gender_ = 0u;
  _cached_size_ = 0;
}

matchAttr::~matchAttr() {
  // @@protoc_insertion_point(destructor:uyujoy.com.api.channel.frontend.matchAttr)
  SharedDtor();
}

void matchAttr::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  photourl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void matchAttr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* matchAttr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return matchAttr_descriptor_;
}

const matchAttr& matchAttr::default_instance() {
  protobuf_InitDefaults_channelImform_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<matchAttr> matchAttr_default_instance_;

matchAttr* matchAttr::New(::google::protobuf::Arena* arena) const {
  matchAttr* n = new matchAttr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void matchAttr::Clear() {
// @@protoc_insertion_point(message_clear_start:uyujoy.com.api.channel.frontend.matchAttr)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  photourl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gender_ = 0u;
}

bool matchAttr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:uyujoy.com.api.channel.frontend.matchAttr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "uyujoy.com.api.channel.frontend.matchAttr.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_photoUrl;
        break;
      }

      // optional string photoUrl = 2;
      case 2: {
        if (tag == 18) {
         parse_photoUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_photourl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->photourl().data(), this->photourl().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "uyujoy.com.api.channel.frontend.matchAttr.photoUrl"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_gender;
        break;
      }

      // optional uint32 gender = 3;
      case 3: {
        if (tag == 24) {
         parse_gender:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gender_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:uyujoy.com.api.channel.frontend.matchAttr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:uyujoy.com.api.channel.frontend.matchAttr)
  return false;
#undef DO_
}

void matchAttr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:uyujoy.com.api.channel.frontend.matchAttr)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "uyujoy.com.api.channel.frontend.matchAttr.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string photoUrl = 2;
  if (this->photourl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->photourl().data(), this->photourl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "uyujoy.com.api.channel.frontend.matchAttr.photoUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->photourl(), output);
  }

  // optional uint32 gender = 3;
  if (this->gender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->gender(), output);
  }

  // @@protoc_insertion_point(serialize_end:uyujoy.com.api.channel.frontend.matchAttr)
}

::google::protobuf::uint8* matchAttr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:uyujoy.com.api.channel.frontend.matchAttr)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "uyujoy.com.api.channel.frontend.matchAttr.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string photoUrl = 2;
  if (this->photourl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->photourl().data(), this->photourl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "uyujoy.com.api.channel.frontend.matchAttr.photoUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->photourl(), target);
  }

  // optional uint32 gender = 3;
  if (this->gender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->gender(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:uyujoy.com.api.channel.frontend.matchAttr)
  return target;
}

size_t matchAttr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uyujoy.com.api.channel.frontend.matchAttr)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string photoUrl = 2;
  if (this->photourl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->photourl());
  }

  // optional uint32 gender = 3;
  if (this->gender() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gender());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void matchAttr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:uyujoy.com.api.channel.frontend.matchAttr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const matchAttr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const matchAttr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:uyujoy.com.api.channel.frontend.matchAttr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:uyujoy.com.api.channel.frontend.matchAttr)
    UnsafeMergeFrom(*source);
  }
}

void matchAttr::MergeFrom(const matchAttr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:uyujoy.com.api.channel.frontend.matchAttr)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void matchAttr::UnsafeMergeFrom(const matchAttr& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.photourl().size() > 0) {

    photourl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.photourl_);
  }
  if (from.gender() != 0) {
    set_gender(from.gender());
  }
}

void matchAttr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:uyujoy.com.api.channel.frontend.matchAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void matchAttr::CopyFrom(const matchAttr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uyujoy.com.api.channel.frontend.matchAttr)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool matchAttr::IsInitialized() const {

  return true;
}

void matchAttr::Swap(matchAttr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void matchAttr::InternalSwap(matchAttr* other) {
  name_.Swap(&other->name_);
  photourl_.Swap(&other->photourl_);
  std::swap(gender_, other->gender_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata matchAttr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = matchAttr_descriptor_;
  metadata.reflection = matchAttr_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// matchAttr

// optional string name = 1;
void matchAttr::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& matchAttr::name() const {
  // @@protoc_insertion_point(field_get:uyujoy.com.api.channel.frontend.matchAttr.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void matchAttr::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.com.api.channel.frontend.matchAttr.name)
}
void matchAttr::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.com.api.channel.frontend.matchAttr.name)
}
void matchAttr::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.com.api.channel.frontend.matchAttr.name)
}
::std::string* matchAttr::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.com.api.channel.frontend.matchAttr.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* matchAttr::release_name() {
  // @@protoc_insertion_point(field_release:uyujoy.com.api.channel.frontend.matchAttr.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void matchAttr::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.com.api.channel.frontend.matchAttr.name)
}

// optional string photoUrl = 2;
void matchAttr::clear_photourl() {
  photourl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& matchAttr::photourl() const {
  // @@protoc_insertion_point(field_get:uyujoy.com.api.channel.frontend.matchAttr.photoUrl)
  return photourl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void matchAttr::set_photourl(const ::std::string& value) {
  
  photourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.com.api.channel.frontend.matchAttr.photoUrl)
}
void matchAttr::set_photourl(const char* value) {
  
  photourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.com.api.channel.frontend.matchAttr.photoUrl)
}
void matchAttr::set_photourl(const char* value, size_t size) {
  
  photourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.com.api.channel.frontend.matchAttr.photoUrl)
}
::std::string* matchAttr::mutable_photourl() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.com.api.channel.frontend.matchAttr.photoUrl)
  return photourl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* matchAttr::release_photourl() {
  // @@protoc_insertion_point(field_release:uyujoy.com.api.channel.frontend.matchAttr.photoUrl)
  
  return photourl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void matchAttr::set_allocated_photourl(::std::string* photourl) {
  if (photourl != NULL) {
    
  } else {
    
  }
  photourl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), photourl);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.com.api.channel.frontend.matchAttr.photoUrl)
}

// optional uint32 gender = 3;
void matchAttr::clear_gender() {
  gender_ = 0u;
}
::google::protobuf::uint32 matchAttr::gender() const {
  // @@protoc_insertion_point(field_get:uyujoy.com.api.channel.frontend.matchAttr.gender)
  return gender_;
}
void matchAttr::set_gender(::google::protobuf::uint32 value) {
  
  gender_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.com.api.channel.frontend.matchAttr.gender)
}

inline const matchAttr* matchAttr::internal_default_instance() {
  return &matchAttr_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int deviceUpdated::kIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

deviceUpdated::deviceUpdated()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_channelImform_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:uyujoy.com.api.channel.frontend.deviceUpdated)
}

void deviceUpdated::InitAsDefaultInstance() {
}

deviceUpdated::deviceUpdated(const deviceUpdated& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:uyujoy.com.api.channel.frontend.deviceUpdated)
}

void deviceUpdated::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

deviceUpdated::~deviceUpdated() {
  // @@protoc_insertion_point(destructor:uyujoy.com.api.channel.frontend.deviceUpdated)
  SharedDtor();
}

void deviceUpdated::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void deviceUpdated::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* deviceUpdated::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return deviceUpdated_descriptor_;
}

const deviceUpdated& deviceUpdated::default_instance() {
  protobuf_InitDefaults_channelImform_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<deviceUpdated> deviceUpdated_default_instance_;

deviceUpdated* deviceUpdated::New(::google::protobuf::Arena* arena) const {
  deviceUpdated* n = new deviceUpdated;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void deviceUpdated::Clear() {
// @@protoc_insertion_point(message_clear_start:uyujoy.com.api.channel.frontend.deviceUpdated)
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool deviceUpdated::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:uyujoy.com.api.channel.frontend.deviceUpdated)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ip = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "uyujoy.com.api.channel.frontend.deviceUpdated.ip"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:uyujoy.com.api.channel.frontend.deviceUpdated)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:uyujoy.com.api.channel.frontend.deviceUpdated)
  return false;
#undef DO_
}

void deviceUpdated::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:uyujoy.com.api.channel.frontend.deviceUpdated)
  // optional string ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "uyujoy.com.api.channel.frontend.deviceUpdated.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip(), output);
  }

  // @@protoc_insertion_point(serialize_end:uyujoy.com.api.channel.frontend.deviceUpdated)
}

::google::protobuf::uint8* deviceUpdated::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:uyujoy.com.api.channel.frontend.deviceUpdated)
  // optional string ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "uyujoy.com.api.channel.frontend.deviceUpdated.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:uyujoy.com.api.channel.frontend.deviceUpdated)
  return target;
}

size_t deviceUpdated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uyujoy.com.api.channel.frontend.deviceUpdated)
  size_t total_size = 0;

  // optional string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void deviceUpdated::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:uyujoy.com.api.channel.frontend.deviceUpdated)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const deviceUpdated* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const deviceUpdated>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:uyujoy.com.api.channel.frontend.deviceUpdated)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:uyujoy.com.api.channel.frontend.deviceUpdated)
    UnsafeMergeFrom(*source);
  }
}

void deviceUpdated::MergeFrom(const deviceUpdated& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:uyujoy.com.api.channel.frontend.deviceUpdated)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void deviceUpdated::UnsafeMergeFrom(const deviceUpdated& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
}

void deviceUpdated::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:uyujoy.com.api.channel.frontend.deviceUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void deviceUpdated::CopyFrom(const deviceUpdated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uyujoy.com.api.channel.frontend.deviceUpdated)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool deviceUpdated::IsInitialized() const {

  return true;
}

void deviceUpdated::Swap(deviceUpdated* other) {
  if (other == this) return;
  InternalSwap(other);
}
void deviceUpdated::InternalSwap(deviceUpdated* other) {
  ip_.Swap(&other->ip_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata deviceUpdated::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = deviceUpdated_descriptor_;
  metadata.reflection = deviceUpdated_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// deviceUpdated

// optional string ip = 1;
void deviceUpdated::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& deviceUpdated::ip() const {
  // @@protoc_insertion_point(field_get:uyujoy.com.api.channel.frontend.deviceUpdated.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void deviceUpdated::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.com.api.channel.frontend.deviceUpdated.ip)
}
void deviceUpdated::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.com.api.channel.frontend.deviceUpdated.ip)
}
void deviceUpdated::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.com.api.channel.frontend.deviceUpdated.ip)
}
::std::string* deviceUpdated::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.com.api.channel.frontend.deviceUpdated.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* deviceUpdated::release_ip() {
  // @@protoc_insertion_point(field_release:uyujoy.com.api.channel.frontend.deviceUpdated.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void deviceUpdated::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.com.api.channel.frontend.deviceUpdated.ip)
}

inline const deviceUpdated* deviceUpdated::internal_default_instance() {
  return &deviceUpdated_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace frontend
}  // namespace channel
}  // namespace api
}  // namespace com
}  // namespace uyujoy

// @@protoc_insertion_point(global_scope)
