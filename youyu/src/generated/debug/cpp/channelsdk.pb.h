// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: channelsdk.proto

#ifndef PROTOBUF_channelsdk_2eproto__INCLUDED
#define PROTOBUF_channelsdk_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace batprotobuf {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_channelsdk_2eproto();
void protobuf_InitDefaults_channelsdk_2eproto();
void protobuf_AssignDesc_channelsdk_2eproto();
void protobuf_ShutdownFile_channelsdk_2eproto();

class channel;
class channelHistory;
class sdkChannelHistoryReq;
class sdkChannelHistoryRes;
class sdkChannelInfoReq;
class sdkChannelInfoRes;
class sdkDialToBroadcaster;
class sdkDialToBroadcasterAck;
class sdkSessionReq;
class sdkSessionRes;

// ===================================================================

class sdkSessionReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:batprotobuf.sdkSessionReq) */ {
 public:
  sdkSessionReq();
  virtual ~sdkSessionReq();

  sdkSessionReq(const sdkSessionReq& from);

  inline sdkSessionReq& operator=(const sdkSessionReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sdkSessionReq& default_instance();

  static const sdkSessionReq* internal_default_instance();

  void Swap(sdkSessionReq* other);

  // implements Message ----------------------------------------------

  inline sdkSessionReq* New() const { return New(NULL); }

  sdkSessionReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sdkSessionReq& from);
  void MergeFrom(const sdkSessionReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(sdkSessionReq* other);
  void UnsafeMergeFrom(const sdkSessionReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:batprotobuf.sdkSessionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_channelsdk_2eproto_impl();
  friend void  protobuf_AddDesc_channelsdk_2eproto_impl();
  friend void protobuf_AssignDesc_channelsdk_2eproto();
  friend void protobuf_ShutdownFile_channelsdk_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<sdkSessionReq> sdkSessionReq_default_instance_;

// -------------------------------------------------------------------

class sdkSessionRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:batprotobuf.sdkSessionRes) */ {
 public:
  sdkSessionRes();
  virtual ~sdkSessionRes();

  sdkSessionRes(const sdkSessionRes& from);

  inline sdkSessionRes& operator=(const sdkSessionRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sdkSessionRes& default_instance();

  static const sdkSessionRes* internal_default_instance();

  void Swap(sdkSessionRes* other);

  // implements Message ----------------------------------------------

  inline sdkSessionRes* New() const { return New(NULL); }

  sdkSessionRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sdkSessionRes& from);
  void MergeFrom(const sdkSessionRes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(sdkSessionRes* other);
  void UnsafeMergeFrom(const sdkSessionRes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:batprotobuf.sdkSessionRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_channelsdk_2eproto_impl();
  friend void  protobuf_AddDesc_channelsdk_2eproto_impl();
  friend void protobuf_AssignDesc_channelsdk_2eproto();
  friend void protobuf_ShutdownFile_channelsdk_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<sdkSessionRes> sdkSessionRes_default_instance_;

// -------------------------------------------------------------------

class sdkChannelInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:batprotobuf.sdkChannelInfoReq) */ {
 public:
  sdkChannelInfoReq();
  virtual ~sdkChannelInfoReq();

  sdkChannelInfoReq(const sdkChannelInfoReq& from);

  inline sdkChannelInfoReq& operator=(const sdkChannelInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sdkChannelInfoReq& default_instance();

  static const sdkChannelInfoReq* internal_default_instance();

  void Swap(sdkChannelInfoReq* other);

  // implements Message ----------------------------------------------

  inline sdkChannelInfoReq* New() const { return New(NULL); }

  sdkChannelInfoReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sdkChannelInfoReq& from);
  void MergeFrom(const sdkChannelInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(sdkChannelInfoReq* other);
  void UnsafeMergeFrom(const sdkChannelInfoReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 channelId = 1;
  void clear_channelid();
  static const int kChannelIdFieldNumber = 1;
  ::google::protobuf::int64 channelid() const;
  void set_channelid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:batprotobuf.sdkChannelInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 channelid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_channelsdk_2eproto_impl();
  friend void  protobuf_AddDesc_channelsdk_2eproto_impl();
  friend void protobuf_AssignDesc_channelsdk_2eproto();
  friend void protobuf_ShutdownFile_channelsdk_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<sdkChannelInfoReq> sdkChannelInfoReq_default_instance_;

// -------------------------------------------------------------------

class sdkChannelInfoRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:batprotobuf.sdkChannelInfoRes) */ {
 public:
  sdkChannelInfoRes();
  virtual ~sdkChannelInfoRes();

  sdkChannelInfoRes(const sdkChannelInfoRes& from);

  inline sdkChannelInfoRes& operator=(const sdkChannelInfoRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sdkChannelInfoRes& default_instance();

  static const sdkChannelInfoRes* internal_default_instance();

  void Swap(sdkChannelInfoRes* other);

  // implements Message ----------------------------------------------

  inline sdkChannelInfoRes* New() const { return New(NULL); }

  sdkChannelInfoRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sdkChannelInfoRes& from);
  void MergeFrom(const sdkChannelInfoRes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(sdkChannelInfoRes* other);
  void UnsafeMergeFrom(const sdkChannelInfoRes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 Id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // optional uint32 Category = 2;
  void clear_category();
  static const int kCategoryFieldNumber = 2;
  ::google::protobuf::uint32 category() const;
  void set_category(::google::protobuf::uint32 value);

  // optional uint32 State = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::uint32 state() const;
  void set_state(::google::protobuf::uint32 value);

  // optional uint32 Duration = 4;
  void clear_duration();
  static const int kDurationFieldNumber = 4;
  ::google::protobuf::uint32 duration() const;
  void set_duration(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:batprotobuf.sdkChannelInfoRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::uint32 category_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 duration_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_channelsdk_2eproto_impl();
  friend void  protobuf_AddDesc_channelsdk_2eproto_impl();
  friend void protobuf_AssignDesc_channelsdk_2eproto();
  friend void protobuf_ShutdownFile_channelsdk_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<sdkChannelInfoRes> sdkChannelInfoRes_default_instance_;

// -------------------------------------------------------------------

class sdkDialToBroadcaster : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:batprotobuf.sdkDialToBroadcaster) */ {
 public:
  sdkDialToBroadcaster();
  virtual ~sdkDialToBroadcaster();

  sdkDialToBroadcaster(const sdkDialToBroadcaster& from);

  inline sdkDialToBroadcaster& operator=(const sdkDialToBroadcaster& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sdkDialToBroadcaster& default_instance();

  static const sdkDialToBroadcaster* internal_default_instance();

  void Swap(sdkDialToBroadcaster* other);

  // implements Message ----------------------------------------------

  inline sdkDialToBroadcaster* New() const { return New(NULL); }

  sdkDialToBroadcaster* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sdkDialToBroadcaster& from);
  void MergeFrom(const sdkDialToBroadcaster& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(sdkDialToBroadcaster* other);
  void UnsafeMergeFrom(const sdkDialToBroadcaster& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 broadcaster = 1;
  void clear_broadcaster();
  static const int kBroadcasterFieldNumber = 1;
  ::google::protobuf::uint32 broadcaster() const;
  void set_broadcaster(::google::protobuf::uint32 value);

  // optional int64 channelId = 2;
  void clear_channelid();
  static const int kChannelIdFieldNumber = 2;
  ::google::protobuf::int64 channelid() const;
  void set_channelid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:batprotobuf.sdkDialToBroadcaster)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 channelid_;
  ::google::protobuf::uint32 broadcaster_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_channelsdk_2eproto_impl();
  friend void  protobuf_AddDesc_channelsdk_2eproto_impl();
  friend void protobuf_AssignDesc_channelsdk_2eproto();
  friend void protobuf_ShutdownFile_channelsdk_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<sdkDialToBroadcaster> sdkDialToBroadcaster_default_instance_;

// -------------------------------------------------------------------

class sdkDialToBroadcasterAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:batprotobuf.sdkDialToBroadcasterAck) */ {
 public:
  sdkDialToBroadcasterAck();
  virtual ~sdkDialToBroadcasterAck();

  sdkDialToBroadcasterAck(const sdkDialToBroadcasterAck& from);

  inline sdkDialToBroadcasterAck& operator=(const sdkDialToBroadcasterAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sdkDialToBroadcasterAck& default_instance();

  static const sdkDialToBroadcasterAck* internal_default_instance();

  void Swap(sdkDialToBroadcasterAck* other);

  // implements Message ----------------------------------------------

  inline sdkDialToBroadcasterAck* New() const { return New(NULL); }

  sdkDialToBroadcasterAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sdkDialToBroadcasterAck& from);
  void MergeFrom(const sdkDialToBroadcasterAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(sdkDialToBroadcasterAck* other);
  void UnsafeMergeFrom(const sdkDialToBroadcasterAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .batprotobuf.channel ch = 1;
  bool has_ch() const;
  void clear_ch();
  static const int kChFieldNumber = 1;
  const ::batprotobuf::channel& ch() const;
  ::batprotobuf::channel* mutable_ch();
  ::batprotobuf::channel* release_ch();
  void set_allocated_ch(::batprotobuf::channel* ch);

  // optional string token = 2;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // optional string uniqId = 3;
  void clear_uniqid();
  static const int kUniqIdFieldNumber = 3;
  const ::std::string& uniqid() const;
  void set_uniqid(const ::std::string& value);
  void set_uniqid(const char* value);
  void set_uniqid(const char* value, size_t size);
  ::std::string* mutable_uniqid();
  ::std::string* release_uniqid();
  void set_allocated_uniqid(::std::string* uniqid);

  // optional uint32 broadcasterState = 4;
  void clear_broadcasterstate();
  static const int kBroadcasterStateFieldNumber = 4;
  ::google::protobuf::uint32 broadcasterstate() const;
  void set_broadcasterstate(::google::protobuf::uint32 value);

  // optional bool insufficientBalance = 5;
  void clear_insufficientbalance();
  static const int kInsufficientBalanceFieldNumber = 5;
  bool insufficientbalance() const;
  void set_insufficientbalance(bool value);

  // @@protoc_insertion_point(class_scope:batprotobuf.sdkDialToBroadcasterAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr uniqid_;
  ::batprotobuf::channel* ch_;
  ::google::protobuf::uint32 broadcasterstate_;
  bool insufficientbalance_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_channelsdk_2eproto_impl();
  friend void  protobuf_AddDesc_channelsdk_2eproto_impl();
  friend void protobuf_AssignDesc_channelsdk_2eproto();
  friend void protobuf_ShutdownFile_channelsdk_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<sdkDialToBroadcasterAck> sdkDialToBroadcasterAck_default_instance_;

// -------------------------------------------------------------------

class channel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:batprotobuf.channel) */ {
 public:
  channel();
  virtual ~channel();

  channel(const channel& from);

  inline channel& operator=(const channel& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const channel& default_instance();

  static const channel* internal_default_instance();

  void Swap(channel* other);

  // implements Message ----------------------------------------------

  inline channel* New() const { return New(NULL); }

  channel* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const channel& from);
  void MergeFrom(const channel& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(channel* other);
  void UnsafeMergeFrom(const channel& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional uint32 category = 2;
  void clear_category();
  static const int kCategoryFieldNumber = 2;
  ::google::protobuf::uint32 category() const;
  void set_category(::google::protobuf::uint32 value);

  // optional int64 startTs = 3;
  void clear_startts();
  static const int kStartTsFieldNumber = 3;
  ::google::protobuf::int64 startts() const;
  void set_startts(::google::protobuf::int64 value);

  // optional int64 endTs = 4;
  void clear_endts();
  static const int kEndTsFieldNumber = 4;
  ::google::protobuf::int64 endts() const;
  void set_endts(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:batprotobuf.channel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::int64 startts_;
  ::google::protobuf::int64 endts_;
  ::google::protobuf::uint32 category_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_channelsdk_2eproto_impl();
  friend void  protobuf_AddDesc_channelsdk_2eproto_impl();
  friend void protobuf_AssignDesc_channelsdk_2eproto();
  friend void protobuf_ShutdownFile_channelsdk_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<channel> channel_default_instance_;

// -------------------------------------------------------------------

class sdkChannelHistoryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:batprotobuf.sdkChannelHistoryReq) */ {
 public:
  sdkChannelHistoryReq();
  virtual ~sdkChannelHistoryReq();

  sdkChannelHistoryReq(const sdkChannelHistoryReq& from);

  inline sdkChannelHistoryReq& operator=(const sdkChannelHistoryReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sdkChannelHistoryReq& default_instance();

  static const sdkChannelHistoryReq* internal_default_instance();

  void Swap(sdkChannelHistoryReq* other);

  // implements Message ----------------------------------------------

  inline sdkChannelHistoryReq* New() const { return New(NULL); }

  sdkChannelHistoryReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sdkChannelHistoryReq& from);
  void MergeFrom(const sdkChannelHistoryReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(sdkChannelHistoryReq* other);
  void UnsafeMergeFrom(const sdkChannelHistoryReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 page = 1;
  void clear_page();
  static const int kPageFieldNumber = 1;
  ::google::protobuf::uint32 page() const;
  void set_page(::google::protobuf::uint32 value);

  // optional uint32 limit = 2;
  void clear_limit();
  static const int kLimitFieldNumber = 2;
  ::google::protobuf::uint32 limit() const;
  void set_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:batprotobuf.sdkChannelHistoryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 page_;
  ::google::protobuf::uint32 limit_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_channelsdk_2eproto_impl();
  friend void  protobuf_AddDesc_channelsdk_2eproto_impl();
  friend void protobuf_AssignDesc_channelsdk_2eproto();
  friend void protobuf_ShutdownFile_channelsdk_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<sdkChannelHistoryReq> sdkChannelHistoryReq_default_instance_;

// -------------------------------------------------------------------

class sdkChannelHistoryRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:batprotobuf.sdkChannelHistoryRes) */ {
 public:
  sdkChannelHistoryRes();
  virtual ~sdkChannelHistoryRes();

  sdkChannelHistoryRes(const sdkChannelHistoryRes& from);

  inline sdkChannelHistoryRes& operator=(const sdkChannelHistoryRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sdkChannelHistoryRes& default_instance();

  static const sdkChannelHistoryRes* internal_default_instance();

  void Swap(sdkChannelHistoryRes* other);

  // implements Message ----------------------------------------------

  inline sdkChannelHistoryRes* New() const { return New(NULL); }

  sdkChannelHistoryRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sdkChannelHistoryRes& from);
  void MergeFrom(const sdkChannelHistoryRes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(sdkChannelHistoryRes* other);
  void UnsafeMergeFrom(const sdkChannelHistoryRes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .batprotobuf.channelHistory list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  const ::batprotobuf::channelHistory& list(int index) const;
  ::batprotobuf::channelHistory* mutable_list(int index);
  ::batprotobuf::channelHistory* add_list();
  ::google::protobuf::RepeatedPtrField< ::batprotobuf::channelHistory >*
      mutable_list();
  const ::google::protobuf::RepeatedPtrField< ::batprotobuf::channelHistory >&
      list() const;

  // @@protoc_insertion_point(class_scope:batprotobuf.sdkChannelHistoryRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::batprotobuf::channelHistory > list_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_channelsdk_2eproto_impl();
  friend void  protobuf_AddDesc_channelsdk_2eproto_impl();
  friend void protobuf_AssignDesc_channelsdk_2eproto();
  friend void protobuf_ShutdownFile_channelsdk_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<sdkChannelHistoryRes> sdkChannelHistoryRes_default_instance_;

// -------------------------------------------------------------------

class channelHistory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:batprotobuf.channelHistory) */ {
 public:
  channelHistory();
  virtual ~channelHistory();

  channelHistory(const channelHistory& from);

  inline channelHistory& operator=(const channelHistory& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const channelHistory& default_instance();

  static const channelHistory* internal_default_instance();

  void Swap(channelHistory* other);

  // implements Message ----------------------------------------------

  inline channelHistory* New() const { return New(NULL); }

  channelHistory* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const channelHistory& from);
  void MergeFrom(const channelHistory& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(channelHistory* other);
  void UnsafeMergeFrom(const channelHistory& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 historyId = 1;
  void clear_historyid();
  static const int kHistoryIdFieldNumber = 1;
  ::google::protobuf::uint32 historyid() const;
  void set_historyid(::google::protobuf::uint32 value);

  // optional int64 channelId = 2;
  void clear_channelid();
  static const int kChannelIdFieldNumber = 2;
  ::google::protobuf::int64 channelid() const;
  void set_channelid(::google::protobuf::int64 value);

  // optional uint32 selfId = 3;
  void clear_selfid();
  static const int kSelfIdFieldNumber = 3;
  ::google::protobuf::uint32 selfid() const;
  void set_selfid(::google::protobuf::uint32 value);

  // optional uint32 otherId = 4;
  void clear_otherid();
  static const int kOtherIdFieldNumber = 4;
  ::google::protobuf::uint32 otherid() const;
  void set_otherid(::google::protobuf::uint32 value);

  // optional string otherName = 5;
  void clear_othername();
  static const int kOtherNameFieldNumber = 5;
  const ::std::string& othername() const;
  void set_othername(const ::std::string& value);
  void set_othername(const char* value);
  void set_othername(const char* value, size_t size);
  ::std::string* mutable_othername();
  ::std::string* release_othername();
  void set_allocated_othername(::std::string* othername);

  // optional int64 createTime = 6;
  void clear_createtime();
  static const int kCreateTimeFieldNumber = 6;
  ::google::protobuf::int64 createtime() const;
  void set_createtime(::google::protobuf::int64 value);

  // optional uint32 duration = 7;
  void clear_duration();
  static const int kDurationFieldNumber = 7;
  ::google::protobuf::uint32 duration() const;
  void set_duration(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:batprotobuf.channelHistory)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr othername_;
  ::google::protobuf::int64 channelid_;
  ::google::protobuf::uint32 historyid_;
  ::google::protobuf::uint32 selfid_;
  ::google::protobuf::uint32 otherid_;
  ::google::protobuf::uint32 duration_;
  ::google::protobuf::int64 createtime_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_channelsdk_2eproto_impl();
  friend void  protobuf_AddDesc_channelsdk_2eproto_impl();
  friend void protobuf_AssignDesc_channelsdk_2eproto();
  friend void protobuf_ShutdownFile_channelsdk_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<channelHistory> channelHistory_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// sdkSessionReq

inline const sdkSessionReq* sdkSessionReq::internal_default_instance() {
  return &sdkSessionReq_default_instance_.get();
}
// -------------------------------------------------------------------

// sdkSessionRes

// optional string token = 1;
inline void sdkSessionRes::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& sdkSessionRes::token() const {
  // @@protoc_insertion_point(field_get:batprotobuf.sdkSessionRes.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void sdkSessionRes::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:batprotobuf.sdkSessionRes.token)
}
inline void sdkSessionRes::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:batprotobuf.sdkSessionRes.token)
}
inline void sdkSessionRes::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:batprotobuf.sdkSessionRes.token)
}
inline ::std::string* sdkSessionRes::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:batprotobuf.sdkSessionRes.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* sdkSessionRes::release_token() {
  // @@protoc_insertion_point(field_release:batprotobuf.sdkSessionRes.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void sdkSessionRes::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:batprotobuf.sdkSessionRes.token)
}

inline const sdkSessionRes* sdkSessionRes::internal_default_instance() {
  return &sdkSessionRes_default_instance_.get();
}
// -------------------------------------------------------------------

// sdkChannelInfoReq

// optional int64 channelId = 1;
inline void sdkChannelInfoReq::clear_channelid() {
  channelid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 sdkChannelInfoReq::channelid() const {
  // @@protoc_insertion_point(field_get:batprotobuf.sdkChannelInfoReq.channelId)
  return channelid_;
}
inline void sdkChannelInfoReq::set_channelid(::google::protobuf::int64 value) {
  
  channelid_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.sdkChannelInfoReq.channelId)
}

inline const sdkChannelInfoReq* sdkChannelInfoReq::internal_default_instance() {
  return &sdkChannelInfoReq_default_instance_.get();
}
// -------------------------------------------------------------------

// sdkChannelInfoRes

// optional int64 Id = 1;
inline void sdkChannelInfoRes::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 sdkChannelInfoRes::id() const {
  // @@protoc_insertion_point(field_get:batprotobuf.sdkChannelInfoRes.Id)
  return id_;
}
inline void sdkChannelInfoRes::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.sdkChannelInfoRes.Id)
}

// optional uint32 Category = 2;
inline void sdkChannelInfoRes::clear_category() {
  category_ = 0u;
}
inline ::google::protobuf::uint32 sdkChannelInfoRes::category() const {
  // @@protoc_insertion_point(field_get:batprotobuf.sdkChannelInfoRes.Category)
  return category_;
}
inline void sdkChannelInfoRes::set_category(::google::protobuf::uint32 value) {
  
  category_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.sdkChannelInfoRes.Category)
}

// optional uint32 State = 3;
inline void sdkChannelInfoRes::clear_state() {
  state_ = 0u;
}
inline ::google::protobuf::uint32 sdkChannelInfoRes::state() const {
  // @@protoc_insertion_point(field_get:batprotobuf.sdkChannelInfoRes.State)
  return state_;
}
inline void sdkChannelInfoRes::set_state(::google::protobuf::uint32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.sdkChannelInfoRes.State)
}

// optional uint32 Duration = 4;
inline void sdkChannelInfoRes::clear_duration() {
  duration_ = 0u;
}
inline ::google::protobuf::uint32 sdkChannelInfoRes::duration() const {
  // @@protoc_insertion_point(field_get:batprotobuf.sdkChannelInfoRes.Duration)
  return duration_;
}
inline void sdkChannelInfoRes::set_duration(::google::protobuf::uint32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.sdkChannelInfoRes.Duration)
}

inline const sdkChannelInfoRes* sdkChannelInfoRes::internal_default_instance() {
  return &sdkChannelInfoRes_default_instance_.get();
}
// -------------------------------------------------------------------

// sdkDialToBroadcaster

// optional uint32 broadcaster = 1;
inline void sdkDialToBroadcaster::clear_broadcaster() {
  broadcaster_ = 0u;
}
inline ::google::protobuf::uint32 sdkDialToBroadcaster::broadcaster() const {
  // @@protoc_insertion_point(field_get:batprotobuf.sdkDialToBroadcaster.broadcaster)
  return broadcaster_;
}
inline void sdkDialToBroadcaster::set_broadcaster(::google::protobuf::uint32 value) {
  
  broadcaster_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.sdkDialToBroadcaster.broadcaster)
}

// optional int64 channelId = 2;
inline void sdkDialToBroadcaster::clear_channelid() {
  channelid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 sdkDialToBroadcaster::channelid() const {
  // @@protoc_insertion_point(field_get:batprotobuf.sdkDialToBroadcaster.channelId)
  return channelid_;
}
inline void sdkDialToBroadcaster::set_channelid(::google::protobuf::int64 value) {
  
  channelid_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.sdkDialToBroadcaster.channelId)
}

inline const sdkDialToBroadcaster* sdkDialToBroadcaster::internal_default_instance() {
  return &sdkDialToBroadcaster_default_instance_.get();
}
// -------------------------------------------------------------------

// sdkDialToBroadcasterAck

// optional .batprotobuf.channel ch = 1;
inline bool sdkDialToBroadcasterAck::has_ch() const {
  return this != internal_default_instance() && ch_ != NULL;
}
inline void sdkDialToBroadcasterAck::clear_ch() {
  if (GetArenaNoVirtual() == NULL && ch_ != NULL) delete ch_;
  ch_ = NULL;
}
inline const ::batprotobuf::channel& sdkDialToBroadcasterAck::ch() const {
  // @@protoc_insertion_point(field_get:batprotobuf.sdkDialToBroadcasterAck.ch)
  return ch_ != NULL ? *ch_
                         : *::batprotobuf::channel::internal_default_instance();
}
inline ::batprotobuf::channel* sdkDialToBroadcasterAck::mutable_ch() {
  
  if (ch_ == NULL) {
    ch_ = new ::batprotobuf::channel;
  }
  // @@protoc_insertion_point(field_mutable:batprotobuf.sdkDialToBroadcasterAck.ch)
  return ch_;
}
inline ::batprotobuf::channel* sdkDialToBroadcasterAck::release_ch() {
  // @@protoc_insertion_point(field_release:batprotobuf.sdkDialToBroadcasterAck.ch)
  
  ::batprotobuf::channel* temp = ch_;
  ch_ = NULL;
  return temp;
}
inline void sdkDialToBroadcasterAck::set_allocated_ch(::batprotobuf::channel* ch) {
  delete ch_;
  ch_ = ch;
  if (ch) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:batprotobuf.sdkDialToBroadcasterAck.ch)
}

// optional string token = 2;
inline void sdkDialToBroadcasterAck::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& sdkDialToBroadcasterAck::token() const {
  // @@protoc_insertion_point(field_get:batprotobuf.sdkDialToBroadcasterAck.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void sdkDialToBroadcasterAck::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:batprotobuf.sdkDialToBroadcasterAck.token)
}
inline void sdkDialToBroadcasterAck::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:batprotobuf.sdkDialToBroadcasterAck.token)
}
inline void sdkDialToBroadcasterAck::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:batprotobuf.sdkDialToBroadcasterAck.token)
}
inline ::std::string* sdkDialToBroadcasterAck::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:batprotobuf.sdkDialToBroadcasterAck.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* sdkDialToBroadcasterAck::release_token() {
  // @@protoc_insertion_point(field_release:batprotobuf.sdkDialToBroadcasterAck.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void sdkDialToBroadcasterAck::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:batprotobuf.sdkDialToBroadcasterAck.token)
}

// optional string uniqId = 3;
inline void sdkDialToBroadcasterAck::clear_uniqid() {
  uniqid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& sdkDialToBroadcasterAck::uniqid() const {
  // @@protoc_insertion_point(field_get:batprotobuf.sdkDialToBroadcasterAck.uniqId)
  return uniqid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void sdkDialToBroadcasterAck::set_uniqid(const ::std::string& value) {
  
  uniqid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:batprotobuf.sdkDialToBroadcasterAck.uniqId)
}
inline void sdkDialToBroadcasterAck::set_uniqid(const char* value) {
  
  uniqid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:batprotobuf.sdkDialToBroadcasterAck.uniqId)
}
inline void sdkDialToBroadcasterAck::set_uniqid(const char* value, size_t size) {
  
  uniqid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:batprotobuf.sdkDialToBroadcasterAck.uniqId)
}
inline ::std::string* sdkDialToBroadcasterAck::mutable_uniqid() {
  
  // @@protoc_insertion_point(field_mutable:batprotobuf.sdkDialToBroadcasterAck.uniqId)
  return uniqid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* sdkDialToBroadcasterAck::release_uniqid() {
  // @@protoc_insertion_point(field_release:batprotobuf.sdkDialToBroadcasterAck.uniqId)
  
  return uniqid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void sdkDialToBroadcasterAck::set_allocated_uniqid(::std::string* uniqid) {
  if (uniqid != NULL) {
    
  } else {
    
  }
  uniqid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uniqid);
  // @@protoc_insertion_point(field_set_allocated:batprotobuf.sdkDialToBroadcasterAck.uniqId)
}

// optional uint32 broadcasterState = 4;
inline void sdkDialToBroadcasterAck::clear_broadcasterstate() {
  broadcasterstate_ = 0u;
}
inline ::google::protobuf::uint32 sdkDialToBroadcasterAck::broadcasterstate() const {
  // @@protoc_insertion_point(field_get:batprotobuf.sdkDialToBroadcasterAck.broadcasterState)
  return broadcasterstate_;
}
inline void sdkDialToBroadcasterAck::set_broadcasterstate(::google::protobuf::uint32 value) {
  
  broadcasterstate_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.sdkDialToBroadcasterAck.broadcasterState)
}

// optional bool insufficientBalance = 5;
inline void sdkDialToBroadcasterAck::clear_insufficientbalance() {
  insufficientbalance_ = false;
}
inline bool sdkDialToBroadcasterAck::insufficientbalance() const {
  // @@protoc_insertion_point(field_get:batprotobuf.sdkDialToBroadcasterAck.insufficientBalance)
  return insufficientbalance_;
}
inline void sdkDialToBroadcasterAck::set_insufficientbalance(bool value) {
  
  insufficientbalance_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.sdkDialToBroadcasterAck.insufficientBalance)
}

inline const sdkDialToBroadcasterAck* sdkDialToBroadcasterAck::internal_default_instance() {
  return &sdkDialToBroadcasterAck_default_instance_.get();
}
// -------------------------------------------------------------------

// channel

// optional string id = 1;
inline void channel::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& channel::id() const {
  // @@protoc_insertion_point(field_get:batprotobuf.channel.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void channel::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:batprotobuf.channel.id)
}
inline void channel::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:batprotobuf.channel.id)
}
inline void channel::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:batprotobuf.channel.id)
}
inline ::std::string* channel::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:batprotobuf.channel.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* channel::release_id() {
  // @@protoc_insertion_point(field_release:batprotobuf.channel.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void channel::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:batprotobuf.channel.id)
}

// optional uint32 category = 2;
inline void channel::clear_category() {
  category_ = 0u;
}
inline ::google::protobuf::uint32 channel::category() const {
  // @@protoc_insertion_point(field_get:batprotobuf.channel.category)
  return category_;
}
inline void channel::set_category(::google::protobuf::uint32 value) {
  
  category_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.channel.category)
}

// optional int64 startTs = 3;
inline void channel::clear_startts() {
  startts_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 channel::startts() const {
  // @@protoc_insertion_point(field_get:batprotobuf.channel.startTs)
  return startts_;
}
inline void channel::set_startts(::google::protobuf::int64 value) {
  
  startts_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.channel.startTs)
}

// optional int64 endTs = 4;
inline void channel::clear_endts() {
  endts_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 channel::endts() const {
  // @@protoc_insertion_point(field_get:batprotobuf.channel.endTs)
  return endts_;
}
inline void channel::set_endts(::google::protobuf::int64 value) {
  
  endts_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.channel.endTs)
}

inline const channel* channel::internal_default_instance() {
  return &channel_default_instance_.get();
}
// -------------------------------------------------------------------

// sdkChannelHistoryReq

// optional uint32 page = 1;
inline void sdkChannelHistoryReq::clear_page() {
  page_ = 0u;
}
inline ::google::protobuf::uint32 sdkChannelHistoryReq::page() const {
  // @@protoc_insertion_point(field_get:batprotobuf.sdkChannelHistoryReq.page)
  return page_;
}
inline void sdkChannelHistoryReq::set_page(::google::protobuf::uint32 value) {
  
  page_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.sdkChannelHistoryReq.page)
}

// optional uint32 limit = 2;
inline void sdkChannelHistoryReq::clear_limit() {
  limit_ = 0u;
}
inline ::google::protobuf::uint32 sdkChannelHistoryReq::limit() const {
  // @@protoc_insertion_point(field_get:batprotobuf.sdkChannelHistoryReq.limit)
  return limit_;
}
inline void sdkChannelHistoryReq::set_limit(::google::protobuf::uint32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.sdkChannelHistoryReq.limit)
}

inline const sdkChannelHistoryReq* sdkChannelHistoryReq::internal_default_instance() {
  return &sdkChannelHistoryReq_default_instance_.get();
}
// -------------------------------------------------------------------

// sdkChannelHistoryRes

// repeated .batprotobuf.channelHistory list = 1;
inline int sdkChannelHistoryRes::list_size() const {
  return list_.size();
}
inline void sdkChannelHistoryRes::clear_list() {
  list_.Clear();
}
inline const ::batprotobuf::channelHistory& sdkChannelHistoryRes::list(int index) const {
  // @@protoc_insertion_point(field_get:batprotobuf.sdkChannelHistoryRes.list)
  return list_.Get(index);
}
inline ::batprotobuf::channelHistory* sdkChannelHistoryRes::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:batprotobuf.sdkChannelHistoryRes.list)
  return list_.Mutable(index);
}
inline ::batprotobuf::channelHistory* sdkChannelHistoryRes::add_list() {
  // @@protoc_insertion_point(field_add:batprotobuf.sdkChannelHistoryRes.list)
  return list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::batprotobuf::channelHistory >*
sdkChannelHistoryRes::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:batprotobuf.sdkChannelHistoryRes.list)
  return &list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::batprotobuf::channelHistory >&
sdkChannelHistoryRes::list() const {
  // @@protoc_insertion_point(field_list:batprotobuf.sdkChannelHistoryRes.list)
  return list_;
}

inline const sdkChannelHistoryRes* sdkChannelHistoryRes::internal_default_instance() {
  return &sdkChannelHistoryRes_default_instance_.get();
}
// -------------------------------------------------------------------

// channelHistory

// optional uint32 historyId = 1;
inline void channelHistory::clear_historyid() {
  historyid_ = 0u;
}
inline ::google::protobuf::uint32 channelHistory::historyid() const {
  // @@protoc_insertion_point(field_get:batprotobuf.channelHistory.historyId)
  return historyid_;
}
inline void channelHistory::set_historyid(::google::protobuf::uint32 value) {
  
  historyid_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.channelHistory.historyId)
}

// optional int64 channelId = 2;
inline void channelHistory::clear_channelid() {
  channelid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 channelHistory::channelid() const {
  // @@protoc_insertion_point(field_get:batprotobuf.channelHistory.channelId)
  return channelid_;
}
inline void channelHistory::set_channelid(::google::protobuf::int64 value) {
  
  channelid_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.channelHistory.channelId)
}

// optional uint32 selfId = 3;
inline void channelHistory::clear_selfid() {
  selfid_ = 0u;
}
inline ::google::protobuf::uint32 channelHistory::selfid() const {
  // @@protoc_insertion_point(field_get:batprotobuf.channelHistory.selfId)
  return selfid_;
}
inline void channelHistory::set_selfid(::google::protobuf::uint32 value) {
  
  selfid_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.channelHistory.selfId)
}

// optional uint32 otherId = 4;
inline void channelHistory::clear_otherid() {
  otherid_ = 0u;
}
inline ::google::protobuf::uint32 channelHistory::otherid() const {
  // @@protoc_insertion_point(field_get:batprotobuf.channelHistory.otherId)
  return otherid_;
}
inline void channelHistory::set_otherid(::google::protobuf::uint32 value) {
  
  otherid_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.channelHistory.otherId)
}

// optional string otherName = 5;
inline void channelHistory::clear_othername() {
  othername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& channelHistory::othername() const {
  // @@protoc_insertion_point(field_get:batprotobuf.channelHistory.otherName)
  return othername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void channelHistory::set_othername(const ::std::string& value) {
  
  othername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:batprotobuf.channelHistory.otherName)
}
inline void channelHistory::set_othername(const char* value) {
  
  othername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:batprotobuf.channelHistory.otherName)
}
inline void channelHistory::set_othername(const char* value, size_t size) {
  
  othername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:batprotobuf.channelHistory.otherName)
}
inline ::std::string* channelHistory::mutable_othername() {
  
  // @@protoc_insertion_point(field_mutable:batprotobuf.channelHistory.otherName)
  return othername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* channelHistory::release_othername() {
  // @@protoc_insertion_point(field_release:batprotobuf.channelHistory.otherName)
  
  return othername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void channelHistory::set_allocated_othername(::std::string* othername) {
  if (othername != NULL) {
    
  } else {
    
  }
  othername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), othername);
  // @@protoc_insertion_point(field_set_allocated:batprotobuf.channelHistory.otherName)
}

// optional int64 createTime = 6;
inline void channelHistory::clear_createtime() {
  createtime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 channelHistory::createtime() const {
  // @@protoc_insertion_point(field_get:batprotobuf.channelHistory.createTime)
  return createtime_;
}
inline void channelHistory::set_createtime(::google::protobuf::int64 value) {
  
  createtime_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.channelHistory.createTime)
}

// optional uint32 duration = 7;
inline void channelHistory::clear_duration() {
  duration_ = 0u;
}
inline ::google::protobuf::uint32 channelHistory::duration() const {
  // @@protoc_insertion_point(field_get:batprotobuf.channelHistory.duration)
  return duration_;
}
inline void channelHistory::set_duration(::google::protobuf::uint32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:batprotobuf.channelHistory.duration)
}

inline const channelHistory* channelHistory::internal_default_instance() {
  return &channelHistory_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace batprotobuf

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_channelsdk_2eproto__INCLUDED
