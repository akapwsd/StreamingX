// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mediaBase.proto

#ifndef PROTOBUF_mediaBase_2eproto__INCLUDED
#define PROTOBUF_mediaBase_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace uyujoy {
namespace api {
namespace paasim {
namespace frontend {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_mediaBase_2eproto();
void protobuf_InitDefaults_mediaBase_2eproto();
void protobuf_AssignDesc_mediaBase_2eproto();
void protobuf_ShutdownFile_mediaBase_2eproto();

class mediaAudio;
class mediaFile;
class mediaImage;
class mediaImageOrigin;
class mediaImagePreview;
class mediaLocation;
class mediaNameCard;
class mediaRecord;
class mediaSticker;
class mediaVideo;
class photo;

// ===================================================================

class mediaRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:uyujoy.api.paasim.frontend.mediaRecord) */ {
 public:
  mediaRecord();
  virtual ~mediaRecord();

  mediaRecord(const mediaRecord& from);

  inline mediaRecord& operator=(const mediaRecord& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mediaRecord& default_instance();

  static const mediaRecord* internal_default_instance();

  void Swap(mediaRecord* other);

  // implements Message ----------------------------------------------

  inline mediaRecord* New() const { return New(NULL); }

  mediaRecord* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mediaRecord& from);
  void MergeFrom(const mediaRecord& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(mediaRecord* other);
  void UnsafeMergeFrom(const mediaRecord& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mediaType = 1;
  void clear_mediatype();
  static const int kMediaTypeFieldNumber = 1;
  ::google::protobuf::uint32 mediatype() const;
  void set_mediatype(::google::protobuf::uint32 value);

  // optional bytes thumbnailBlur = 2;
  void clear_thumbnailblur();
  static const int kThumbnailBlurFieldNumber = 2;
  const ::std::string& thumbnailblur() const;
  void set_thumbnailblur(const ::std::string& value);
  void set_thumbnailblur(const char* value);
  void set_thumbnailblur(const void* value, size_t size);
  ::std::string* mutable_thumbnailblur();
  ::std::string* release_thumbnailblur();
  void set_allocated_thumbnailblur(::std::string* thumbnailblur);

  // optional bytes mediaContent = 3;
  void clear_mediacontent();
  static const int kMediaContentFieldNumber = 3;
  const ::std::string& mediacontent() const;
  void set_mediacontent(const ::std::string& value);
  void set_mediacontent(const char* value);
  void set_mediacontent(const void* value, size_t size);
  ::std::string* mutable_mediacontent();
  ::std::string* release_mediacontent();
  void set_allocated_mediacontent(::std::string* mediacontent);

  // optional bool encrypted = 4;
  void clear_encrypted();
  static const int kEncryptedFieldNumber = 4;
  bool encrypted() const;
  void set_encrypted(bool value);

  // @@protoc_insertion_point(class_scope:uyujoy.api.paasim.frontend.mediaRecord)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr thumbnailblur_;
  ::google::protobuf::internal::ArenaStringPtr mediacontent_;
  ::google::protobuf::uint32 mediatype_;
  bool encrypted_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_mediaBase_2eproto_impl();
  friend void  protobuf_AddDesc_mediaBase_2eproto_impl();
  friend void protobuf_AssignDesc_mediaBase_2eproto();
  friend void protobuf_ShutdownFile_mediaBase_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<mediaRecord> mediaRecord_default_instance_;

// -------------------------------------------------------------------

class mediaImage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:uyujoy.api.paasim.frontend.mediaImage) */ {
 public:
  mediaImage();
  virtual ~mediaImage();

  mediaImage(const mediaImage& from);

  inline mediaImage& operator=(const mediaImage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mediaImage& default_instance();

  static const mediaImage* internal_default_instance();

  void Swap(mediaImage* other);

  // implements Message ----------------------------------------------

  inline mediaImage* New() const { return New(NULL); }

  mediaImage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mediaImage& from);
  void MergeFrom(const mediaImage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(mediaImage* other);
  void UnsafeMergeFrom(const mediaImage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .uyujoy.api.paasim.frontend.mediaImagePreview preview = 1;
  bool has_preview() const;
  void clear_preview();
  static const int kPreviewFieldNumber = 1;
  const ::uyujoy::api::paasim::frontend::mediaImagePreview& preview() const;
  ::uyujoy::api::paasim::frontend::mediaImagePreview* mutable_preview();
  ::uyujoy::api::paasim::frontend::mediaImagePreview* release_preview();
  void set_allocated_preview(::uyujoy::api::paasim::frontend::mediaImagePreview* preview);

  // optional .uyujoy.api.paasim.frontend.mediaImageOrigin origin = 2;
  bool has_origin() const;
  void clear_origin();
  static const int kOriginFieldNumber = 2;
  const ::uyujoy::api::paasim::frontend::mediaImageOrigin& origin() const;
  ::uyujoy::api::paasim::frontend::mediaImageOrigin* mutable_origin();
  ::uyujoy::api::paasim::frontend::mediaImageOrigin* release_origin();
  void set_allocated_origin(::uyujoy::api::paasim::frontend::mediaImageOrigin* origin);

  // optional string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string ext = 4;
  void clear_ext();
  static const int kExtFieldNumber = 4;
  const ::std::string& ext() const;
  void set_ext(const ::std::string& value);
  void set_ext(const char* value);
  void set_ext(const char* value, size_t size);
  ::std::string* mutable_ext();
  ::std::string* release_ext();
  void set_allocated_ext(::std::string* ext);

  // @@protoc_insertion_point(class_scope:uyujoy.api.paasim.frontend.mediaImage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr ext_;
  ::uyujoy::api::paasim::frontend::mediaImagePreview* preview_;
  ::uyujoy::api::paasim::frontend::mediaImageOrigin* origin_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_mediaBase_2eproto_impl();
  friend void  protobuf_AddDesc_mediaBase_2eproto_impl();
  friend void protobuf_AssignDesc_mediaBase_2eproto();
  friend void protobuf_ShutdownFile_mediaBase_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<mediaImage> mediaImage_default_instance_;

// -------------------------------------------------------------------

class mediaImagePreview : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:uyujoy.api.paasim.frontend.mediaImagePreview) */ {
 public:
  mediaImagePreview();
  virtual ~mediaImagePreview();

  mediaImagePreview(const mediaImagePreview& from);

  inline mediaImagePreview& operator=(const mediaImagePreview& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mediaImagePreview& default_instance();

  static const mediaImagePreview* internal_default_instance();

  void Swap(mediaImagePreview* other);

  // implements Message ----------------------------------------------

  inline mediaImagePreview* New() const { return New(NULL); }

  mediaImagePreview* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mediaImagePreview& from);
  void MergeFrom(const mediaImagePreview& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(mediaImagePreview* other);
  void UnsafeMergeFrom(const mediaImagePreview& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 fid = 1;
  void clear_fid();
  static const int kFidFieldNumber = 1;
  ::google::protobuf::int64 fid() const;
  void set_fid(::google::protobuf::int64 value);

  // optional uint32 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // optional string hash = 3;
  void clear_hash();
  static const int kHashFieldNumber = 3;
  const ::std::string& hash() const;
  void set_hash(const ::std::string& value);
  void set_hash(const char* value);
  void set_hash(const char* value, size_t size);
  ::std::string* mutable_hash();
  ::std::string* release_hash();
  void set_allocated_hash(::std::string* hash);

  // optional string url = 4;
  void clear_url();
  static const int kUrlFieldNumber = 4;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional int32 height = 5;
  void clear_height();
  static const int kHeightFieldNumber = 5;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // optional int32 wight = 6;
  void clear_wight();
  static const int kWightFieldNumber = 6;
  ::google::protobuf::int32 wight() const;
  void set_wight(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:uyujoy.api.paasim.frontend.mediaImagePreview)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr hash_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::int64 fid_;
  ::google::protobuf::uint32 size_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 wight_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_mediaBase_2eproto_impl();
  friend void  protobuf_AddDesc_mediaBase_2eproto_impl();
  friend void protobuf_AssignDesc_mediaBase_2eproto();
  friend void protobuf_ShutdownFile_mediaBase_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<mediaImagePreview> mediaImagePreview_default_instance_;

// -------------------------------------------------------------------

class mediaImageOrigin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:uyujoy.api.paasim.frontend.mediaImageOrigin) */ {
 public:
  mediaImageOrigin();
  virtual ~mediaImageOrigin();

  mediaImageOrigin(const mediaImageOrigin& from);

  inline mediaImageOrigin& operator=(const mediaImageOrigin& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mediaImageOrigin& default_instance();

  static const mediaImageOrigin* internal_default_instance();

  void Swap(mediaImageOrigin* other);

  // implements Message ----------------------------------------------

  inline mediaImageOrigin* New() const { return New(NULL); }

  mediaImageOrigin* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mediaImageOrigin& from);
  void MergeFrom(const mediaImageOrigin& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(mediaImageOrigin* other);
  void UnsafeMergeFrom(const mediaImageOrigin& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 fid = 1;
  void clear_fid();
  static const int kFidFieldNumber = 1;
  ::google::protobuf::int64 fid() const;
  void set_fid(::google::protobuf::int64 value);

  // optional uint32 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // optional string hash = 3;
  void clear_hash();
  static const int kHashFieldNumber = 3;
  const ::std::string& hash() const;
  void set_hash(const ::std::string& value);
  void set_hash(const char* value);
  void set_hash(const char* value, size_t size);
  ::std::string* mutable_hash();
  ::std::string* release_hash();
  void set_allocated_hash(::std::string* hash);

  // optional string url = 4;
  void clear_url();
  static const int kUrlFieldNumber = 4;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional int32 height = 5;
  void clear_height();
  static const int kHeightFieldNumber = 5;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // optional int32 wight = 6;
  void clear_wight();
  static const int kWightFieldNumber = 6;
  ::google::protobuf::int32 wight() const;
  void set_wight(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:uyujoy.api.paasim.frontend.mediaImageOrigin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr hash_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::int64 fid_;
  ::google::protobuf::uint32 size_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 wight_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_mediaBase_2eproto_impl();
  friend void  protobuf_AddDesc_mediaBase_2eproto_impl();
  friend void protobuf_AssignDesc_mediaBase_2eproto();
  friend void protobuf_ShutdownFile_mediaBase_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<mediaImageOrigin> mediaImageOrigin_default_instance_;

// -------------------------------------------------------------------

class mediaAudio : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:uyujoy.api.paasim.frontend.mediaAudio) */ {
 public:
  mediaAudio();
  virtual ~mediaAudio();

  mediaAudio(const mediaAudio& from);

  inline mediaAudio& operator=(const mediaAudio& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mediaAudio& default_instance();

  static const mediaAudio* internal_default_instance();

  void Swap(mediaAudio* other);

  // implements Message ----------------------------------------------

  inline mediaAudio* New() const { return New(NULL); }

  mediaAudio* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mediaAudio& from);
  void MergeFrom(const mediaAudio& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(mediaAudio* other);
  void UnsafeMergeFrom(const mediaAudio& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 fid = 1;
  void clear_fid();
  static const int kFidFieldNumber = 1;
  ::google::protobuf::int64 fid() const;
  void set_fid(::google::protobuf::int64 value);

  // optional string extName = 2;
  void clear_extname();
  static const int kExtNameFieldNumber = 2;
  const ::std::string& extname() const;
  void set_extname(const ::std::string& value);
  void set_extname(const char* value);
  void set_extname(const char* value, size_t size);
  ::std::string* mutable_extname();
  ::std::string* release_extname();
  void set_allocated_extname(::std::string* extname);

  // optional uint32 size = 3;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // optional string name = 4;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 timeLen = 5;
  void clear_timelen();
  static const int kTimeLenFieldNumber = 5;
  ::google::protobuf::uint32 timelen() const;
  void set_timelen(::google::protobuf::uint32 value);

  // optional string hash = 6;
  void clear_hash();
  static const int kHashFieldNumber = 6;
  const ::std::string& hash() const;
  void set_hash(const ::std::string& value);
  void set_hash(const char* value);
  void set_hash(const char* value, size_t size);
  ::std::string* mutable_hash();
  ::std::string* release_hash();
  void set_allocated_hash(::std::string* hash);

  // optional string url = 7;
  void clear_url();
  static const int kUrlFieldNumber = 7;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:uyujoy.api.paasim.frontend.mediaAudio)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr extname_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr hash_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::int64 fid_;
  ::google::protobuf::uint32 size_;
  ::google::protobuf::uint32 timelen_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_mediaBase_2eproto_impl();
  friend void  protobuf_AddDesc_mediaBase_2eproto_impl();
  friend void protobuf_AssignDesc_mediaBase_2eproto();
  friend void protobuf_ShutdownFile_mediaBase_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<mediaAudio> mediaAudio_default_instance_;

// -------------------------------------------------------------------

class mediaVideo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:uyujoy.api.paasim.frontend.mediaVideo) */ {
 public:
  mediaVideo();
  virtual ~mediaVideo();

  mediaVideo(const mediaVideo& from);

  inline mediaVideo& operator=(const mediaVideo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mediaVideo& default_instance();

  static const mediaVideo* internal_default_instance();

  void Swap(mediaVideo* other);

  // implements Message ----------------------------------------------

  inline mediaVideo* New() const { return New(NULL); }

  mediaVideo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mediaVideo& from);
  void MergeFrom(const mediaVideo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(mediaVideo* other);
  void UnsafeMergeFrom(const mediaVideo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 fid = 1;
  void clear_fid();
  static const int kFidFieldNumber = 1;
  ::google::protobuf::int64 fid() const;
  void set_fid(::google::protobuf::int64 value);

  // optional string extName = 2;
  void clear_extname();
  static const int kExtNameFieldNumber = 2;
  const ::std::string& extname() const;
  void set_extname(const ::std::string& value);
  void set_extname(const char* value);
  void set_extname(const char* value, size_t size);
  ::std::string* mutable_extname();
  ::std::string* release_extname();
  void set_allocated_extname(::std::string* extname);

  // optional uint32 size = 3;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // optional string name = 4;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 height = 5;
  void clear_height();
  static const int kHeightFieldNumber = 5;
  ::google::protobuf::uint32 height() const;
  void set_height(::google::protobuf::uint32 value);

  // optional uint32 wight = 6;
  void clear_wight();
  static const int kWightFieldNumber = 6;
  ::google::protobuf::uint32 wight() const;
  void set_wight(::google::protobuf::uint32 value);

  // optional uint32 timeLen = 7;
  void clear_timelen();
  static const int kTimeLenFieldNumber = 7;
  ::google::protobuf::uint32 timelen() const;
  void set_timelen(::google::protobuf::uint32 value);

  // optional string url = 8;
  void clear_url();
  static const int kUrlFieldNumber = 8;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string hash = 9;
  void clear_hash();
  static const int kHashFieldNumber = 9;
  const ::std::string& hash() const;
  void set_hash(const ::std::string& value);
  void set_hash(const char* value);
  void set_hash(const char* value, size_t size);
  ::std::string* mutable_hash();
  ::std::string* release_hash();
  void set_allocated_hash(::std::string* hash);

  // @@protoc_insertion_point(class_scope:uyujoy.api.paasim.frontend.mediaVideo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr extname_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr hash_;
  ::google::protobuf::int64 fid_;
  ::google::protobuf::uint32 size_;
  ::google::protobuf::uint32 height_;
  ::google::protobuf::uint32 wight_;
  ::google::protobuf::uint32 timelen_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_mediaBase_2eproto_impl();
  friend void  protobuf_AddDesc_mediaBase_2eproto_impl();
  friend void protobuf_AssignDesc_mediaBase_2eproto();
  friend void protobuf_ShutdownFile_mediaBase_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<mediaVideo> mediaVideo_default_instance_;

// -------------------------------------------------------------------

class mediaNameCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:uyujoy.api.paasim.frontend.mediaNameCard) */ {
 public:
  mediaNameCard();
  virtual ~mediaNameCard();

  mediaNameCard(const mediaNameCard& from);

  inline mediaNameCard& operator=(const mediaNameCard& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mediaNameCard& default_instance();

  static const mediaNameCard* internal_default_instance();

  void Swap(mediaNameCard* other);

  // implements Message ----------------------------------------------

  inline mediaNameCard* New() const { return New(NULL); }

  mediaNameCard* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mediaNameCard& from);
  void MergeFrom(const mediaNameCard& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(mediaNameCard* other);
  void UnsafeMergeFrom(const mediaNameCard& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // optional string batId = 2;
  void clear_batid();
  static const int kBatIdFieldNumber = 2;
  const ::std::string& batid() const;
  void set_batid(const ::std::string& value);
  void set_batid(const char* value);
  void set_batid(const char* value, size_t size);
  ::std::string* mutable_batid();
  ::std::string* release_batid();
  void set_allocated_batid(::std::string* batid);

  // optional string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string avatar = 4;
  void clear_avatar();
  static const int kAvatarFieldNumber = 4;
  const ::std::string& avatar() const;
  void set_avatar(const ::std::string& value);
  void set_avatar(const char* value);
  void set_avatar(const char* value, size_t size);
  ::std::string* mutable_avatar();
  ::std::string* release_avatar();
  void set_allocated_avatar(::std::string* avatar);

  // @@protoc_insertion_point(class_scope:uyujoy.api.paasim.frontend.mediaNameCard)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::google::protobuf::internal::ArenaStringPtr batid_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr avatar_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_mediaBase_2eproto_impl();
  friend void  protobuf_AddDesc_mediaBase_2eproto_impl();
  friend void protobuf_AssignDesc_mediaBase_2eproto();
  friend void protobuf_ShutdownFile_mediaBase_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<mediaNameCard> mediaNameCard_default_instance_;

// -------------------------------------------------------------------

class mediaFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:uyujoy.api.paasim.frontend.mediaFile) */ {
 public:
  mediaFile();
  virtual ~mediaFile();

  mediaFile(const mediaFile& from);

  inline mediaFile& operator=(const mediaFile& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mediaFile& default_instance();

  static const mediaFile* internal_default_instance();

  void Swap(mediaFile* other);

  // implements Message ----------------------------------------------

  inline mediaFile* New() const { return New(NULL); }

  mediaFile* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mediaFile& from);
  void MergeFrom(const mediaFile& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(mediaFile* other);
  void UnsafeMergeFrom(const mediaFile& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 fid = 1;
  void clear_fid();
  static const int kFidFieldNumber = 1;
  ::google::protobuf::int64 fid() const;
  void set_fid(::google::protobuf::int64 value);

  // optional string extName = 2;
  void clear_extname();
  static const int kExtNameFieldNumber = 2;
  const ::std::string& extname() const;
  void set_extname(const ::std::string& value);
  void set_extname(const char* value);
  void set_extname(const char* value, size_t size);
  ::std::string* mutable_extname();
  ::std::string* release_extname();
  void set_allocated_extname(::std::string* extname);

  // optional string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 size = 4;
  void clear_size();
  static const int kSizeFieldNumber = 4;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // optional string hash = 5;
  void clear_hash();
  static const int kHashFieldNumber = 5;
  const ::std::string& hash() const;
  void set_hash(const ::std::string& value);
  void set_hash(const char* value);
  void set_hash(const char* value, size_t size);
  ::std::string* mutable_hash();
  ::std::string* release_hash();
  void set_allocated_hash(::std::string* hash);

  // @@protoc_insertion_point(class_scope:uyujoy.api.paasim.frontend.mediaFile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr extname_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr hash_;
  ::google::protobuf::int64 fid_;
  ::google::protobuf::uint32 size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_mediaBase_2eproto_impl();
  friend void  protobuf_AddDesc_mediaBase_2eproto_impl();
  friend void protobuf_AssignDesc_mediaBase_2eproto();
  friend void protobuf_ShutdownFile_mediaBase_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<mediaFile> mediaFile_default_instance_;

// -------------------------------------------------------------------

class mediaLocation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:uyujoy.api.paasim.frontend.mediaLocation) */ {
 public:
  mediaLocation();
  virtual ~mediaLocation();

  mediaLocation(const mediaLocation& from);

  inline mediaLocation& operator=(const mediaLocation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mediaLocation& default_instance();

  static const mediaLocation* internal_default_instance();

  void Swap(mediaLocation* other);

  // implements Message ----------------------------------------------

  inline mediaLocation* New() const { return New(NULL); }

  mediaLocation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mediaLocation& from);
  void MergeFrom(const mediaLocation& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(mediaLocation* other);
  void UnsafeMergeFrom(const mediaLocation& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double latitude = 1;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 1;
  double latitude() const;
  void set_latitude(double value);

  // optional double longitude = 2;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 2;
  double longitude() const;
  void set_longitude(double value);

  // optional string title = 3;
  void clear_title();
  static const int kTitleFieldNumber = 3;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string subtitle = 4;
  void clear_subtitle();
  static const int kSubtitleFieldNumber = 4;
  const ::std::string& subtitle() const;
  void set_subtitle(const ::std::string& value);
  void set_subtitle(const char* value);
  void set_subtitle(const char* value, size_t size);
  ::std::string* mutable_subtitle();
  ::std::string* release_subtitle();
  void set_allocated_subtitle(::std::string* subtitle);

  // @@protoc_insertion_point(class_scope:uyujoy.api.paasim.frontend.mediaLocation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr subtitle_;
  double latitude_;
  double longitude_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_mediaBase_2eproto_impl();
  friend void  protobuf_AddDesc_mediaBase_2eproto_impl();
  friend void protobuf_AssignDesc_mediaBase_2eproto();
  friend void protobuf_ShutdownFile_mediaBase_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<mediaLocation> mediaLocation_default_instance_;

// -------------------------------------------------------------------

class mediaSticker : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:uyujoy.api.paasim.frontend.mediaSticker) */ {
 public:
  mediaSticker();
  virtual ~mediaSticker();

  mediaSticker(const mediaSticker& from);

  inline mediaSticker& operator=(const mediaSticker& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mediaSticker& default_instance();

  static const mediaSticker* internal_default_instance();

  void Swap(mediaSticker* other);

  // implements Message ----------------------------------------------

  inline mediaSticker* New() const { return New(NULL); }

  mediaSticker* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mediaSticker& from);
  void MergeFrom(const mediaSticker& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(mediaSticker* other);
  void UnsafeMergeFrom(const mediaSticker& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 setId = 1;
  void clear_setid();
  static const int kSetIdFieldNumber = 1;
  ::google::protobuf::uint32 setid() const;
  void set_setid(::google::protobuf::uint32 value);

  // optional uint32 stickerId = 2;
  void clear_stickerid();
  static const int kStickerIdFieldNumber = 2;
  ::google::protobuf::uint32 stickerid() const;
  void set_stickerid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:uyujoy.api.paasim.frontend.mediaSticker)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 setid_;
  ::google::protobuf::uint32 stickerid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_mediaBase_2eproto_impl();
  friend void  protobuf_AddDesc_mediaBase_2eproto_impl();
  friend void protobuf_AssignDesc_mediaBase_2eproto();
  friend void protobuf_ShutdownFile_mediaBase_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<mediaSticker> mediaSticker_default_instance_;

// -------------------------------------------------------------------

class photo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:uyujoy.api.paasim.frontend.photo) */ {
 public:
  photo();
  virtual ~photo();

  photo(const photo& from);

  inline photo& operator=(const photo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const photo& default_instance();

  static const photo* internal_default_instance();

  void Swap(photo* other);

  // implements Message ----------------------------------------------

  inline photo* New() const { return New(NULL); }

  photo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const photo& from);
  void MergeFrom(const photo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(photo* other);
  void UnsafeMergeFrom(const photo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .uyujoy.api.paasim.frontend.mediaImagePreview preview = 1;
  bool has_preview() const;
  void clear_preview();
  static const int kPreviewFieldNumber = 1;
  const ::uyujoy::api::paasim::frontend::mediaImagePreview& preview() const;
  ::uyujoy::api::paasim::frontend::mediaImagePreview* mutable_preview();
  ::uyujoy::api::paasim::frontend::mediaImagePreview* release_preview();
  void set_allocated_preview(::uyujoy::api::paasim::frontend::mediaImagePreview* preview);

  // optional .uyujoy.api.paasim.frontend.mediaImageOrigin origin = 2;
  bool has_origin() const;
  void clear_origin();
  static const int kOriginFieldNumber = 2;
  const ::uyujoy::api::paasim::frontend::mediaImageOrigin& origin() const;
  ::uyujoy::api::paasim::frontend::mediaImageOrigin* mutable_origin();
  ::uyujoy::api::paasim::frontend::mediaImageOrigin* release_origin();
  void set_allocated_origin(::uyujoy::api::paasim::frontend::mediaImageOrigin* origin);

  // optional string oldPhoto = 3;
  void clear_oldphoto();
  static const int kOldPhotoFieldNumber = 3;
  const ::std::string& oldphoto() const;
  void set_oldphoto(const ::std::string& value);
  void set_oldphoto(const char* value);
  void set_oldphoto(const char* value, size_t size);
  ::std::string* mutable_oldphoto();
  ::std::string* release_oldphoto();
  void set_allocated_oldphoto(::std::string* oldphoto);

  // @@protoc_insertion_point(class_scope:uyujoy.api.paasim.frontend.photo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr oldphoto_;
  ::uyujoy::api::paasim::frontend::mediaImagePreview* preview_;
  ::uyujoy::api::paasim::frontend::mediaImageOrigin* origin_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_mediaBase_2eproto_impl();
  friend void  protobuf_AddDesc_mediaBase_2eproto_impl();
  friend void protobuf_AssignDesc_mediaBase_2eproto();
  friend void protobuf_ShutdownFile_mediaBase_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<photo> photo_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// mediaRecord

// optional uint32 mediaType = 1;
inline void mediaRecord::clear_mediatype() {
  mediatype_ = 0u;
}
inline ::google::protobuf::uint32 mediaRecord::mediatype() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaRecord.mediaType)
  return mediatype_;
}
inline void mediaRecord::set_mediatype(::google::protobuf::uint32 value) {
  
  mediatype_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaRecord.mediaType)
}

// optional bytes thumbnailBlur = 2;
inline void mediaRecord::clear_thumbnailblur() {
  thumbnailblur_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& mediaRecord::thumbnailblur() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaRecord.thumbnailBlur)
  return thumbnailblur_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaRecord::set_thumbnailblur(const ::std::string& value) {
  
  thumbnailblur_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaRecord.thumbnailBlur)
}
inline void mediaRecord::set_thumbnailblur(const char* value) {
  
  thumbnailblur_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.mediaRecord.thumbnailBlur)
}
inline void mediaRecord::set_thumbnailblur(const void* value, size_t size) {
  
  thumbnailblur_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.mediaRecord.thumbnailBlur)
}
inline ::std::string* mediaRecord::mutable_thumbnailblur() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaRecord.thumbnailBlur)
  return thumbnailblur_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mediaRecord::release_thumbnailblur() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaRecord.thumbnailBlur)
  
  return thumbnailblur_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaRecord::set_allocated_thumbnailblur(::std::string* thumbnailblur) {
  if (thumbnailblur != NULL) {
    
  } else {
    
  }
  thumbnailblur_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), thumbnailblur);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaRecord.thumbnailBlur)
}

// optional bytes mediaContent = 3;
inline void mediaRecord::clear_mediacontent() {
  mediacontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& mediaRecord::mediacontent() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaRecord.mediaContent)
  return mediacontent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaRecord::set_mediacontent(const ::std::string& value) {
  
  mediacontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaRecord.mediaContent)
}
inline void mediaRecord::set_mediacontent(const char* value) {
  
  mediacontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.mediaRecord.mediaContent)
}
inline void mediaRecord::set_mediacontent(const void* value, size_t size) {
  
  mediacontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.mediaRecord.mediaContent)
}
inline ::std::string* mediaRecord::mutable_mediacontent() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaRecord.mediaContent)
  return mediacontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mediaRecord::release_mediacontent() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaRecord.mediaContent)
  
  return mediacontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaRecord::set_allocated_mediacontent(::std::string* mediacontent) {
  if (mediacontent != NULL) {
    
  } else {
    
  }
  mediacontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mediacontent);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaRecord.mediaContent)
}

// optional bool encrypted = 4;
inline void mediaRecord::clear_encrypted() {
  encrypted_ = false;
}
inline bool mediaRecord::encrypted() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaRecord.encrypted)
  return encrypted_;
}
inline void mediaRecord::set_encrypted(bool value) {
  
  encrypted_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaRecord.encrypted)
}

inline const mediaRecord* mediaRecord::internal_default_instance() {
  return &mediaRecord_default_instance_.get();
}
// -------------------------------------------------------------------

// mediaImage

// optional .uyujoy.api.paasim.frontend.mediaImagePreview preview = 1;
inline bool mediaImage::has_preview() const {
  return this != internal_default_instance() && preview_ != NULL;
}
inline void mediaImage::clear_preview() {
  if (GetArenaNoVirtual() == NULL && preview_ != NULL) delete preview_;
  preview_ = NULL;
}
inline const ::uyujoy::api::paasim::frontend::mediaImagePreview& mediaImage::preview() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaImage.preview)
  return preview_ != NULL ? *preview_
                         : *::uyujoy::api::paasim::frontend::mediaImagePreview::internal_default_instance();
}
inline ::uyujoy::api::paasim::frontend::mediaImagePreview* mediaImage::mutable_preview() {
  
  if (preview_ == NULL) {
    preview_ = new ::uyujoy::api::paasim::frontend::mediaImagePreview;
  }
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaImage.preview)
  return preview_;
}
inline ::uyujoy::api::paasim::frontend::mediaImagePreview* mediaImage::release_preview() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaImage.preview)
  
  ::uyujoy::api::paasim::frontend::mediaImagePreview* temp = preview_;
  preview_ = NULL;
  return temp;
}
inline void mediaImage::set_allocated_preview(::uyujoy::api::paasim::frontend::mediaImagePreview* preview) {
  delete preview_;
  preview_ = preview;
  if (preview) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaImage.preview)
}

// optional .uyujoy.api.paasim.frontend.mediaImageOrigin origin = 2;
inline bool mediaImage::has_origin() const {
  return this != internal_default_instance() && origin_ != NULL;
}
inline void mediaImage::clear_origin() {
  if (GetArenaNoVirtual() == NULL && origin_ != NULL) delete origin_;
  origin_ = NULL;
}
inline const ::uyujoy::api::paasim::frontend::mediaImageOrigin& mediaImage::origin() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaImage.origin)
  return origin_ != NULL ? *origin_
                         : *::uyujoy::api::paasim::frontend::mediaImageOrigin::internal_default_instance();
}
inline ::uyujoy::api::paasim::frontend::mediaImageOrigin* mediaImage::mutable_origin() {
  
  if (origin_ == NULL) {
    origin_ = new ::uyujoy::api::paasim::frontend::mediaImageOrigin;
  }
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaImage.origin)
  return origin_;
}
inline ::uyujoy::api::paasim::frontend::mediaImageOrigin* mediaImage::release_origin() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaImage.origin)
  
  ::uyujoy::api::paasim::frontend::mediaImageOrigin* temp = origin_;
  origin_ = NULL;
  return temp;
}
inline void mediaImage::set_allocated_origin(::uyujoy::api::paasim::frontend::mediaImageOrigin* origin) {
  delete origin_;
  origin_ = origin;
  if (origin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaImage.origin)
}

// optional string name = 3;
inline void mediaImage::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& mediaImage::name() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaImage.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaImage::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaImage.name)
}
inline void mediaImage::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.mediaImage.name)
}
inline void mediaImage::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.mediaImage.name)
}
inline ::std::string* mediaImage::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaImage.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mediaImage::release_name() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaImage.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaImage::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaImage.name)
}

// optional string ext = 4;
inline void mediaImage::clear_ext() {
  ext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& mediaImage::ext() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaImage.ext)
  return ext_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaImage::set_ext(const ::std::string& value) {
  
  ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaImage.ext)
}
inline void mediaImage::set_ext(const char* value) {
  
  ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.mediaImage.ext)
}
inline void mediaImage::set_ext(const char* value, size_t size) {
  
  ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.mediaImage.ext)
}
inline ::std::string* mediaImage::mutable_ext() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaImage.ext)
  return ext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mediaImage::release_ext() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaImage.ext)
  
  return ext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaImage::set_allocated_ext(::std::string* ext) {
  if (ext != NULL) {
    
  } else {
    
  }
  ext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ext);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaImage.ext)
}

inline const mediaImage* mediaImage::internal_default_instance() {
  return &mediaImage_default_instance_.get();
}
// -------------------------------------------------------------------

// mediaImagePreview

// optional int64 fid = 1;
inline void mediaImagePreview::clear_fid() {
  fid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 mediaImagePreview::fid() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaImagePreview.fid)
  return fid_;
}
inline void mediaImagePreview::set_fid(::google::protobuf::int64 value) {
  
  fid_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaImagePreview.fid)
}

// optional uint32 size = 2;
inline void mediaImagePreview::clear_size() {
  size_ = 0u;
}
inline ::google::protobuf::uint32 mediaImagePreview::size() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaImagePreview.size)
  return size_;
}
inline void mediaImagePreview::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaImagePreview.size)
}

// optional string hash = 3;
inline void mediaImagePreview::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& mediaImagePreview::hash() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaImagePreview.hash)
  return hash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaImagePreview::set_hash(const ::std::string& value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaImagePreview.hash)
}
inline void mediaImagePreview::set_hash(const char* value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.mediaImagePreview.hash)
}
inline void mediaImagePreview::set_hash(const char* value, size_t size) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.mediaImagePreview.hash)
}
inline ::std::string* mediaImagePreview::mutable_hash() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaImagePreview.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mediaImagePreview::release_hash() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaImagePreview.hash)
  
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaImagePreview::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaImagePreview.hash)
}

// optional string url = 4;
inline void mediaImagePreview::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& mediaImagePreview::url() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaImagePreview.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaImagePreview::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaImagePreview.url)
}
inline void mediaImagePreview::set_url(const char* value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.mediaImagePreview.url)
}
inline void mediaImagePreview::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.mediaImagePreview.url)
}
inline ::std::string* mediaImagePreview::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaImagePreview.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mediaImagePreview::release_url() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaImagePreview.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaImagePreview::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaImagePreview.url)
}

// optional int32 height = 5;
inline void mediaImagePreview::clear_height() {
  height_ = 0;
}
inline ::google::protobuf::int32 mediaImagePreview::height() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaImagePreview.height)
  return height_;
}
inline void mediaImagePreview::set_height(::google::protobuf::int32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaImagePreview.height)
}

// optional int32 wight = 6;
inline void mediaImagePreview::clear_wight() {
  wight_ = 0;
}
inline ::google::protobuf::int32 mediaImagePreview::wight() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaImagePreview.wight)
  return wight_;
}
inline void mediaImagePreview::set_wight(::google::protobuf::int32 value) {
  
  wight_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaImagePreview.wight)
}

inline const mediaImagePreview* mediaImagePreview::internal_default_instance() {
  return &mediaImagePreview_default_instance_.get();
}
// -------------------------------------------------------------------

// mediaImageOrigin

// optional int64 fid = 1;
inline void mediaImageOrigin::clear_fid() {
  fid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 mediaImageOrigin::fid() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaImageOrigin.fid)
  return fid_;
}
inline void mediaImageOrigin::set_fid(::google::protobuf::int64 value) {
  
  fid_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaImageOrigin.fid)
}

// optional uint32 size = 2;
inline void mediaImageOrigin::clear_size() {
  size_ = 0u;
}
inline ::google::protobuf::uint32 mediaImageOrigin::size() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaImageOrigin.size)
  return size_;
}
inline void mediaImageOrigin::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaImageOrigin.size)
}

// optional string hash = 3;
inline void mediaImageOrigin::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& mediaImageOrigin::hash() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaImageOrigin.hash)
  return hash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaImageOrigin::set_hash(const ::std::string& value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaImageOrigin.hash)
}
inline void mediaImageOrigin::set_hash(const char* value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.mediaImageOrigin.hash)
}
inline void mediaImageOrigin::set_hash(const char* value, size_t size) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.mediaImageOrigin.hash)
}
inline ::std::string* mediaImageOrigin::mutable_hash() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaImageOrigin.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mediaImageOrigin::release_hash() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaImageOrigin.hash)
  
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaImageOrigin::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaImageOrigin.hash)
}

// optional string url = 4;
inline void mediaImageOrigin::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& mediaImageOrigin::url() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaImageOrigin.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaImageOrigin::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaImageOrigin.url)
}
inline void mediaImageOrigin::set_url(const char* value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.mediaImageOrigin.url)
}
inline void mediaImageOrigin::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.mediaImageOrigin.url)
}
inline ::std::string* mediaImageOrigin::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaImageOrigin.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mediaImageOrigin::release_url() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaImageOrigin.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaImageOrigin::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaImageOrigin.url)
}

// optional int32 height = 5;
inline void mediaImageOrigin::clear_height() {
  height_ = 0;
}
inline ::google::protobuf::int32 mediaImageOrigin::height() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaImageOrigin.height)
  return height_;
}
inline void mediaImageOrigin::set_height(::google::protobuf::int32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaImageOrigin.height)
}

// optional int32 wight = 6;
inline void mediaImageOrigin::clear_wight() {
  wight_ = 0;
}
inline ::google::protobuf::int32 mediaImageOrigin::wight() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaImageOrigin.wight)
  return wight_;
}
inline void mediaImageOrigin::set_wight(::google::protobuf::int32 value) {
  
  wight_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaImageOrigin.wight)
}

inline const mediaImageOrigin* mediaImageOrigin::internal_default_instance() {
  return &mediaImageOrigin_default_instance_.get();
}
// -------------------------------------------------------------------

// mediaAudio

// optional int64 fid = 1;
inline void mediaAudio::clear_fid() {
  fid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 mediaAudio::fid() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaAudio.fid)
  return fid_;
}
inline void mediaAudio::set_fid(::google::protobuf::int64 value) {
  
  fid_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaAudio.fid)
}

// optional string extName = 2;
inline void mediaAudio::clear_extname() {
  extname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& mediaAudio::extname() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaAudio.extName)
  return extname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaAudio::set_extname(const ::std::string& value) {
  
  extname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaAudio.extName)
}
inline void mediaAudio::set_extname(const char* value) {
  
  extname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.mediaAudio.extName)
}
inline void mediaAudio::set_extname(const char* value, size_t size) {
  
  extname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.mediaAudio.extName)
}
inline ::std::string* mediaAudio::mutable_extname() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaAudio.extName)
  return extname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mediaAudio::release_extname() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaAudio.extName)
  
  return extname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaAudio::set_allocated_extname(::std::string* extname) {
  if (extname != NULL) {
    
  } else {
    
  }
  extname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extname);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaAudio.extName)
}

// optional uint32 size = 3;
inline void mediaAudio::clear_size() {
  size_ = 0u;
}
inline ::google::protobuf::uint32 mediaAudio::size() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaAudio.size)
  return size_;
}
inline void mediaAudio::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaAudio.size)
}

// optional string name = 4;
inline void mediaAudio::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& mediaAudio::name() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaAudio.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaAudio::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaAudio.name)
}
inline void mediaAudio::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.mediaAudio.name)
}
inline void mediaAudio::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.mediaAudio.name)
}
inline ::std::string* mediaAudio::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaAudio.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mediaAudio::release_name() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaAudio.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaAudio::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaAudio.name)
}

// optional uint32 timeLen = 5;
inline void mediaAudio::clear_timelen() {
  timelen_ = 0u;
}
inline ::google::protobuf::uint32 mediaAudio::timelen() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaAudio.timeLen)
  return timelen_;
}
inline void mediaAudio::set_timelen(::google::protobuf::uint32 value) {
  
  timelen_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaAudio.timeLen)
}

// optional string hash = 6;
inline void mediaAudio::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& mediaAudio::hash() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaAudio.hash)
  return hash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaAudio::set_hash(const ::std::string& value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaAudio.hash)
}
inline void mediaAudio::set_hash(const char* value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.mediaAudio.hash)
}
inline void mediaAudio::set_hash(const char* value, size_t size) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.mediaAudio.hash)
}
inline ::std::string* mediaAudio::mutable_hash() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaAudio.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mediaAudio::release_hash() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaAudio.hash)
  
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaAudio::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaAudio.hash)
}

// optional string url = 7;
inline void mediaAudio::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& mediaAudio::url() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaAudio.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaAudio::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaAudio.url)
}
inline void mediaAudio::set_url(const char* value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.mediaAudio.url)
}
inline void mediaAudio::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.mediaAudio.url)
}
inline ::std::string* mediaAudio::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaAudio.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mediaAudio::release_url() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaAudio.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaAudio::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaAudio.url)
}

inline const mediaAudio* mediaAudio::internal_default_instance() {
  return &mediaAudio_default_instance_.get();
}
// -------------------------------------------------------------------

// mediaVideo

// optional int64 fid = 1;
inline void mediaVideo::clear_fid() {
  fid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 mediaVideo::fid() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaVideo.fid)
  return fid_;
}
inline void mediaVideo::set_fid(::google::protobuf::int64 value) {
  
  fid_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaVideo.fid)
}

// optional string extName = 2;
inline void mediaVideo::clear_extname() {
  extname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& mediaVideo::extname() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaVideo.extName)
  return extname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaVideo::set_extname(const ::std::string& value) {
  
  extname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaVideo.extName)
}
inline void mediaVideo::set_extname(const char* value) {
  
  extname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.mediaVideo.extName)
}
inline void mediaVideo::set_extname(const char* value, size_t size) {
  
  extname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.mediaVideo.extName)
}
inline ::std::string* mediaVideo::mutable_extname() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaVideo.extName)
  return extname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mediaVideo::release_extname() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaVideo.extName)
  
  return extname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaVideo::set_allocated_extname(::std::string* extname) {
  if (extname != NULL) {
    
  } else {
    
  }
  extname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extname);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaVideo.extName)
}

// optional uint32 size = 3;
inline void mediaVideo::clear_size() {
  size_ = 0u;
}
inline ::google::protobuf::uint32 mediaVideo::size() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaVideo.size)
  return size_;
}
inline void mediaVideo::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaVideo.size)
}

// optional string name = 4;
inline void mediaVideo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& mediaVideo::name() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaVideo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaVideo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaVideo.name)
}
inline void mediaVideo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.mediaVideo.name)
}
inline void mediaVideo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.mediaVideo.name)
}
inline ::std::string* mediaVideo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaVideo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mediaVideo::release_name() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaVideo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaVideo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaVideo.name)
}

// optional uint32 height = 5;
inline void mediaVideo::clear_height() {
  height_ = 0u;
}
inline ::google::protobuf::uint32 mediaVideo::height() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaVideo.height)
  return height_;
}
inline void mediaVideo::set_height(::google::protobuf::uint32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaVideo.height)
}

// optional uint32 wight = 6;
inline void mediaVideo::clear_wight() {
  wight_ = 0u;
}
inline ::google::protobuf::uint32 mediaVideo::wight() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaVideo.wight)
  return wight_;
}
inline void mediaVideo::set_wight(::google::protobuf::uint32 value) {
  
  wight_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaVideo.wight)
}

// optional uint32 timeLen = 7;
inline void mediaVideo::clear_timelen() {
  timelen_ = 0u;
}
inline ::google::protobuf::uint32 mediaVideo::timelen() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaVideo.timeLen)
  return timelen_;
}
inline void mediaVideo::set_timelen(::google::protobuf::uint32 value) {
  
  timelen_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaVideo.timeLen)
}

// optional string url = 8;
inline void mediaVideo::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& mediaVideo::url() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaVideo.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaVideo::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaVideo.url)
}
inline void mediaVideo::set_url(const char* value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.mediaVideo.url)
}
inline void mediaVideo::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.mediaVideo.url)
}
inline ::std::string* mediaVideo::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaVideo.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mediaVideo::release_url() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaVideo.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaVideo::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaVideo.url)
}

// optional string hash = 9;
inline void mediaVideo::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& mediaVideo::hash() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaVideo.hash)
  return hash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaVideo::set_hash(const ::std::string& value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaVideo.hash)
}
inline void mediaVideo::set_hash(const char* value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.mediaVideo.hash)
}
inline void mediaVideo::set_hash(const char* value, size_t size) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.mediaVideo.hash)
}
inline ::std::string* mediaVideo::mutable_hash() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaVideo.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mediaVideo::release_hash() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaVideo.hash)
  
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaVideo::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaVideo.hash)
}

inline const mediaVideo* mediaVideo::internal_default_instance() {
  return &mediaVideo_default_instance_.get();
}
// -------------------------------------------------------------------

// mediaNameCard

// optional string uid = 1;
inline void mediaNameCard::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& mediaNameCard::uid() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaNameCard.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaNameCard::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaNameCard.uid)
}
inline void mediaNameCard::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.mediaNameCard.uid)
}
inline void mediaNameCard::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.mediaNameCard.uid)
}
inline ::std::string* mediaNameCard::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaNameCard.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mediaNameCard::release_uid() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaNameCard.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaNameCard::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaNameCard.uid)
}

// optional string batId = 2;
inline void mediaNameCard::clear_batid() {
  batid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& mediaNameCard::batid() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaNameCard.batId)
  return batid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaNameCard::set_batid(const ::std::string& value) {
  
  batid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaNameCard.batId)
}
inline void mediaNameCard::set_batid(const char* value) {
  
  batid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.mediaNameCard.batId)
}
inline void mediaNameCard::set_batid(const char* value, size_t size) {
  
  batid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.mediaNameCard.batId)
}
inline ::std::string* mediaNameCard::mutable_batid() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaNameCard.batId)
  return batid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mediaNameCard::release_batid() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaNameCard.batId)
  
  return batid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaNameCard::set_allocated_batid(::std::string* batid) {
  if (batid != NULL) {
    
  } else {
    
  }
  batid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), batid);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaNameCard.batId)
}

// optional string name = 3;
inline void mediaNameCard::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& mediaNameCard::name() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaNameCard.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaNameCard::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaNameCard.name)
}
inline void mediaNameCard::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.mediaNameCard.name)
}
inline void mediaNameCard::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.mediaNameCard.name)
}
inline ::std::string* mediaNameCard::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaNameCard.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mediaNameCard::release_name() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaNameCard.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaNameCard::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaNameCard.name)
}

// optional string avatar = 4;
inline void mediaNameCard::clear_avatar() {
  avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& mediaNameCard::avatar() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaNameCard.avatar)
  return avatar_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaNameCard::set_avatar(const ::std::string& value) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaNameCard.avatar)
}
inline void mediaNameCard::set_avatar(const char* value) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.mediaNameCard.avatar)
}
inline void mediaNameCard::set_avatar(const char* value, size_t size) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.mediaNameCard.avatar)
}
inline ::std::string* mediaNameCard::mutable_avatar() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaNameCard.avatar)
  return avatar_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mediaNameCard::release_avatar() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaNameCard.avatar)
  
  return avatar_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaNameCard::set_allocated_avatar(::std::string* avatar) {
  if (avatar != NULL) {
    
  } else {
    
  }
  avatar_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), avatar);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaNameCard.avatar)
}

inline const mediaNameCard* mediaNameCard::internal_default_instance() {
  return &mediaNameCard_default_instance_.get();
}
// -------------------------------------------------------------------

// mediaFile

// optional int64 fid = 1;
inline void mediaFile::clear_fid() {
  fid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 mediaFile::fid() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaFile.fid)
  return fid_;
}
inline void mediaFile::set_fid(::google::protobuf::int64 value) {
  
  fid_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaFile.fid)
}

// optional string extName = 2;
inline void mediaFile::clear_extname() {
  extname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& mediaFile::extname() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaFile.extName)
  return extname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaFile::set_extname(const ::std::string& value) {
  
  extname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaFile.extName)
}
inline void mediaFile::set_extname(const char* value) {
  
  extname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.mediaFile.extName)
}
inline void mediaFile::set_extname(const char* value, size_t size) {
  
  extname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.mediaFile.extName)
}
inline ::std::string* mediaFile::mutable_extname() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaFile.extName)
  return extname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mediaFile::release_extname() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaFile.extName)
  
  return extname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaFile::set_allocated_extname(::std::string* extname) {
  if (extname != NULL) {
    
  } else {
    
  }
  extname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extname);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaFile.extName)
}

// optional string name = 3;
inline void mediaFile::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& mediaFile::name() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaFile.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaFile::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaFile.name)
}
inline void mediaFile::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.mediaFile.name)
}
inline void mediaFile::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.mediaFile.name)
}
inline ::std::string* mediaFile::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaFile.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mediaFile::release_name() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaFile.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaFile::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaFile.name)
}

// optional uint32 size = 4;
inline void mediaFile::clear_size() {
  size_ = 0u;
}
inline ::google::protobuf::uint32 mediaFile::size() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaFile.size)
  return size_;
}
inline void mediaFile::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaFile.size)
}

// optional string hash = 5;
inline void mediaFile::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& mediaFile::hash() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaFile.hash)
  return hash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaFile::set_hash(const ::std::string& value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaFile.hash)
}
inline void mediaFile::set_hash(const char* value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.mediaFile.hash)
}
inline void mediaFile::set_hash(const char* value, size_t size) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.mediaFile.hash)
}
inline ::std::string* mediaFile::mutable_hash() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaFile.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mediaFile::release_hash() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaFile.hash)
  
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaFile::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaFile.hash)
}

inline const mediaFile* mediaFile::internal_default_instance() {
  return &mediaFile_default_instance_.get();
}
// -------------------------------------------------------------------

// mediaLocation

// optional double latitude = 1;
inline void mediaLocation::clear_latitude() {
  latitude_ = 0;
}
inline double mediaLocation::latitude() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaLocation.latitude)
  return latitude_;
}
inline void mediaLocation::set_latitude(double value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaLocation.latitude)
}

// optional double longitude = 2;
inline void mediaLocation::clear_longitude() {
  longitude_ = 0;
}
inline double mediaLocation::longitude() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaLocation.longitude)
  return longitude_;
}
inline void mediaLocation::set_longitude(double value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaLocation.longitude)
}

// optional string title = 3;
inline void mediaLocation::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& mediaLocation::title() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaLocation.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaLocation::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaLocation.title)
}
inline void mediaLocation::set_title(const char* value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.mediaLocation.title)
}
inline void mediaLocation::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.mediaLocation.title)
}
inline ::std::string* mediaLocation::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaLocation.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mediaLocation::release_title() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaLocation.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaLocation::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaLocation.title)
}

// optional string subtitle = 4;
inline void mediaLocation::clear_subtitle() {
  subtitle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& mediaLocation::subtitle() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaLocation.subtitle)
  return subtitle_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaLocation::set_subtitle(const ::std::string& value) {
  
  subtitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaLocation.subtitle)
}
inline void mediaLocation::set_subtitle(const char* value) {
  
  subtitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.mediaLocation.subtitle)
}
inline void mediaLocation::set_subtitle(const char* value, size_t size) {
  
  subtitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.mediaLocation.subtitle)
}
inline ::std::string* mediaLocation::mutable_subtitle() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.mediaLocation.subtitle)
  return subtitle_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mediaLocation::release_subtitle() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.mediaLocation.subtitle)
  
  return subtitle_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mediaLocation::set_allocated_subtitle(::std::string* subtitle) {
  if (subtitle != NULL) {
    
  } else {
    
  }
  subtitle_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subtitle);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.mediaLocation.subtitle)
}

inline const mediaLocation* mediaLocation::internal_default_instance() {
  return &mediaLocation_default_instance_.get();
}
// -------------------------------------------------------------------

// mediaSticker

// optional uint32 setId = 1;
inline void mediaSticker::clear_setid() {
  setid_ = 0u;
}
inline ::google::protobuf::uint32 mediaSticker::setid() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaSticker.setId)
  return setid_;
}
inline void mediaSticker::set_setid(::google::protobuf::uint32 value) {
  
  setid_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaSticker.setId)
}

// optional uint32 stickerId = 2;
inline void mediaSticker::clear_stickerid() {
  stickerid_ = 0u;
}
inline ::google::protobuf::uint32 mediaSticker::stickerid() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.mediaSticker.stickerId)
  return stickerid_;
}
inline void mediaSticker::set_stickerid(::google::protobuf::uint32 value) {
  
  stickerid_ = value;
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.mediaSticker.stickerId)
}

inline const mediaSticker* mediaSticker::internal_default_instance() {
  return &mediaSticker_default_instance_.get();
}
// -------------------------------------------------------------------

// photo

// optional .uyujoy.api.paasim.frontend.mediaImagePreview preview = 1;
inline bool photo::has_preview() const {
  return this != internal_default_instance() && preview_ != NULL;
}
inline void photo::clear_preview() {
  if (GetArenaNoVirtual() == NULL && preview_ != NULL) delete preview_;
  preview_ = NULL;
}
inline const ::uyujoy::api::paasim::frontend::mediaImagePreview& photo::preview() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.photo.preview)
  return preview_ != NULL ? *preview_
                         : *::uyujoy::api::paasim::frontend::mediaImagePreview::internal_default_instance();
}
inline ::uyujoy::api::paasim::frontend::mediaImagePreview* photo::mutable_preview() {
  
  if (preview_ == NULL) {
    preview_ = new ::uyujoy::api::paasim::frontend::mediaImagePreview;
  }
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.photo.preview)
  return preview_;
}
inline ::uyujoy::api::paasim::frontend::mediaImagePreview* photo::release_preview() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.photo.preview)
  
  ::uyujoy::api::paasim::frontend::mediaImagePreview* temp = preview_;
  preview_ = NULL;
  return temp;
}
inline void photo::set_allocated_preview(::uyujoy::api::paasim::frontend::mediaImagePreview* preview) {
  delete preview_;
  preview_ = preview;
  if (preview) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.photo.preview)
}

// optional .uyujoy.api.paasim.frontend.mediaImageOrigin origin = 2;
inline bool photo::has_origin() const {
  return this != internal_default_instance() && origin_ != NULL;
}
inline void photo::clear_origin() {
  if (GetArenaNoVirtual() == NULL && origin_ != NULL) delete origin_;
  origin_ = NULL;
}
inline const ::uyujoy::api::paasim::frontend::mediaImageOrigin& photo::origin() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.photo.origin)
  return origin_ != NULL ? *origin_
                         : *::uyujoy::api::paasim::frontend::mediaImageOrigin::internal_default_instance();
}
inline ::uyujoy::api::paasim::frontend::mediaImageOrigin* photo::mutable_origin() {
  
  if (origin_ == NULL) {
    origin_ = new ::uyujoy::api::paasim::frontend::mediaImageOrigin;
  }
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.photo.origin)
  return origin_;
}
inline ::uyujoy::api::paasim::frontend::mediaImageOrigin* photo::release_origin() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.photo.origin)
  
  ::uyujoy::api::paasim::frontend::mediaImageOrigin* temp = origin_;
  origin_ = NULL;
  return temp;
}
inline void photo::set_allocated_origin(::uyujoy::api::paasim::frontend::mediaImageOrigin* origin) {
  delete origin_;
  origin_ = origin;
  if (origin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.photo.origin)
}

// optional string oldPhoto = 3;
inline void photo::clear_oldphoto() {
  oldphoto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& photo::oldphoto() const {
  // @@protoc_insertion_point(field_get:uyujoy.api.paasim.frontend.photo.oldPhoto)
  return oldphoto_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void photo::set_oldphoto(const ::std::string& value) {
  
  oldphoto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:uyujoy.api.paasim.frontend.photo.oldPhoto)
}
inline void photo::set_oldphoto(const char* value) {
  
  oldphoto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:uyujoy.api.paasim.frontend.photo.oldPhoto)
}
inline void photo::set_oldphoto(const char* value, size_t size) {
  
  oldphoto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:uyujoy.api.paasim.frontend.photo.oldPhoto)
}
inline ::std::string* photo::mutable_oldphoto() {
  
  // @@protoc_insertion_point(field_mutable:uyujoy.api.paasim.frontend.photo.oldPhoto)
  return oldphoto_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* photo::release_oldphoto() {
  // @@protoc_insertion_point(field_release:uyujoy.api.paasim.frontend.photo.oldPhoto)
  
  return oldphoto_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void photo::set_allocated_oldphoto(::std::string* oldphoto) {
  if (oldphoto != NULL) {
    
  } else {
    
  }
  oldphoto_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oldphoto);
  // @@protoc_insertion_point(field_set_allocated:uyujoy.api.paasim.frontend.photo.oldPhoto)
}

inline const photo* photo::internal_default_instance() {
  return &photo_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace frontend
}  // namespace paasim
}  // namespace api
}  // namespace uyujoy

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mediaBase_2eproto__INCLUDED
