// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/rpc/context/audit_context.proto

package com.google.rpc.context;

/**
 * <pre>
 * `AuditContext` provides information that is needed for audit logging.
 * </pre>
 *
 * Protobuf type {@code google.rpc.context.AuditContext}
 */
public  final class AuditContext extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.rpc.context.AuditContext)
    AuditContextOrBuilder {
  // Use AuditContext.newBuilder() to construct.
  private AuditContext(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AuditContext() {
    auditLog_ = com.google.protobuf.ByteString.EMPTY;
    scrubbedResponseItemCount_ = 0;
    targetResource_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private AuditContext(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {

            auditLog_ = input.readBytes();
            break;
          }
          case 18: {
            com.google.protobuf.Struct.Builder subBuilder = null;
            if (scrubbedRequest_ != null) {
              subBuilder = scrubbedRequest_.toBuilder();
            }
            scrubbedRequest_ = input.readMessage(com.google.protobuf.Struct.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(scrubbedRequest_);
              scrubbedRequest_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            com.google.protobuf.Struct.Builder subBuilder = null;
            if (scrubbedResponse_ != null) {
              subBuilder = scrubbedResponse_.toBuilder();
            }
            scrubbedResponse_ = input.readMessage(com.google.protobuf.Struct.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(scrubbedResponse_);
              scrubbedResponse_ = subBuilder.buildPartial();
            }

            break;
          }
          case 32: {

            scrubbedResponseItemCount_ = input.readInt32();
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            targetResource_ = s;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.rpc.context.AuditContextProto.internal_static_google_rpc_context_AuditContext_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.rpc.context.AuditContextProto.internal_static_google_rpc_context_AuditContext_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.rpc.context.AuditContext.class, com.google.rpc.context.AuditContext.Builder.class);
  }

  public static final int AUDIT_LOG_FIELD_NUMBER = 1;
  private com.google.protobuf.ByteString auditLog_;
  /**
   * <pre>
   * Serialized audit log.
   * </pre>
   *
   * <code>optional bytes audit_log = 1;</code>
   */
  public com.google.protobuf.ByteString getAuditLog() {
    return auditLog_;
  }

  public static final int SCRUBBED_REQUEST_FIELD_NUMBER = 2;
  private com.google.protobuf.Struct scrubbedRequest_;
  /**
   * <pre>
   * An API request message that is scrubbed based on the method annotation.
   * This field should only be filled if audit_log field is present.
   * Service Control will use this to assemble a complete log for Cloud Audit
   * Logs and Google internal audit logs.
   * </pre>
   *
   * <code>optional .google.protobuf.Struct scrubbed_request = 2;</code>
   */
  public boolean hasScrubbedRequest() {
    return scrubbedRequest_ != null;
  }
  /**
   * <pre>
   * An API request message that is scrubbed based on the method annotation.
   * This field should only be filled if audit_log field is present.
   * Service Control will use this to assemble a complete log for Cloud Audit
   * Logs and Google internal audit logs.
   * </pre>
   *
   * <code>optional .google.protobuf.Struct scrubbed_request = 2;</code>
   */
  public com.google.protobuf.Struct getScrubbedRequest() {
    return scrubbedRequest_ == null ? com.google.protobuf.Struct.getDefaultInstance() : scrubbedRequest_;
  }
  /**
   * <pre>
   * An API request message that is scrubbed based on the method annotation.
   * This field should only be filled if audit_log field is present.
   * Service Control will use this to assemble a complete log for Cloud Audit
   * Logs and Google internal audit logs.
   * </pre>
   *
   * <code>optional .google.protobuf.Struct scrubbed_request = 2;</code>
   */
  public com.google.protobuf.StructOrBuilder getScrubbedRequestOrBuilder() {
    return getScrubbedRequest();
  }

  public static final int SCRUBBED_RESPONSE_FIELD_NUMBER = 3;
  private com.google.protobuf.Struct scrubbedResponse_;
  /**
   * <pre>
   * An API response message that is scrubbed based on the method annotation.
   * This field should only be filled if audit_log field is present.
   * Service Control will use this to assemble a complete log for Cloud Audit
   * Logs and Google internal audit logs.
   * </pre>
   *
   * <code>optional .google.protobuf.Struct scrubbed_response = 3;</code>
   */
  public boolean hasScrubbedResponse() {
    return scrubbedResponse_ != null;
  }
  /**
   * <pre>
   * An API response message that is scrubbed based on the method annotation.
   * This field should only be filled if audit_log field is present.
   * Service Control will use this to assemble a complete log for Cloud Audit
   * Logs and Google internal audit logs.
   * </pre>
   *
   * <code>optional .google.protobuf.Struct scrubbed_response = 3;</code>
   */
  public com.google.protobuf.Struct getScrubbedResponse() {
    return scrubbedResponse_ == null ? com.google.protobuf.Struct.getDefaultInstance() : scrubbedResponse_;
  }
  /**
   * <pre>
   * An API response message that is scrubbed based on the method annotation.
   * This field should only be filled if audit_log field is present.
   * Service Control will use this to assemble a complete log for Cloud Audit
   * Logs and Google internal audit logs.
   * </pre>
   *
   * <code>optional .google.protobuf.Struct scrubbed_response = 3;</code>
   */
  public com.google.protobuf.StructOrBuilder getScrubbedResponseOrBuilder() {
    return getScrubbedResponse();
  }

  public static final int SCRUBBED_RESPONSE_ITEM_COUNT_FIELD_NUMBER = 4;
  private int scrubbedResponseItemCount_;
  /**
   * <pre>
   * Number of scrubbed response items.
   * </pre>
   *
   * <code>optional int32 scrubbed_response_item_count = 4;</code>
   */
  public int getScrubbedResponseItemCount() {
    return scrubbedResponseItemCount_;
  }

  public static final int TARGET_RESOURCE_FIELD_NUMBER = 5;
  private volatile java.lang.Object targetResource_;
  /**
   * <pre>
   * Audit resource name which is scrubbed.
   * </pre>
   *
   * <code>optional string target_resource = 5;</code>
   */
  public java.lang.String getTargetResource() {
    java.lang.Object ref = targetResource_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      targetResource_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Audit resource name which is scrubbed.
   * </pre>
   *
   * <code>optional string target_resource = 5;</code>
   */
  public com.google.protobuf.ByteString
      getTargetResourceBytes() {
    java.lang.Object ref = targetResource_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      targetResource_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!auditLog_.isEmpty()) {
      output.writeBytes(1, auditLog_);
    }
    if (scrubbedRequest_ != null) {
      output.writeMessage(2, getScrubbedRequest());
    }
    if (scrubbedResponse_ != null) {
      output.writeMessage(3, getScrubbedResponse());
    }
    if (scrubbedResponseItemCount_ != 0) {
      output.writeInt32(4, scrubbedResponseItemCount_);
    }
    if (!getTargetResourceBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, targetResource_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!auditLog_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(1, auditLog_);
    }
    if (scrubbedRequest_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getScrubbedRequest());
    }
    if (scrubbedResponse_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getScrubbedResponse());
    }
    if (scrubbedResponseItemCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, scrubbedResponseItemCount_);
    }
    if (!getTargetResourceBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, targetResource_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.rpc.context.AuditContext)) {
      return super.equals(obj);
    }
    com.google.rpc.context.AuditContext other = (com.google.rpc.context.AuditContext) obj;

    boolean result = true;
    result = result && getAuditLog()
        .equals(other.getAuditLog());
    result = result && (hasScrubbedRequest() == other.hasScrubbedRequest());
    if (hasScrubbedRequest()) {
      result = result && getScrubbedRequest()
          .equals(other.getScrubbedRequest());
    }
    result = result && (hasScrubbedResponse() == other.hasScrubbedResponse());
    if (hasScrubbedResponse()) {
      result = result && getScrubbedResponse()
          .equals(other.getScrubbedResponse());
    }
    result = result && (getScrubbedResponseItemCount()
        == other.getScrubbedResponseItemCount());
    result = result && getTargetResource()
        .equals(other.getTargetResource());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    hash = (37 * hash) + AUDIT_LOG_FIELD_NUMBER;
    hash = (53 * hash) + getAuditLog().hashCode();
    if (hasScrubbedRequest()) {
      hash = (37 * hash) + SCRUBBED_REQUEST_FIELD_NUMBER;
      hash = (53 * hash) + getScrubbedRequest().hashCode();
    }
    if (hasScrubbedResponse()) {
      hash = (37 * hash) + SCRUBBED_RESPONSE_FIELD_NUMBER;
      hash = (53 * hash) + getScrubbedResponse().hashCode();
    }
    hash = (37 * hash) + SCRUBBED_RESPONSE_ITEM_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getScrubbedResponseItemCount();
    hash = (37 * hash) + TARGET_RESOURCE_FIELD_NUMBER;
    hash = (53 * hash) + getTargetResource().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.rpc.context.AuditContext parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.rpc.context.AuditContext parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.rpc.context.AuditContext parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.rpc.context.AuditContext parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.rpc.context.AuditContext parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.rpc.context.AuditContext parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.rpc.context.AuditContext parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.rpc.context.AuditContext parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.rpc.context.AuditContext parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.rpc.context.AuditContext parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.rpc.context.AuditContext prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * `AuditContext` provides information that is needed for audit logging.
   * </pre>
   *
   * Protobuf type {@code google.rpc.context.AuditContext}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.rpc.context.AuditContext)
      com.google.rpc.context.AuditContextOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.rpc.context.AuditContextProto.internal_static_google_rpc_context_AuditContext_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.rpc.context.AuditContextProto.internal_static_google_rpc_context_AuditContext_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.rpc.context.AuditContext.class, com.google.rpc.context.AuditContext.Builder.class);
    }

    // Construct using com.google.rpc.context.AuditContext.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      auditLog_ = com.google.protobuf.ByteString.EMPTY;

      if (scrubbedRequestBuilder_ == null) {
        scrubbedRequest_ = null;
      } else {
        scrubbedRequest_ = null;
        scrubbedRequestBuilder_ = null;
      }
      if (scrubbedResponseBuilder_ == null) {
        scrubbedResponse_ = null;
      } else {
        scrubbedResponse_ = null;
        scrubbedResponseBuilder_ = null;
      }
      scrubbedResponseItemCount_ = 0;

      targetResource_ = "";

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.rpc.context.AuditContextProto.internal_static_google_rpc_context_AuditContext_descriptor;
    }

    public com.google.rpc.context.AuditContext getDefaultInstanceForType() {
      return com.google.rpc.context.AuditContext.getDefaultInstance();
    }

    public com.google.rpc.context.AuditContext build() {
      com.google.rpc.context.AuditContext result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.rpc.context.AuditContext buildPartial() {
      com.google.rpc.context.AuditContext result = new com.google.rpc.context.AuditContext(this);
      result.auditLog_ = auditLog_;
      if (scrubbedRequestBuilder_ == null) {
        result.scrubbedRequest_ = scrubbedRequest_;
      } else {
        result.scrubbedRequest_ = scrubbedRequestBuilder_.build();
      }
      if (scrubbedResponseBuilder_ == null) {
        result.scrubbedResponse_ = scrubbedResponse_;
      } else {
        result.scrubbedResponse_ = scrubbedResponseBuilder_.build();
      }
      result.scrubbedResponseItemCount_ = scrubbedResponseItemCount_;
      result.targetResource_ = targetResource_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.rpc.context.AuditContext) {
        return mergeFrom((com.google.rpc.context.AuditContext)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.rpc.context.AuditContext other) {
      if (other == com.google.rpc.context.AuditContext.getDefaultInstance()) return this;
      if (other.getAuditLog() != com.google.protobuf.ByteString.EMPTY) {
        setAuditLog(other.getAuditLog());
      }
      if (other.hasScrubbedRequest()) {
        mergeScrubbedRequest(other.getScrubbedRequest());
      }
      if (other.hasScrubbedResponse()) {
        mergeScrubbedResponse(other.getScrubbedResponse());
      }
      if (other.getScrubbedResponseItemCount() != 0) {
        setScrubbedResponseItemCount(other.getScrubbedResponseItemCount());
      }
      if (!other.getTargetResource().isEmpty()) {
        targetResource_ = other.targetResource_;
        onChanged();
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.rpc.context.AuditContext parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.rpc.context.AuditContext) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.google.protobuf.ByteString auditLog_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * Serialized audit log.
     * </pre>
     *
     * <code>optional bytes audit_log = 1;</code>
     */
    public com.google.protobuf.ByteString getAuditLog() {
      return auditLog_;
    }
    /**
     * <pre>
     * Serialized audit log.
     * </pre>
     *
     * <code>optional bytes audit_log = 1;</code>
     */
    public Builder setAuditLog(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      auditLog_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Serialized audit log.
     * </pre>
     *
     * <code>optional bytes audit_log = 1;</code>
     */
    public Builder clearAuditLog() {
      
      auditLog_ = getDefaultInstance().getAuditLog();
      onChanged();
      return this;
    }

    private com.google.protobuf.Struct scrubbedRequest_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> scrubbedRequestBuilder_;
    /**
     * <pre>
     * An API request message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>optional .google.protobuf.Struct scrubbed_request = 2;</code>
     */
    public boolean hasScrubbedRequest() {
      return scrubbedRequestBuilder_ != null || scrubbedRequest_ != null;
    }
    /**
     * <pre>
     * An API request message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>optional .google.protobuf.Struct scrubbed_request = 2;</code>
     */
    public com.google.protobuf.Struct getScrubbedRequest() {
      if (scrubbedRequestBuilder_ == null) {
        return scrubbedRequest_ == null ? com.google.protobuf.Struct.getDefaultInstance() : scrubbedRequest_;
      } else {
        return scrubbedRequestBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * An API request message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>optional .google.protobuf.Struct scrubbed_request = 2;</code>
     */
    public Builder setScrubbedRequest(com.google.protobuf.Struct value) {
      if (scrubbedRequestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        scrubbedRequest_ = value;
        onChanged();
      } else {
        scrubbedRequestBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * An API request message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>optional .google.protobuf.Struct scrubbed_request = 2;</code>
     */
    public Builder setScrubbedRequest(
        com.google.protobuf.Struct.Builder builderForValue) {
      if (scrubbedRequestBuilder_ == null) {
        scrubbedRequest_ = builderForValue.build();
        onChanged();
      } else {
        scrubbedRequestBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * An API request message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>optional .google.protobuf.Struct scrubbed_request = 2;</code>
     */
    public Builder mergeScrubbedRequest(com.google.protobuf.Struct value) {
      if (scrubbedRequestBuilder_ == null) {
        if (scrubbedRequest_ != null) {
          scrubbedRequest_ =
            com.google.protobuf.Struct.newBuilder(scrubbedRequest_).mergeFrom(value).buildPartial();
        } else {
          scrubbedRequest_ = value;
        }
        onChanged();
      } else {
        scrubbedRequestBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * An API request message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>optional .google.protobuf.Struct scrubbed_request = 2;</code>
     */
    public Builder clearScrubbedRequest() {
      if (scrubbedRequestBuilder_ == null) {
        scrubbedRequest_ = null;
        onChanged();
      } else {
        scrubbedRequest_ = null;
        scrubbedRequestBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * An API request message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>optional .google.protobuf.Struct scrubbed_request = 2;</code>
     */
    public com.google.protobuf.Struct.Builder getScrubbedRequestBuilder() {
      
      onChanged();
      return getScrubbedRequestFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * An API request message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>optional .google.protobuf.Struct scrubbed_request = 2;</code>
     */
    public com.google.protobuf.StructOrBuilder getScrubbedRequestOrBuilder() {
      if (scrubbedRequestBuilder_ != null) {
        return scrubbedRequestBuilder_.getMessageOrBuilder();
      } else {
        return scrubbedRequest_ == null ?
            com.google.protobuf.Struct.getDefaultInstance() : scrubbedRequest_;
      }
    }
    /**
     * <pre>
     * An API request message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>optional .google.protobuf.Struct scrubbed_request = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> 
        getScrubbedRequestFieldBuilder() {
      if (scrubbedRequestBuilder_ == null) {
        scrubbedRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder>(
                getScrubbedRequest(),
                getParentForChildren(),
                isClean());
        scrubbedRequest_ = null;
      }
      return scrubbedRequestBuilder_;
    }

    private com.google.protobuf.Struct scrubbedResponse_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> scrubbedResponseBuilder_;
    /**
     * <pre>
     * An API response message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>optional .google.protobuf.Struct scrubbed_response = 3;</code>
     */
    public boolean hasScrubbedResponse() {
      return scrubbedResponseBuilder_ != null || scrubbedResponse_ != null;
    }
    /**
     * <pre>
     * An API response message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>optional .google.protobuf.Struct scrubbed_response = 3;</code>
     */
    public com.google.protobuf.Struct getScrubbedResponse() {
      if (scrubbedResponseBuilder_ == null) {
        return scrubbedResponse_ == null ? com.google.protobuf.Struct.getDefaultInstance() : scrubbedResponse_;
      } else {
        return scrubbedResponseBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * An API response message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>optional .google.protobuf.Struct scrubbed_response = 3;</code>
     */
    public Builder setScrubbedResponse(com.google.protobuf.Struct value) {
      if (scrubbedResponseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        scrubbedResponse_ = value;
        onChanged();
      } else {
        scrubbedResponseBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * An API response message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>optional .google.protobuf.Struct scrubbed_response = 3;</code>
     */
    public Builder setScrubbedResponse(
        com.google.protobuf.Struct.Builder builderForValue) {
      if (scrubbedResponseBuilder_ == null) {
        scrubbedResponse_ = builderForValue.build();
        onChanged();
      } else {
        scrubbedResponseBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * An API response message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>optional .google.protobuf.Struct scrubbed_response = 3;</code>
     */
    public Builder mergeScrubbedResponse(com.google.protobuf.Struct value) {
      if (scrubbedResponseBuilder_ == null) {
        if (scrubbedResponse_ != null) {
          scrubbedResponse_ =
            com.google.protobuf.Struct.newBuilder(scrubbedResponse_).mergeFrom(value).buildPartial();
        } else {
          scrubbedResponse_ = value;
        }
        onChanged();
      } else {
        scrubbedResponseBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * An API response message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>optional .google.protobuf.Struct scrubbed_response = 3;</code>
     */
    public Builder clearScrubbedResponse() {
      if (scrubbedResponseBuilder_ == null) {
        scrubbedResponse_ = null;
        onChanged();
      } else {
        scrubbedResponse_ = null;
        scrubbedResponseBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * An API response message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>optional .google.protobuf.Struct scrubbed_response = 3;</code>
     */
    public com.google.protobuf.Struct.Builder getScrubbedResponseBuilder() {
      
      onChanged();
      return getScrubbedResponseFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * An API response message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>optional .google.protobuf.Struct scrubbed_response = 3;</code>
     */
    public com.google.protobuf.StructOrBuilder getScrubbedResponseOrBuilder() {
      if (scrubbedResponseBuilder_ != null) {
        return scrubbedResponseBuilder_.getMessageOrBuilder();
      } else {
        return scrubbedResponse_ == null ?
            com.google.protobuf.Struct.getDefaultInstance() : scrubbedResponse_;
      }
    }
    /**
     * <pre>
     * An API response message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>optional .google.protobuf.Struct scrubbed_response = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> 
        getScrubbedResponseFieldBuilder() {
      if (scrubbedResponseBuilder_ == null) {
        scrubbedResponseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder>(
                getScrubbedResponse(),
                getParentForChildren(),
                isClean());
        scrubbedResponse_ = null;
      }
      return scrubbedResponseBuilder_;
    }

    private int scrubbedResponseItemCount_ ;
    /**
     * <pre>
     * Number of scrubbed response items.
     * </pre>
     *
     * <code>optional int32 scrubbed_response_item_count = 4;</code>
     */
    public int getScrubbedResponseItemCount() {
      return scrubbedResponseItemCount_;
    }
    /**
     * <pre>
     * Number of scrubbed response items.
     * </pre>
     *
     * <code>optional int32 scrubbed_response_item_count = 4;</code>
     */
    public Builder setScrubbedResponseItemCount(int value) {
      
      scrubbedResponseItemCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of scrubbed response items.
     * </pre>
     *
     * <code>optional int32 scrubbed_response_item_count = 4;</code>
     */
    public Builder clearScrubbedResponseItemCount() {
      
      scrubbedResponseItemCount_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object targetResource_ = "";
    /**
     * <pre>
     * Audit resource name which is scrubbed.
     * </pre>
     *
     * <code>optional string target_resource = 5;</code>
     */
    public java.lang.String getTargetResource() {
      java.lang.Object ref = targetResource_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        targetResource_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Audit resource name which is scrubbed.
     * </pre>
     *
     * <code>optional string target_resource = 5;</code>
     */
    public com.google.protobuf.ByteString
        getTargetResourceBytes() {
      java.lang.Object ref = targetResource_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        targetResource_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Audit resource name which is scrubbed.
     * </pre>
     *
     * <code>optional string target_resource = 5;</code>
     */
    public Builder setTargetResource(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      targetResource_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Audit resource name which is scrubbed.
     * </pre>
     *
     * <code>optional string target_resource = 5;</code>
     */
    public Builder clearTargetResource() {
      
      targetResource_ = getDefaultInstance().getTargetResource();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Audit resource name which is scrubbed.
     * </pre>
     *
     * <code>optional string target_resource = 5;</code>
     */
    public Builder setTargetResourceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      targetResource_ = value;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:google.rpc.context.AuditContext)
  }

  // @@protoc_insertion_point(class_scope:google.rpc.context.AuditContext)
  private static final com.google.rpc.context.AuditContext DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.rpc.context.AuditContext();
  }

  public static com.google.rpc.context.AuditContext getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AuditContext>
      PARSER = new com.google.protobuf.AbstractParser<AuditContext>() {
    public AuditContext parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new AuditContext(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AuditContext> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AuditContext> getParserForType() {
    return PARSER;
  }

  public com.google.rpc.context.AuditContext getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

